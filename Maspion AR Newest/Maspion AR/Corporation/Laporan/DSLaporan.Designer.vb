'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSLaporan"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSLaporan
    Inherits Global.System.Data.DataSet
    
    Private tableDAILY_SALES_REPORT As DAILY_SALES_REPORTDataTable
    
    Private tableKARTU_STOK As KARTU_STOKDataTable
    
    Private tableLAPORAN_PEMBELIAN As LAPORAN_PEMBELIANDataTable
    
    Private tableLAPORAN_DO As LAPORAN_DODataTable
    
    Private tableLAPORAN_DETAIL_DO As LAPORAN_DETAIL_DODataTable
    
    Private tablePRICE_LIST As PRICE_LISTDataTable
    
    Private tablePROC_SALDO_STOK As PROC_SALDO_STOKDataTable
    
    Private tableLAPORAN_PENJUALAN As LAPORAN_PENJUALANDataTable
    
    Private tableLPBL As LPBLDataTable
    
    Private tableLAPORAN_DETAIL_BARANG_DO As LAPORAN_DETAIL_BARANG_DODataTable
    
    Private tableLAPORAN_TRANSFER_GUDANG As LAPORAN_TRANSFER_GUDANGDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DAILY_SALES_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New DAILY_SALES_REPORTDataTable(ds.Tables("DAILY_SALES_REPORT")))
            End If
            If (Not (ds.Tables("KARTU_STOK")) Is Nothing) Then
                MyBase.Tables.Add(New KARTU_STOKDataTable(ds.Tables("KARTU_STOK")))
            End If
            If (Not (ds.Tables("LAPORAN_PEMBELIAN")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_PEMBELIANDataTable(ds.Tables("LAPORAN_PEMBELIAN")))
            End If
            If (Not (ds.Tables("LAPORAN_DO")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_DODataTable(ds.Tables("LAPORAN_DO")))
            End If
            If (Not (ds.Tables("LAPORAN_DETAIL_DO")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_DETAIL_DODataTable(ds.Tables("LAPORAN_DETAIL_DO")))
            End If
            If (Not (ds.Tables("PRICE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New PRICE_LISTDataTable(ds.Tables("PRICE_LIST")))
            End If
            If (Not (ds.Tables("PROC_SALDO_STOK")) Is Nothing) Then
                MyBase.Tables.Add(New PROC_SALDO_STOKDataTable(ds.Tables("PROC_SALDO_STOK")))
            End If
            If (Not (ds.Tables("LAPORAN_PENJUALAN")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_PENJUALANDataTable(ds.Tables("LAPORAN_PENJUALAN")))
            End If
            If (Not (ds.Tables("LPBL")) Is Nothing) Then
                MyBase.Tables.Add(New LPBLDataTable(ds.Tables("LPBL")))
            End If
            If (Not (ds.Tables("LAPORAN_DETAIL_BARANG_DO")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_DETAIL_BARANG_DODataTable(ds.Tables("LAPORAN_DETAIL_BARANG_DO")))
            End If
            If (Not (ds.Tables("LAPORAN_TRANSFER_GUDANG")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_TRANSFER_GUDANGDataTable(ds.Tables("LAPORAN_TRANSFER_GUDANG")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DAILY_SALES_REPORT() As DAILY_SALES_REPORTDataTable
        Get
            Return Me.tableDAILY_SALES_REPORT
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property KARTU_STOK() As KARTU_STOKDataTable
        Get
            Return Me.tableKARTU_STOK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LAPORAN_PEMBELIAN() As LAPORAN_PEMBELIANDataTable
        Get
            Return Me.tableLAPORAN_PEMBELIAN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LAPORAN_DO() As LAPORAN_DODataTable
        Get
            Return Me.tableLAPORAN_DO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LAPORAN_DETAIL_DO() As LAPORAN_DETAIL_DODataTable
        Get
            Return Me.tableLAPORAN_DETAIL_DO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRICE_LIST() As PRICE_LISTDataTable
        Get
            Return Me.tablePRICE_LIST
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROC_SALDO_STOK() As PROC_SALDO_STOKDataTable
        Get
            Return Me.tablePROC_SALDO_STOK
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LAPORAN_PENJUALAN() As LAPORAN_PENJUALANDataTable
        Get
            Return Me.tableLAPORAN_PENJUALAN
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LPBL() As LPBLDataTable
        Get
            Return Me.tableLPBL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LAPORAN_DETAIL_BARANG_DO() As LAPORAN_DETAIL_BARANG_DODataTable
        Get
            Return Me.tableLAPORAN_DETAIL_BARANG_DO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property LAPORAN_TRANSFER_GUDANG() As LAPORAN_TRANSFER_GUDANGDataTable
        Get
            Return Me.tableLAPORAN_TRANSFER_GUDANG
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSLaporan = CType(MyBase.Clone,DSLaporan)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("DAILY_SALES_REPORT")) Is Nothing) Then
                MyBase.Tables.Add(New DAILY_SALES_REPORTDataTable(ds.Tables("DAILY_SALES_REPORT")))
            End If
            If (Not (ds.Tables("KARTU_STOK")) Is Nothing) Then
                MyBase.Tables.Add(New KARTU_STOKDataTable(ds.Tables("KARTU_STOK")))
            End If
            If (Not (ds.Tables("LAPORAN_PEMBELIAN")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_PEMBELIANDataTable(ds.Tables("LAPORAN_PEMBELIAN")))
            End If
            If (Not (ds.Tables("LAPORAN_DO")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_DODataTable(ds.Tables("LAPORAN_DO")))
            End If
            If (Not (ds.Tables("LAPORAN_DETAIL_DO")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_DETAIL_DODataTable(ds.Tables("LAPORAN_DETAIL_DO")))
            End If
            If (Not (ds.Tables("PRICE_LIST")) Is Nothing) Then
                MyBase.Tables.Add(New PRICE_LISTDataTable(ds.Tables("PRICE_LIST")))
            End If
            If (Not (ds.Tables("PROC_SALDO_STOK")) Is Nothing) Then
                MyBase.Tables.Add(New PROC_SALDO_STOKDataTable(ds.Tables("PROC_SALDO_STOK")))
            End If
            If (Not (ds.Tables("LAPORAN_PENJUALAN")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_PENJUALANDataTable(ds.Tables("LAPORAN_PENJUALAN")))
            End If
            If (Not (ds.Tables("LPBL")) Is Nothing) Then
                MyBase.Tables.Add(New LPBLDataTable(ds.Tables("LPBL")))
            End If
            If (Not (ds.Tables("LAPORAN_DETAIL_BARANG_DO")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_DETAIL_BARANG_DODataTable(ds.Tables("LAPORAN_DETAIL_BARANG_DO")))
            End If
            If (Not (ds.Tables("LAPORAN_TRANSFER_GUDANG")) Is Nothing) Then
                MyBase.Tables.Add(New LAPORAN_TRANSFER_GUDANGDataTable(ds.Tables("LAPORAN_TRANSFER_GUDANG")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDAILY_SALES_REPORT = CType(MyBase.Tables("DAILY_SALES_REPORT"),DAILY_SALES_REPORTDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDAILY_SALES_REPORT) Is Nothing) Then
                Me.tableDAILY_SALES_REPORT.InitVars
            End If
        End If
        Me.tableKARTU_STOK = CType(MyBase.Tables("KARTU_STOK"),KARTU_STOKDataTable)
        If (initTable = true) Then
            If (Not (Me.tableKARTU_STOK) Is Nothing) Then
                Me.tableKARTU_STOK.InitVars
            End If
        End If
        Me.tableLAPORAN_PEMBELIAN = CType(MyBase.Tables("LAPORAN_PEMBELIAN"),LAPORAN_PEMBELIANDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLAPORAN_PEMBELIAN) Is Nothing) Then
                Me.tableLAPORAN_PEMBELIAN.InitVars
            End If
        End If
        Me.tableLAPORAN_DO = CType(MyBase.Tables("LAPORAN_DO"),LAPORAN_DODataTable)
        If (initTable = true) Then
            If (Not (Me.tableLAPORAN_DO) Is Nothing) Then
                Me.tableLAPORAN_DO.InitVars
            End If
        End If
        Me.tableLAPORAN_DETAIL_DO = CType(MyBase.Tables("LAPORAN_DETAIL_DO"),LAPORAN_DETAIL_DODataTable)
        If (initTable = true) Then
            If (Not (Me.tableLAPORAN_DETAIL_DO) Is Nothing) Then
                Me.tableLAPORAN_DETAIL_DO.InitVars
            End If
        End If
        Me.tablePRICE_LIST = CType(MyBase.Tables("PRICE_LIST"),PRICE_LISTDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRICE_LIST) Is Nothing) Then
                Me.tablePRICE_LIST.InitVars
            End If
        End If
        Me.tablePROC_SALDO_STOK = CType(MyBase.Tables("PROC_SALDO_STOK"),PROC_SALDO_STOKDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROC_SALDO_STOK) Is Nothing) Then
                Me.tablePROC_SALDO_STOK.InitVars
            End If
        End If
        Me.tableLAPORAN_PENJUALAN = CType(MyBase.Tables("LAPORAN_PENJUALAN"),LAPORAN_PENJUALANDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLAPORAN_PENJUALAN) Is Nothing) Then
                Me.tableLAPORAN_PENJUALAN.InitVars
            End If
        End If
        Me.tableLPBL = CType(MyBase.Tables("LPBL"),LPBLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLPBL) Is Nothing) Then
                Me.tableLPBL.InitVars
            End If
        End If
        Me.tableLAPORAN_DETAIL_BARANG_DO = CType(MyBase.Tables("LAPORAN_DETAIL_BARANG_DO"),LAPORAN_DETAIL_BARANG_DODataTable)
        If (initTable = true) Then
            If (Not (Me.tableLAPORAN_DETAIL_BARANG_DO) Is Nothing) Then
                Me.tableLAPORAN_DETAIL_BARANG_DO.InitVars
            End If
        End If
        Me.tableLAPORAN_TRANSFER_GUDANG = CType(MyBase.Tables("LAPORAN_TRANSFER_GUDANG"),LAPORAN_TRANSFER_GUDANGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLAPORAN_TRANSFER_GUDANG) Is Nothing) Then
                Me.tableLAPORAN_TRANSFER_GUDANG.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSLaporan"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSLaporan.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDAILY_SALES_REPORT = New DAILY_SALES_REPORTDataTable()
        MyBase.Tables.Add(Me.tableDAILY_SALES_REPORT)
        Me.tableKARTU_STOK = New KARTU_STOKDataTable()
        MyBase.Tables.Add(Me.tableKARTU_STOK)
        Me.tableLAPORAN_PEMBELIAN = New LAPORAN_PEMBELIANDataTable()
        MyBase.Tables.Add(Me.tableLAPORAN_PEMBELIAN)
        Me.tableLAPORAN_DO = New LAPORAN_DODataTable()
        MyBase.Tables.Add(Me.tableLAPORAN_DO)
        Me.tableLAPORAN_DETAIL_DO = New LAPORAN_DETAIL_DODataTable()
        MyBase.Tables.Add(Me.tableLAPORAN_DETAIL_DO)
        Me.tablePRICE_LIST = New PRICE_LISTDataTable()
        MyBase.Tables.Add(Me.tablePRICE_LIST)
        Me.tablePROC_SALDO_STOK = New PROC_SALDO_STOKDataTable()
        MyBase.Tables.Add(Me.tablePROC_SALDO_STOK)
        Me.tableLAPORAN_PENJUALAN = New LAPORAN_PENJUALANDataTable()
        MyBase.Tables.Add(Me.tableLAPORAN_PENJUALAN)
        Me.tableLPBL = New LPBLDataTable()
        MyBase.Tables.Add(Me.tableLPBL)
        Me.tableLAPORAN_DETAIL_BARANG_DO = New LAPORAN_DETAIL_BARANG_DODataTable()
        MyBase.Tables.Add(Me.tableLAPORAN_DETAIL_BARANG_DO)
        Me.tableLAPORAN_TRANSFER_GUDANG = New LAPORAN_TRANSFER_GUDANGDataTable()
        MyBase.Tables.Add(Me.tableLAPORAN_TRANSFER_GUDANG)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDAILY_SALES_REPORT() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeKARTU_STOK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLAPORAN_PEMBELIAN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLAPORAN_DO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLAPORAN_DETAIL_DO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRICE_LIST() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROC_SALDO_STOK() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLAPORAN_PENJUALAN() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLPBL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLAPORAN_DETAIL_BARANG_DO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLAPORAN_TRANSFER_GUDANG() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSLaporan = New DSLaporan()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DAILY_SALES_REPORTRowChangeEventHandler(ByVal sender As Object, ByVal e As DAILY_SALES_REPORTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub KARTU_STOKRowChangeEventHandler(ByVal sender As Object, ByVal e As KARTU_STOKRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LAPORAN_PEMBELIANRowChangeEventHandler(ByVal sender As Object, ByVal e As LAPORAN_PEMBELIANRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LAPORAN_DORowChangeEventHandler(ByVal sender As Object, ByVal e As LAPORAN_DORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LAPORAN_DETAIL_DORowChangeEventHandler(ByVal sender As Object, ByVal e As LAPORAN_DETAIL_DORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRICE_LISTRowChangeEventHandler(ByVal sender As Object, ByVal e As PRICE_LISTRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROC_SALDO_STOKRowChangeEventHandler(ByVal sender As Object, ByVal e As PROC_SALDO_STOKRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LAPORAN_PENJUALANRowChangeEventHandler(ByVal sender As Object, ByVal e As LAPORAN_PENJUALANRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LPBLRowChangeEventHandler(ByVal sender As Object, ByVal e As LPBLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LAPORAN_DETAIL_BARANG_DORowChangeEventHandler(ByVal sender As Object, ByVal e As LAPORAN_DETAIL_BARANG_DORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LAPORAN_TRANSFER_GUDANGRowChangeEventHandler(ByVal sender As Object, ByVal e As LAPORAN_TRANSFER_GUDANGRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DAILY_SALES_REPORTDataTable
        Inherits Global.System.Data.TypedTableBase(Of DAILY_SALES_REPORTRow)
        
        Private columnID_TRANSAKSI As Global.System.Data.DataColumn
        
        Private columnNO_NOTA As Global.System.Data.DataColumn
        
        Private columnNO_REF As Global.System.Data.DataColumn
        
        Private columnTGL As Global.System.Data.DataColumn
        
        Private columnTGL_PENGAKUAN As Global.System.Data.DataColumn
        
        Private columnID_DO As Global.System.Data.DataColumn
        
        Private columnNO_DO As Global.System.Data.DataColumn
        
        Private columnTGL_DO As Global.System.Data.DataColumn
        
        Private columnDIVISI As Global.System.Data.DataColumn
        
        Private columnJENIS_PPN As Global.System.Data.DataColumn
        
        Private columnKODE_CUSTOMER As Global.System.Data.DataColumn
        
        Private columnKODE_APPROVE As Global.System.Data.DataColumn
        
        Private columnCABANG As Global.System.Data.DataColumn
        
        Private columnALAMAT_KIRIM As Global.System.Data.DataColumn
        
        Private columnGUDANG As Global.System.Data.DataColumn
        
        Private columnSJ_TANPA_HARGA As Global.System.Data.DataColumn
        
        Private columnKETERANGAN_CETAK As Global.System.Data.DataColumn
        
        Private columnKETERANGAN_INTERNAL As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL As Global.System.Data.DataColumn
        
        Private columnDPP As Global.System.Data.DataColumn
        
        Private columnPPN As Global.System.Data.DataColumn
        
        Private columnPERIODE As Global.System.Data.DataColumn
        
        Private columnCRUSER As Global.System.Data.DataColumn
        
        Private columnCRTIME As Global.System.Data.DataColumn
        
        Private columnMDUSER As Global.System.Data.DataColumn
        
        Private columnMDTIME As Global.System.Data.DataColumn
        
        Private columnBATAL As Global.System.Data.DataColumn
        
        Private columnBAGIAN As Global.System.Data.DataColumn
        
        Private columnID_STUFFING As Global.System.Data.DataColumn
        
        Private columnKODE_EKSPEDISI As Global.System.Data.DataColumn
        
        Private columnNO_TRUK As Global.System.Data.DataColumn
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        Private columnPEMBAYARAN As Global.System.Data.DataColumn
        
        Private columnNO_DO1 As Global.System.Data.DataColumn
        
        Private columnDISC_QTY As Global.System.Data.DataColumn
        
        Private columnDISC_QTY_NOMINAL As Global.System.Data.DataColumn
        
        Private columnDISC_REG As Global.System.Data.DataColumn
        
        Private columnDISC_REG_NOMINAL As Global.System.Data.DataColumn
        
        Private columnDISC_1 As Global.System.Data.DataColumn
        
        Private columnDISC_1_NOMINAL As Global.System.Data.DataColumn
        
        Private columnDISC_2 As Global.System.Data.DataColumn
        
        Private columnDISC_2_NOMINAL As Global.System.Data.DataColumn
        
        Private columnDISC_3 As Global.System.Data.DataColumn
        
        Private columnCASH_DISC As Global.System.Data.DataColumn
        
        Private columnDISC_3_NOMINAL As Global.System.Data.DataColumn
        
        Private columnCASH_DISC_NOMINAL As Global.System.Data.DataColumn
        
        Private columnDISC_QTY1 As Global.System.Data.DataColumn
        
        Private columnDISC_QTY_NOMINAL1 As Global.System.Data.DataColumn
        
        Private columnNAMA_GUDANG As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DAILY_SALES_REPORT"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TRANSAKSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TRANSAKSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_NOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_NOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PENGAKUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PENGAKUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JENIS_PPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJENIS_PPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_CUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_APPROVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_APPROVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CABANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCABANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ALAMAT_KIRIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALAMAT_KIRIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SJ_TANPA_HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSJ_TANPA_HARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KETERANGAN_CETAKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKETERANGAN_CETAK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KETERANGAN_INTERNALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKETERANGAN_INTERNAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CRUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CRTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCRTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MDUSERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDUSER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MDTIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMDTIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BAGIANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAGIAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_STUFFINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_STUFFING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_EKSPEDISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_EKSPEDISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_TRUKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_TRUK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PEMBAYARANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPEMBAYARAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_DO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_DO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_REG_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_REG_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_1_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_1_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_2_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_2_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CASH_DISCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASH_DISC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_3_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_3_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CASH_DISC_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASH_DISC_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY_NOMINAL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY_NOMINAL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_GUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DAILY_SALES_REPORTRow
            Get
                Return CType(Me.Rows(index),DAILY_SALES_REPORTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DAILY_SALES_REPORTRowChanging As DAILY_SALES_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DAILY_SALES_REPORTRowChanged As DAILY_SALES_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DAILY_SALES_REPORTRowDeleting As DAILY_SALES_REPORTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DAILY_SALES_REPORTRowDeleted As DAILY_SALES_REPORTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDAILY_SALES_REPORTRow(ByVal row As DAILY_SALES_REPORTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDAILY_SALES_REPORTRow( _
                    ByVal ID_TRANSAKSI As String,  _
                    ByVal NO_NOTA As String,  _
                    ByVal NO_REF As String,  _
                    ByVal TGL As Date,  _
                    ByVal TGL_PENGAKUAN As Date,  _
                    ByVal ID_DO As String,  _
                    ByVal NO_DO As String,  _
                    ByVal TGL_DO As Date,  _
                    ByVal DIVISI As String,  _
                    ByVal JENIS_PPN As String,  _
                    ByVal KODE_CUSTOMER As String,  _
                    ByVal KODE_APPROVE As String,  _
                    ByVal CABANG As String,  _
                    ByVal ALAMAT_KIRIM As String,  _
                    ByVal GUDANG As String,  _
                    ByVal SJ_TANPA_HARGA As Boolean,  _
                    ByVal KETERANGAN_CETAK As String,  _
                    ByVal KETERANGAN_INTERNAL As String,  _
                    ByVal SUBTOTAL As Double,  _
                    ByVal DPP As Double,  _
                    ByVal PPN As Double,  _
                    ByVal PERIODE As String,  _
                    ByVal CRUSER As String,  _
                    ByVal CRTIME As Date,  _
                    ByVal MDUSER As String,  _
                    ByVal MDTIME As Date,  _
                    ByVal BATAL As Boolean,  _
                    ByVal BAGIAN As String,  _
                    ByVal ID_STUFFING As String,  _
                    ByVal KODE_EKSPEDISI As String,  _
                    ByVal NO_TRUK As String,  _
                    ByVal NAMA As String,  _
                    ByVal PEMBAYARAN As String,  _
                    ByVal NO_DO1 As String,  _
                    ByVal DISC_QTY As Double,  _
                    ByVal DISC_QTY_NOMINAL As Double,  _
                    ByVal DISC_REG As Double,  _
                    ByVal DISC_REG_NOMINAL As Double,  _
                    ByVal DISC_1 As Double,  _
                    ByVal DISC_1_NOMINAL As Double,  _
                    ByVal DISC_2 As Double,  _
                    ByVal DISC_2_NOMINAL As Double,  _
                    ByVal DISC_3 As Double,  _
                    ByVal CASH_DISC As Double,  _
                    ByVal DISC_3_NOMINAL As Double,  _
                    ByVal CASH_DISC_NOMINAL As Double,  _
                    ByVal DISC_QTY1 As Double,  _
                    ByVal DISC_QTY_NOMINAL1 As Double,  _
                    ByVal NAMA_GUDANG As String,  _
                    ByVal NAMA_DIVISI As String) As DAILY_SALES_REPORTRow
            Dim rowDAILY_SALES_REPORTRow As DAILY_SALES_REPORTRow = CType(Me.NewRow,DAILY_SALES_REPORTRow)
            Dim columnValuesArray() As Object = New Object() {ID_TRANSAKSI, NO_NOTA, NO_REF, TGL, TGL_PENGAKUAN, ID_DO, NO_DO, TGL_DO, DIVISI, JENIS_PPN, KODE_CUSTOMER, KODE_APPROVE, CABANG, ALAMAT_KIRIM, GUDANG, SJ_TANPA_HARGA, KETERANGAN_CETAK, KETERANGAN_INTERNAL, SUBTOTAL, DPP, PPN, PERIODE, CRUSER, CRTIME, MDUSER, MDTIME, BATAL, BAGIAN, ID_STUFFING, KODE_EKSPEDISI, NO_TRUK, NAMA, PEMBAYARAN, NO_DO1, DISC_QTY, DISC_QTY_NOMINAL, DISC_REG, DISC_REG_NOMINAL, DISC_1, DISC_1_NOMINAL, DISC_2, DISC_2_NOMINAL, DISC_3, CASH_DISC, DISC_3_NOMINAL, CASH_DISC_NOMINAL, DISC_QTY1, DISC_QTY_NOMINAL1, NAMA_GUDANG, NAMA_DIVISI}
            rowDAILY_SALES_REPORTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDAILY_SALES_REPORTRow)
            Return rowDAILY_SALES_REPORTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DAILY_SALES_REPORTDataTable = CType(MyBase.Clone,DAILY_SALES_REPORTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DAILY_SALES_REPORTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_TRANSAKSI = MyBase.Columns("ID_TRANSAKSI")
            Me.columnNO_NOTA = MyBase.Columns("NO_NOTA")
            Me.columnNO_REF = MyBase.Columns("NO_REF")
            Me.columnTGL = MyBase.Columns("TGL")
            Me.columnTGL_PENGAKUAN = MyBase.Columns("TGL_PENGAKUAN")
            Me.columnID_DO = MyBase.Columns("ID_DO")
            Me.columnNO_DO = MyBase.Columns("NO_DO")
            Me.columnTGL_DO = MyBase.Columns("TGL_DO")
            Me.columnDIVISI = MyBase.Columns("DIVISI")
            Me.columnJENIS_PPN = MyBase.Columns("JENIS_PPN")
            Me.columnKODE_CUSTOMER = MyBase.Columns("KODE_CUSTOMER")
            Me.columnKODE_APPROVE = MyBase.Columns("KODE_APPROVE")
            Me.columnCABANG = MyBase.Columns("CABANG")
            Me.columnALAMAT_KIRIM = MyBase.Columns("ALAMAT_KIRIM")
            Me.columnGUDANG = MyBase.Columns("GUDANG")
            Me.columnSJ_TANPA_HARGA = MyBase.Columns("SJ_TANPA_HARGA")
            Me.columnKETERANGAN_CETAK = MyBase.Columns("KETERANGAN_CETAK")
            Me.columnKETERANGAN_INTERNAL = MyBase.Columns("KETERANGAN_INTERNAL")
            Me.columnSUBTOTAL = MyBase.Columns("SUBTOTAL")
            Me.columnDPP = MyBase.Columns("DPP")
            Me.columnPPN = MyBase.Columns("PPN")
            Me.columnPERIODE = MyBase.Columns("PERIODE")
            Me.columnCRUSER = MyBase.Columns("CRUSER")
            Me.columnCRTIME = MyBase.Columns("CRTIME")
            Me.columnMDUSER = MyBase.Columns("MDUSER")
            Me.columnMDTIME = MyBase.Columns("MDTIME")
            Me.columnBATAL = MyBase.Columns("BATAL")
            Me.columnBAGIAN = MyBase.Columns("BAGIAN")
            Me.columnID_STUFFING = MyBase.Columns("ID_STUFFING")
            Me.columnKODE_EKSPEDISI = MyBase.Columns("KODE_EKSPEDISI")
            Me.columnNO_TRUK = MyBase.Columns("NO_TRUK")
            Me.columnNAMA = MyBase.Columns("NAMA")
            Me.columnPEMBAYARAN = MyBase.Columns("PEMBAYARAN")
            Me.columnNO_DO1 = MyBase.Columns("NO_DO1")
            Me.columnDISC_QTY = MyBase.Columns("DISC_QTY")
            Me.columnDISC_QTY_NOMINAL = MyBase.Columns("DISC_QTY_NOMINAL")
            Me.columnDISC_REG = MyBase.Columns("DISC_REG")
            Me.columnDISC_REG_NOMINAL = MyBase.Columns("DISC_REG_NOMINAL")
            Me.columnDISC_1 = MyBase.Columns("DISC_1")
            Me.columnDISC_1_NOMINAL = MyBase.Columns("DISC_1_NOMINAL")
            Me.columnDISC_2 = MyBase.Columns("DISC_2")
            Me.columnDISC_2_NOMINAL = MyBase.Columns("DISC_2_NOMINAL")
            Me.columnDISC_3 = MyBase.Columns("DISC_3")
            Me.columnCASH_DISC = MyBase.Columns("CASH_DISC")
            Me.columnDISC_3_NOMINAL = MyBase.Columns("DISC_3_NOMINAL")
            Me.columnCASH_DISC_NOMINAL = MyBase.Columns("CASH_DISC_NOMINAL")
            Me.columnDISC_QTY1 = MyBase.Columns("DISC_QTY1")
            Me.columnDISC_QTY_NOMINAL1 = MyBase.Columns("DISC_QTY_NOMINAL1")
            Me.columnNAMA_GUDANG = MyBase.Columns("NAMA_GUDANG")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_TRANSAKSI = New Global.System.Data.DataColumn("ID_TRANSAKSI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TRANSAKSI)
            Me.columnNO_NOTA = New Global.System.Data.DataColumn("NO_NOTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_NOTA)
            Me.columnNO_REF = New Global.System.Data.DataColumn("NO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_REF)
            Me.columnTGL = New Global.System.Data.DataColumn("TGL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL)
            Me.columnTGL_PENGAKUAN = New Global.System.Data.DataColumn("TGL_PENGAKUAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PENGAKUAN)
            Me.columnID_DO = New Global.System.Data.DataColumn("ID_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_DO)
            Me.columnNO_DO = New Global.System.Data.DataColumn("NO_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_DO)
            Me.columnTGL_DO = New Global.System.Data.DataColumn("TGL_DO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_DO)
            Me.columnDIVISI = New Global.System.Data.DataColumn("DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVISI)
            Me.columnJENIS_PPN = New Global.System.Data.DataColumn("JENIS_PPN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJENIS_PPN)
            Me.columnKODE_CUSTOMER = New Global.System.Data.DataColumn("KODE_CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_CUSTOMER)
            Me.columnKODE_APPROVE = New Global.System.Data.DataColumn("KODE_APPROVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_APPROVE)
            Me.columnCABANG = New Global.System.Data.DataColumn("CABANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCABANG)
            Me.columnALAMAT_KIRIM = New Global.System.Data.DataColumn("ALAMAT_KIRIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALAMAT_KIRIM)
            Me.columnGUDANG = New Global.System.Data.DataColumn("GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUDANG)
            Me.columnSJ_TANPA_HARGA = New Global.System.Data.DataColumn("SJ_TANPA_HARGA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSJ_TANPA_HARGA)
            Me.columnKETERANGAN_CETAK = New Global.System.Data.DataColumn("KETERANGAN_CETAK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKETERANGAN_CETAK)
            Me.columnKETERANGAN_INTERNAL = New Global.System.Data.DataColumn("KETERANGAN_INTERNAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKETERANGAN_INTERNAL)
            Me.columnSUBTOTAL = New Global.System.Data.DataColumn("SUBTOTAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL)
            Me.columnDPP = New Global.System.Data.DataColumn("DPP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPP)
            Me.columnPPN = New Global.System.Data.DataColumn("PPN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPN)
            Me.columnPERIODE = New Global.System.Data.DataColumn("PERIODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODE)
            Me.columnCRUSER = New Global.System.Data.DataColumn("CRUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRUSER)
            Me.columnCRTIME = New Global.System.Data.DataColumn("CRTIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCRTIME)
            Me.columnMDUSER = New Global.System.Data.DataColumn("MDUSER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDUSER)
            Me.columnMDTIME = New Global.System.Data.DataColumn("MDTIME", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMDTIME)
            Me.columnBATAL = New Global.System.Data.DataColumn("BATAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATAL)
            Me.columnBAGIAN = New Global.System.Data.DataColumn("BAGIAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAGIAN)
            Me.columnID_STUFFING = New Global.System.Data.DataColumn("ID_STUFFING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_STUFFING)
            Me.columnKODE_EKSPEDISI = New Global.System.Data.DataColumn("KODE_EKSPEDISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_EKSPEDISI)
            Me.columnNO_TRUK = New Global.System.Data.DataColumn("NO_TRUK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_TRUK)
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnPEMBAYARAN = New Global.System.Data.DataColumn("PEMBAYARAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPEMBAYARAN)
            Me.columnNO_DO1 = New Global.System.Data.DataColumn("NO_DO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_DO1)
            Me.columnDISC_QTY = New Global.System.Data.DataColumn("DISC_QTY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY)
            Me.columnDISC_QTY_NOMINAL = New Global.System.Data.DataColumn("DISC_QTY_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY_NOMINAL)
            Me.columnDISC_REG = New Global.System.Data.DataColumn("DISC_REG", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_REG)
            Me.columnDISC_REG_NOMINAL = New Global.System.Data.DataColumn("DISC_REG_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_REG_NOMINAL)
            Me.columnDISC_1 = New Global.System.Data.DataColumn("DISC_1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_1)
            Me.columnDISC_1_NOMINAL = New Global.System.Data.DataColumn("DISC_1_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_1_NOMINAL)
            Me.columnDISC_2 = New Global.System.Data.DataColumn("DISC_2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_2)
            Me.columnDISC_2_NOMINAL = New Global.System.Data.DataColumn("DISC_2_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_2_NOMINAL)
            Me.columnDISC_3 = New Global.System.Data.DataColumn("DISC_3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_3)
            Me.columnCASH_DISC = New Global.System.Data.DataColumn("CASH_DISC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASH_DISC)
            Me.columnDISC_3_NOMINAL = New Global.System.Data.DataColumn("DISC_3_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_3_NOMINAL)
            Me.columnCASH_DISC_NOMINAL = New Global.System.Data.DataColumn("CASH_DISC_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASH_DISC_NOMINAL)
            Me.columnDISC_QTY1 = New Global.System.Data.DataColumn("DISC_QTY1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY1)
            Me.columnDISC_QTY_NOMINAL1 = New Global.System.Data.DataColumn("DISC_QTY_NOMINAL1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY_NOMINAL1)
            Me.columnNAMA_GUDANG = New Global.System.Data.DataColumn("NAMA_GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_GUDANG)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnID_TRANSAKSI.AllowDBNull = false
            Me.columnID_TRANSAKSI.MaxLength = 50
            Me.columnNO_NOTA.MaxLength = 30
            Me.columnNO_REF.MaxLength = 30
            Me.columnID_DO.MaxLength = 50
            Me.columnNO_DO.MaxLength = 50
            Me.columnDIVISI.MaxLength = 20
            Me.columnJENIS_PPN.MaxLength = 20
            Me.columnKODE_CUSTOMER.MaxLength = 20
            Me.columnKODE_APPROVE.MaxLength = 20
            Me.columnCABANG.MaxLength = 20
            Me.columnALAMAT_KIRIM.MaxLength = 250
            Me.columnGUDANG.MaxLength = 20
            Me.columnKETERANGAN_CETAK.MaxLength = 250
            Me.columnKETERANGAN_INTERNAL.MaxLength = 250
            Me.columnPERIODE.MaxLength = 5
            Me.columnCRUSER.MaxLength = 10
            Me.columnMDUSER.MaxLength = 10
            Me.columnBAGIAN.MaxLength = 30
            Me.columnID_STUFFING.MaxLength = 50
            Me.columnKODE_EKSPEDISI.MaxLength = 20
            Me.columnNO_TRUK.MaxLength = 50
            Me.columnNAMA.MaxLength = 150
            Me.columnPEMBAYARAN.MaxLength = 50
            Me.columnNO_DO1.MaxLength = 50
            Me.columnNAMA_GUDANG.MaxLength = 50
            Me.columnNAMA_DIVISI.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDAILY_SALES_REPORTRow() As DAILY_SALES_REPORTRow
            Return CType(Me.NewRow,DAILY_SALES_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DAILY_SALES_REPORTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DAILY_SALES_REPORTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DAILY_SALES_REPORTRowChangedEvent) Is Nothing) Then
                RaiseEvent DAILY_SALES_REPORTRowChanged(Me, New DAILY_SALES_REPORTRowChangeEvent(CType(e.Row,DAILY_SALES_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DAILY_SALES_REPORTRowChangingEvent) Is Nothing) Then
                RaiseEvent DAILY_SALES_REPORTRowChanging(Me, New DAILY_SALES_REPORTRowChangeEvent(CType(e.Row,DAILY_SALES_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DAILY_SALES_REPORTRowDeletedEvent) Is Nothing) Then
                RaiseEvent DAILY_SALES_REPORTRowDeleted(Me, New DAILY_SALES_REPORTRowChangeEvent(CType(e.Row,DAILY_SALES_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DAILY_SALES_REPORTRowDeletingEvent) Is Nothing) Then
                RaiseEvent DAILY_SALES_REPORTRowDeleting(Me, New DAILY_SALES_REPORTRowChangeEvent(CType(e.Row,DAILY_SALES_REPORTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDAILY_SALES_REPORTRow(ByVal row As DAILY_SALES_REPORTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DAILY_SALES_REPORTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class KARTU_STOKDataTable
        Inherits Global.System.Data.TypedTableBase(Of KARTU_STOKRow)
        
        Private columnHARGA As Global.System.Data.DataColumn
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        Private columnKODE_BARANG As Global.System.Data.DataColumn
        
        Private columnSAT_DIST1 As Global.System.Data.DataColumn
        
        Private columnSAT_SUPER1 As Global.System.Data.DataColumn
        
        Private columnTGL As Global.System.Data.DataColumn
        
        Private columnFAKTUR As Global.System.Data.DataColumn
        
        Private columnDZ As Global.System.Data.DataColumn
        
        Private columnPCS As Global.System.Data.DataColumn
        
        Private columnKODE As Global.System.Data.DataColumn
        
        Private columnQUANTITY As Global.System.Data.DataColumn
        
        Private columnQTY_SISA As Global.System.Data.DataColumn
        
        Private columnDZ_SISA As Global.System.Data.DataColumn
        
        Private columnPCS_SISA As Global.System.Data.DataColumn
        
        Private columnPERIODE As Global.System.Data.DataColumn
        
        Private columnTRANSAKSI As Global.System.Data.DataColumn
        
        Private columnGUDANG As Global.System.Data.DataColumn
        
        Private columnNAMA_GUDANG As Global.System.Data.DataColumn
        
        Private columnQTY_DIST As Global.System.Data.DataColumn
        
        Private columnSATUAN As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnURUTAN As Global.System.Data.DataColumn
        
        Private columnHARGA_AKHIR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "KARTU_STOK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_BARANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_BARANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAT_DIST1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAT_DIST1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAT_SUPER1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAT_SUPER1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FAKTURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFAKTUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTY_SISAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY_SISA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DZ_SISAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDZ_SISA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCS_SISAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS_SISA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSAKSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSAKSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_GUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTY_DISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY_DIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SATUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSATUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property URUTANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnURUTAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HARGA_AKHIRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHARGA_AKHIR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As KARTU_STOKRow
            Get
                Return CType(Me.Rows(index),KARTU_STOKRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event KARTU_STOKRowChanging As KARTU_STOKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event KARTU_STOKRowChanged As KARTU_STOKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event KARTU_STOKRowDeleting As KARTU_STOKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event KARTU_STOKRowDeleted As KARTU_STOKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddKARTU_STOKRow(ByVal row As KARTU_STOKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddKARTU_STOKRow( _
                    ByVal HARGA As Double,  _
                    ByVal NAMA As String,  _
                    ByVal KODE_BARANG As String,  _
                    ByVal SAT_DIST1 As String,  _
                    ByVal SAT_SUPER1 As String,  _
                    ByVal TGL As Date,  _
                    ByVal FAKTUR As String,  _
                    ByVal DZ As Double,  _
                    ByVal PCS As Double,  _
                    ByVal KODE As String,  _
                    ByVal QUANTITY As Double,  _
                    ByVal QTY_SISA As Double,  _
                    ByVal DZ_SISA As Double,  _
                    ByVal PCS_SISA As Double,  _
                    ByVal PERIODE As String,  _
                    ByVal TRANSAKSI As String,  _
                    ByVal GUDANG As String,  _
                    ByVal NAMA_GUDANG As String,  _
                    ByVal QTY_DIST As Double,  _
                    ByVal SATUAN As String,  _
                    ByVal NAMA_DIVISI As String,  _
                    ByVal URUTAN As Decimal,  _
                    ByVal HARGA_AKHIR As Double) As KARTU_STOKRow
            Dim rowKARTU_STOKRow As KARTU_STOKRow = CType(Me.NewRow,KARTU_STOKRow)
            Dim columnValuesArray() As Object = New Object() {HARGA, NAMA, KODE_BARANG, SAT_DIST1, SAT_SUPER1, TGL, FAKTUR, DZ, PCS, KODE, QUANTITY, QTY_SISA, DZ_SISA, PCS_SISA, PERIODE, TRANSAKSI, GUDANG, NAMA_GUDANG, QTY_DIST, SATUAN, NAMA_DIVISI, URUTAN, HARGA_AKHIR}
            rowKARTU_STOKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowKARTU_STOKRow)
            Return rowKARTU_STOKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As KARTU_STOKDataTable = CType(MyBase.Clone,KARTU_STOKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New KARTU_STOKDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnHARGA = MyBase.Columns("HARGA")
            Me.columnNAMA = MyBase.Columns("NAMA")
            Me.columnKODE_BARANG = MyBase.Columns("KODE_BARANG")
            Me.columnSAT_DIST1 = MyBase.Columns("SAT_DIST1")
            Me.columnSAT_SUPER1 = MyBase.Columns("SAT_SUPER1")
            Me.columnTGL = MyBase.Columns("TGL")
            Me.columnFAKTUR = MyBase.Columns("FAKTUR")
            Me.columnDZ = MyBase.Columns("DZ")
            Me.columnPCS = MyBase.Columns("PCS")
            Me.columnKODE = MyBase.Columns("KODE")
            Me.columnQUANTITY = MyBase.Columns("QUANTITY")
            Me.columnQTY_SISA = MyBase.Columns("QTY_SISA")
            Me.columnDZ_SISA = MyBase.Columns("DZ_SISA")
            Me.columnPCS_SISA = MyBase.Columns("PCS_SISA")
            Me.columnPERIODE = MyBase.Columns("PERIODE")
            Me.columnTRANSAKSI = MyBase.Columns("TRANSAKSI")
            Me.columnGUDANG = MyBase.Columns("GUDANG")
            Me.columnNAMA_GUDANG = MyBase.Columns("NAMA_GUDANG")
            Me.columnQTY_DIST = MyBase.Columns("QTY_DIST")
            Me.columnSATUAN = MyBase.Columns("SATUAN")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnURUTAN = MyBase.Columns("URUTAN")
            Me.columnHARGA_AKHIR = MyBase.Columns("HARGA_AKHIR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnHARGA = New Global.System.Data.DataColumn("HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHARGA)
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnKODE_BARANG = New Global.System.Data.DataColumn("KODE_BARANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_BARANG)
            Me.columnSAT_DIST1 = New Global.System.Data.DataColumn("SAT_DIST1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAT_DIST1)
            Me.columnSAT_SUPER1 = New Global.System.Data.DataColumn("SAT_SUPER1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAT_SUPER1)
            Me.columnTGL = New Global.System.Data.DataColumn("TGL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL)
            Me.columnFAKTUR = New Global.System.Data.DataColumn("FAKTUR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFAKTUR)
            Me.columnDZ = New Global.System.Data.DataColumn("DZ", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDZ)
            Me.columnPCS = New Global.System.Data.DataColumn("PCS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS)
            Me.columnKODE = New Global.System.Data.DataColumn("KODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE)
            Me.columnQUANTITY = New Global.System.Data.DataColumn("QUANTITY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUANTITY)
            Me.columnQTY_SISA = New Global.System.Data.DataColumn("QTY_SISA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY_SISA)
            Me.columnDZ_SISA = New Global.System.Data.DataColumn("DZ_SISA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDZ_SISA)
            Me.columnPCS_SISA = New Global.System.Data.DataColumn("PCS_SISA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS_SISA)
            Me.columnPERIODE = New Global.System.Data.DataColumn("PERIODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODE)
            Me.columnTRANSAKSI = New Global.System.Data.DataColumn("TRANSAKSI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSAKSI)
            Me.columnGUDANG = New Global.System.Data.DataColumn("GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUDANG)
            Me.columnNAMA_GUDANG = New Global.System.Data.DataColumn("NAMA_GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_GUDANG)
            Me.columnQTY_DIST = New Global.System.Data.DataColumn("QTY_DIST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY_DIST)
            Me.columnSATUAN = New Global.System.Data.DataColumn("SATUAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSATUAN)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnURUTAN = New Global.System.Data.DataColumn("URUTAN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnURUTAN)
            Me.columnHARGA_AKHIR = New Global.System.Data.DataColumn("HARGA_AKHIR", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHARGA_AKHIR)
            Me.columnNAMA.MaxLength = 200
            Me.columnKODE_BARANG.ReadOnly = true
            Me.columnKODE_BARANG.MaxLength = 20
            Me.columnSAT_DIST1.ReadOnly = true
            Me.columnSAT_DIST1.MaxLength = 10
            Me.columnSAT_SUPER1.ReadOnly = true
            Me.columnSAT_SUPER1.MaxLength = 10
            Me.columnTGL.ReadOnly = true
            Me.columnFAKTUR.ReadOnly = true
            Me.columnFAKTUR.MaxLength = 6
            Me.columnDZ.ReadOnly = true
            Me.columnPCS.ReadOnly = true
            Me.columnKODE.ReadOnly = true
            Me.columnKODE.MaxLength = 2
            Me.columnQUANTITY.ReadOnly = true
            Me.columnQTY_SISA.ReadOnly = true
            Me.columnDZ_SISA.ReadOnly = true
            Me.columnPCS_SISA.ReadOnly = true
            Me.columnPERIODE.ReadOnly = true
            Me.columnPERIODE.MaxLength = 60
            Me.columnTRANSAKSI.ReadOnly = true
            Me.columnTRANSAKSI.MaxLength = 150
            Me.columnGUDANG.ReadOnly = true
            Me.columnGUDANG.MaxLength = 20
            Me.columnNAMA_GUDANG.MaxLength = 50
            Me.columnQTY_DIST.ReadOnly = true
            Me.columnSATUAN.ReadOnly = true
            Me.columnSATUAN.MaxLength = 50
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnURUTAN.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewKARTU_STOKRow() As KARTU_STOKRow
            Return CType(Me.NewRow,KARTU_STOKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New KARTU_STOKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(KARTU_STOKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.KARTU_STOKRowChangedEvent) Is Nothing) Then
                RaiseEvent KARTU_STOKRowChanged(Me, New KARTU_STOKRowChangeEvent(CType(e.Row,KARTU_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.KARTU_STOKRowChangingEvent) Is Nothing) Then
                RaiseEvent KARTU_STOKRowChanging(Me, New KARTU_STOKRowChangeEvent(CType(e.Row,KARTU_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.KARTU_STOKRowDeletedEvent) Is Nothing) Then
                RaiseEvent KARTU_STOKRowDeleted(Me, New KARTU_STOKRowChangeEvent(CType(e.Row,KARTU_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.KARTU_STOKRowDeletingEvent) Is Nothing) Then
                RaiseEvent KARTU_STOKRowDeleting(Me, New KARTU_STOKRowChangeEvent(CType(e.Row,KARTU_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveKARTU_STOKRow(ByVal row As KARTU_STOKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "KARTU_STOKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LAPORAN_PEMBELIANDataTable
        Inherits Global.System.Data.TypedTableBase(Of LAPORAN_PEMBELIANRow)
        
        Private columnNO_NOTA As Global.System.Data.DataColumn
        
        Private columnID_TRANSAKSI As Global.System.Data.DataColumn
        
        Private columnNO_REF As Global.System.Data.DataColumn
        
        Private columnTGL As Global.System.Data.DataColumn
        
        Private columnTGL_PENGAKUAN As Global.System.Data.DataColumn
        
        Private columnID_PO As Global.System.Data.DataColumn
        
        Private columnNO_PO As Global.System.Data.DataColumn
        
        Private columnTGL_PO As Global.System.Data.DataColumn
        
        Private columnID_NOTA_PENJUALAN As Global.System.Data.DataColumn
        
        Private columnNO_NOTA_PENJUALAN As Global.System.Data.DataColumn
        
        Private columnDIVISI As Global.System.Data.DataColumn
        
        Private columnJENIS_PPN As Global.System.Data.DataColumn
        
        Private columnKODE_SUPPLIER As Global.System.Data.DataColumn
        
        Private columnALAMAT_KIRIM As Global.System.Data.DataColumn
        
        Private columnGUDANG As Global.System.Data.DataColumn
        
        Private columnKETERANGAN_CETAK As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL As Global.System.Data.DataColumn
        
        Private columnDPP As Global.System.Data.DataColumn
        
        Private columnPPN As Global.System.Data.DataColumn
        
        Private columnPERIODE As Global.System.Data.DataColumn
        
        Private columnBAGIAN As Global.System.Data.DataColumn
        
        Private columnKODE_EKSPEDISI As Global.System.Data.DataColumn
        
        Private columnNO_TRUK As Global.System.Data.DataColumn
        
        Private columnNO_CLAIM As Global.System.Data.DataColumn
        
        Private columnID_CLAIM As Global.System.Data.DataColumn
        
        Private columnDPP_CLAIM As Global.System.Data.DataColumn
        
        Private columnPPN_CLAIM As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_CLAIM As Global.System.Data.DataColumn
        
        Private columnNAMA_GUDANG As Global.System.Data.DataColumn
        
        Private columnDPP_NOTA As Global.System.Data.DataColumn
        
        Private columnPPN_NOTA As Global.System.Data.DataColumn
        
        Private columnBATAL As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_TANPA_BATAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LAPORAN_PEMBELIAN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_NOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_NOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TRANSAKSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TRANSAKSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PENGAKUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PENGAKUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_PO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_PO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_POColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_NOTA_PENJUALANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_NOTA_PENJUALAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_NOTA_PENJUALANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_NOTA_PENJUALAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JENIS_PPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJENIS_PPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_SUPPLIERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_SUPPLIER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ALAMAT_KIRIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALAMAT_KIRIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KETERANGAN_CETAKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKETERANGAN_CETAK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PERIODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BAGIANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAGIAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_EKSPEDISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_EKSPEDISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_TRUKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_TRUK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_CLAIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_CLAIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_CLAIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_CLAIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPP_CLAIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPP_CLAIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPN_CLAIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPN_CLAIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_CLAIMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_CLAIM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_GUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPP_NOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPP_NOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPN_NOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPN_NOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_TANPA_BATALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_TANPA_BATAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LAPORAN_PEMBELIANRow
            Get
                Return CType(Me.Rows(index),LAPORAN_PEMBELIANRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PEMBELIANRowChanging As LAPORAN_PEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PEMBELIANRowChanged As LAPORAN_PEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PEMBELIANRowDeleting As LAPORAN_PEMBELIANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PEMBELIANRowDeleted As LAPORAN_PEMBELIANRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLAPORAN_PEMBELIANRow(ByVal row As LAPORAN_PEMBELIANRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLAPORAN_PEMBELIANRow( _
                    ByVal NO_NOTA As String,  _
                    ByVal ID_TRANSAKSI As String,  _
                    ByVal NO_REF As String,  _
                    ByVal TGL As Date,  _
                    ByVal TGL_PENGAKUAN As Date,  _
                    ByVal ID_PO As String,  _
                    ByVal NO_PO As String,  _
                    ByVal TGL_PO As Date,  _
                    ByVal ID_NOTA_PENJUALAN As String,  _
                    ByVal NO_NOTA_PENJUALAN As String,  _
                    ByVal DIVISI As String,  _
                    ByVal JENIS_PPN As String,  _
                    ByVal KODE_SUPPLIER As String,  _
                    ByVal ALAMAT_KIRIM As String,  _
                    ByVal GUDANG As String,  _
                    ByVal KETERANGAN_CETAK As String,  _
                    ByVal SUBTOTAL As Double,  _
                    ByVal DPP As Double,  _
                    ByVal PPN As Double,  _
                    ByVal PERIODE As String,  _
                    ByVal BAGIAN As String,  _
                    ByVal KODE_EKSPEDISI As String,  _
                    ByVal NO_TRUK As String,  _
                    ByVal NO_CLAIM As String,  _
                    ByVal ID_CLAIM As String,  _
                    ByVal DPP_CLAIM As Double,  _
                    ByVal PPN_CLAIM As Double,  _
                    ByVal NAMA_DIVISI As String,  _
                    ByVal SUBTOTAL_CLAIM As Double,  _
                    ByVal NAMA_GUDANG As String,  _
                    ByVal DPP_NOTA As Double,  _
                    ByVal PPN_NOTA As Double,  _
                    ByVal BATAL As Boolean,  _
                    ByVal SUBTOTAL_TANPA_BATAL As Double) As LAPORAN_PEMBELIANRow
            Dim rowLAPORAN_PEMBELIANRow As LAPORAN_PEMBELIANRow = CType(Me.NewRow,LAPORAN_PEMBELIANRow)
            Dim columnValuesArray() As Object = New Object() {NO_NOTA, ID_TRANSAKSI, NO_REF, TGL, TGL_PENGAKUAN, ID_PO, NO_PO, TGL_PO, ID_NOTA_PENJUALAN, NO_NOTA_PENJUALAN, DIVISI, JENIS_PPN, KODE_SUPPLIER, ALAMAT_KIRIM, GUDANG, KETERANGAN_CETAK, SUBTOTAL, DPP, PPN, PERIODE, BAGIAN, KODE_EKSPEDISI, NO_TRUK, NO_CLAIM, ID_CLAIM, DPP_CLAIM, PPN_CLAIM, NAMA_DIVISI, SUBTOTAL_CLAIM, NAMA_GUDANG, DPP_NOTA, PPN_NOTA, BATAL, SUBTOTAL_TANPA_BATAL}
            rowLAPORAN_PEMBELIANRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLAPORAN_PEMBELIANRow)
            Return rowLAPORAN_PEMBELIANRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LAPORAN_PEMBELIANDataTable = CType(MyBase.Clone,LAPORAN_PEMBELIANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LAPORAN_PEMBELIANDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNO_NOTA = MyBase.Columns("NO_NOTA")
            Me.columnID_TRANSAKSI = MyBase.Columns("ID_TRANSAKSI")
            Me.columnNO_REF = MyBase.Columns("NO_REF")
            Me.columnTGL = MyBase.Columns("TGL")
            Me.columnTGL_PENGAKUAN = MyBase.Columns("TGL_PENGAKUAN")
            Me.columnID_PO = MyBase.Columns("ID_PO")
            Me.columnNO_PO = MyBase.Columns("NO_PO")
            Me.columnTGL_PO = MyBase.Columns("TGL_PO")
            Me.columnID_NOTA_PENJUALAN = MyBase.Columns("ID_NOTA_PENJUALAN")
            Me.columnNO_NOTA_PENJUALAN = MyBase.Columns("NO_NOTA_PENJUALAN")
            Me.columnDIVISI = MyBase.Columns("DIVISI")
            Me.columnJENIS_PPN = MyBase.Columns("JENIS_PPN")
            Me.columnKODE_SUPPLIER = MyBase.Columns("KODE_SUPPLIER")
            Me.columnALAMAT_KIRIM = MyBase.Columns("ALAMAT_KIRIM")
            Me.columnGUDANG = MyBase.Columns("GUDANG")
            Me.columnKETERANGAN_CETAK = MyBase.Columns("KETERANGAN_CETAK")
            Me.columnSUBTOTAL = MyBase.Columns("SUBTOTAL")
            Me.columnDPP = MyBase.Columns("DPP")
            Me.columnPPN = MyBase.Columns("PPN")
            Me.columnPERIODE = MyBase.Columns("PERIODE")
            Me.columnBAGIAN = MyBase.Columns("BAGIAN")
            Me.columnKODE_EKSPEDISI = MyBase.Columns("KODE_EKSPEDISI")
            Me.columnNO_TRUK = MyBase.Columns("NO_TRUK")
            Me.columnNO_CLAIM = MyBase.Columns("NO_CLAIM")
            Me.columnID_CLAIM = MyBase.Columns("ID_CLAIM")
            Me.columnDPP_CLAIM = MyBase.Columns("DPP_CLAIM")
            Me.columnPPN_CLAIM = MyBase.Columns("PPN_CLAIM")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnSUBTOTAL_CLAIM = MyBase.Columns("SUBTOTAL_CLAIM")
            Me.columnNAMA_GUDANG = MyBase.Columns("NAMA_GUDANG")
            Me.columnDPP_NOTA = MyBase.Columns("DPP_NOTA")
            Me.columnPPN_NOTA = MyBase.Columns("PPN_NOTA")
            Me.columnBATAL = MyBase.Columns("BATAL")
            Me.columnSUBTOTAL_TANPA_BATAL = MyBase.Columns("SUBTOTAL_TANPA_BATAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNO_NOTA = New Global.System.Data.DataColumn("NO_NOTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_NOTA)
            Me.columnID_TRANSAKSI = New Global.System.Data.DataColumn("ID_TRANSAKSI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TRANSAKSI)
            Me.columnNO_REF = New Global.System.Data.DataColumn("NO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_REF)
            Me.columnTGL = New Global.System.Data.DataColumn("TGL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL)
            Me.columnTGL_PENGAKUAN = New Global.System.Data.DataColumn("TGL_PENGAKUAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PENGAKUAN)
            Me.columnID_PO = New Global.System.Data.DataColumn("ID_PO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_PO)
            Me.columnNO_PO = New Global.System.Data.DataColumn("NO_PO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_PO)
            Me.columnTGL_PO = New Global.System.Data.DataColumn("TGL_PO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PO)
            Me.columnID_NOTA_PENJUALAN = New Global.System.Data.DataColumn("ID_NOTA_PENJUALAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_NOTA_PENJUALAN)
            Me.columnNO_NOTA_PENJUALAN = New Global.System.Data.DataColumn("NO_NOTA_PENJUALAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_NOTA_PENJUALAN)
            Me.columnDIVISI = New Global.System.Data.DataColumn("DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVISI)
            Me.columnJENIS_PPN = New Global.System.Data.DataColumn("JENIS_PPN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJENIS_PPN)
            Me.columnKODE_SUPPLIER = New Global.System.Data.DataColumn("KODE_SUPPLIER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_SUPPLIER)
            Me.columnALAMAT_KIRIM = New Global.System.Data.DataColumn("ALAMAT_KIRIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALAMAT_KIRIM)
            Me.columnGUDANG = New Global.System.Data.DataColumn("GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUDANG)
            Me.columnKETERANGAN_CETAK = New Global.System.Data.DataColumn("KETERANGAN_CETAK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKETERANGAN_CETAK)
            Me.columnSUBTOTAL = New Global.System.Data.DataColumn("SUBTOTAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL)
            Me.columnDPP = New Global.System.Data.DataColumn("DPP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPP)
            Me.columnPPN = New Global.System.Data.DataColumn("PPN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPN)
            Me.columnPERIODE = New Global.System.Data.DataColumn("PERIODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIODE)
            Me.columnBAGIAN = New Global.System.Data.DataColumn("BAGIAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAGIAN)
            Me.columnKODE_EKSPEDISI = New Global.System.Data.DataColumn("KODE_EKSPEDISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_EKSPEDISI)
            Me.columnNO_TRUK = New Global.System.Data.DataColumn("NO_TRUK", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_TRUK)
            Me.columnNO_CLAIM = New Global.System.Data.DataColumn("NO_CLAIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_CLAIM)
            Me.columnID_CLAIM = New Global.System.Data.DataColumn("ID_CLAIM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_CLAIM)
            Me.columnDPP_CLAIM = New Global.System.Data.DataColumn("DPP_CLAIM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPP_CLAIM)
            Me.columnPPN_CLAIM = New Global.System.Data.DataColumn("PPN_CLAIM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPN_CLAIM)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnSUBTOTAL_CLAIM = New Global.System.Data.DataColumn("SUBTOTAL_CLAIM", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_CLAIM)
            Me.columnNAMA_GUDANG = New Global.System.Data.DataColumn("NAMA_GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_GUDANG)
            Me.columnDPP_NOTA = New Global.System.Data.DataColumn("DPP_NOTA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPP_NOTA)
            Me.columnPPN_NOTA = New Global.System.Data.DataColumn("PPN_NOTA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPN_NOTA)
            Me.columnBATAL = New Global.System.Data.DataColumn("BATAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATAL)
            Me.columnSUBTOTAL_TANPA_BATAL = New Global.System.Data.DataColumn("SUBTOTAL_TANPA_BATAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_TANPA_BATAL)
            Me.columnNO_NOTA.MaxLength = 30
            Me.columnID_TRANSAKSI.AllowDBNull = false
            Me.columnID_TRANSAKSI.MaxLength = 50
            Me.columnNO_REF.MaxLength = 30
            Me.columnID_PO.MaxLength = 50
            Me.columnNO_PO.AllowDBNull = false
            Me.columnNO_PO.MaxLength = 50
            Me.columnID_NOTA_PENJUALAN.MaxLength = 30
            Me.columnNO_NOTA_PENJUALAN.AllowDBNull = false
            Me.columnNO_NOTA_PENJUALAN.MaxLength = 30
            Me.columnDIVISI.MaxLength = 20
            Me.columnJENIS_PPN.MaxLength = 20
            Me.columnKODE_SUPPLIER.MaxLength = 20
            Me.columnALAMAT_KIRIM.MaxLength = 250
            Me.columnGUDANG.MaxLength = 20
            Me.columnKETERANGAN_CETAK.MaxLength = 250
            Me.columnPERIODE.MaxLength = 5
            Me.columnBAGIAN.MaxLength = 30
            Me.columnKODE_EKSPEDISI.MaxLength = 20
            Me.columnNO_TRUK.MaxLength = 20
            Me.columnNO_CLAIM.MaxLength = 30
            Me.columnID_CLAIM.MaxLength = 50
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnNAMA_GUDANG.MaxLength = 50
            Me.columnSUBTOTAL_TANPA_BATAL.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLAPORAN_PEMBELIANRow() As LAPORAN_PEMBELIANRow
            Return CType(Me.NewRow,LAPORAN_PEMBELIANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LAPORAN_PEMBELIANRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LAPORAN_PEMBELIANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LAPORAN_PEMBELIANRowChangedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PEMBELIANRowChanged(Me, New LAPORAN_PEMBELIANRowChangeEvent(CType(e.Row,LAPORAN_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LAPORAN_PEMBELIANRowChangingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PEMBELIANRowChanging(Me, New LAPORAN_PEMBELIANRowChangeEvent(CType(e.Row,LAPORAN_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LAPORAN_PEMBELIANRowDeletedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PEMBELIANRowDeleted(Me, New LAPORAN_PEMBELIANRowChangeEvent(CType(e.Row,LAPORAN_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LAPORAN_PEMBELIANRowDeletingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PEMBELIANRowDeleting(Me, New LAPORAN_PEMBELIANRowChangeEvent(CType(e.Row,LAPORAN_PEMBELIANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLAPORAN_PEMBELIANRow(ByVal row As LAPORAN_PEMBELIANRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LAPORAN_PEMBELIANDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LAPORAN_DODataTable
        Inherits Global.System.Data.TypedTableBase(Of LAPORAN_DORow)
        
        Private columnNO_DO As Global.System.Data.DataColumn
        
        Private columnID_TRANSAKSI As Global.System.Data.DataColumn
        
        Private columnTGL_PENGAKUAN As Global.System.Data.DataColumn
        
        Private columnDIVISI As Global.System.Data.DataColumn
        
        Private columnKODE_CUSTOMER As Global.System.Data.DataColumn
        
        Private columnKODE_APPROVE As Global.System.Data.DataColumn
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL As Global.System.Data.DataColumn
        
        Private columnDISC_QTY As Global.System.Data.DataColumn
        
        Private columnDISC_REG As Global.System.Data.DataColumn
        
        Private columnDISC_1 As Global.System.Data.DataColumn
        
        Private columnDISC_2 As Global.System.Data.DataColumn
        
        Private columnDISC_3 As Global.System.Data.DataColumn
        
        Private columnCASH_DISC As Global.System.Data.DataColumn
        
        Private columnDISC_QTY1 As Global.System.Data.DataColumn
        
        Private columnDPP As Global.System.Data.DataColumn
        
        Private columnPPN As Global.System.Data.DataColumn
        
        Private columnBAGIAN As Global.System.Data.DataColumn
        
        Private columnJENIS_DO As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnNAMA_USER As Global.System.Data.DataColumn
        
        Private columnDISC_QTY_NOMINAL As Global.System.Data.DataColumn
        
        Private columnDISC_QTY_NOMINAL1 As Global.System.Data.DataColumn
        
        Private columnBATAL As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL_DETAIL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LAPORAN_DO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TRANSAKSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TRANSAKSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PENGAKUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PENGAKUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_CUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_APPROVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_APPROVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CASH_DISCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASH_DISC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BAGIANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAGIAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JENIS_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJENIS_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY_NOMINAL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY_NOMINAL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTAL_DETAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL_DETAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LAPORAN_DORow
            Get
                Return CType(Me.Rows(index),LAPORAN_DORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DORowChanging As LAPORAN_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DORowChanged As LAPORAN_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DORowDeleting As LAPORAN_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DORowDeleted As LAPORAN_DORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLAPORAN_DORow(ByVal row As LAPORAN_DORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLAPORAN_DORow( _
                    ByVal NO_DO As String,  _
                    ByVal ID_TRANSAKSI As String,  _
                    ByVal TGL_PENGAKUAN As Date,  _
                    ByVal DIVISI As String,  _
                    ByVal KODE_CUSTOMER As String,  _
                    ByVal KODE_APPROVE As String,  _
                    ByVal NAMA As String,  _
                    ByVal SUBTOTAL As Double,  _
                    ByVal DISC_QTY As Double,  _
                    ByVal DISC_REG As Double,  _
                    ByVal DISC_1 As Double,  _
                    ByVal DISC_2 As Double,  _
                    ByVal DISC_3 As Double,  _
                    ByVal CASH_DISC As Double,  _
                    ByVal DISC_QTY1 As Double,  _
                    ByVal DPP As Double,  _
                    ByVal PPN As Double,  _
                    ByVal BAGIAN As String,  _
                    ByVal JENIS_DO As String,  _
                    ByVal NAMA_DIVISI As String,  _
                    ByVal NAMA_USER As String,  _
                    ByVal DISC_QTY_NOMINAL As Double,  _
                    ByVal DISC_QTY_NOMINAL1 As Double,  _
                    ByVal BATAL As Boolean,  _
                    ByVal SUBTOTAL_DETAIL As Double) As LAPORAN_DORow
            Dim rowLAPORAN_DORow As LAPORAN_DORow = CType(Me.NewRow,LAPORAN_DORow)
            Dim columnValuesArray() As Object = New Object() {NO_DO, ID_TRANSAKSI, TGL_PENGAKUAN, DIVISI, KODE_CUSTOMER, KODE_APPROVE, NAMA, SUBTOTAL, DISC_QTY, DISC_REG, DISC_1, DISC_2, DISC_3, CASH_DISC, DISC_QTY1, DPP, PPN, BAGIAN, JENIS_DO, NAMA_DIVISI, NAMA_USER, DISC_QTY_NOMINAL, DISC_QTY_NOMINAL1, BATAL, SUBTOTAL_DETAIL}
            rowLAPORAN_DORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLAPORAN_DORow)
            Return rowLAPORAN_DORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LAPORAN_DODataTable = CType(MyBase.Clone,LAPORAN_DODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LAPORAN_DODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNO_DO = MyBase.Columns("NO_DO")
            Me.columnID_TRANSAKSI = MyBase.Columns("ID_TRANSAKSI")
            Me.columnTGL_PENGAKUAN = MyBase.Columns("TGL_PENGAKUAN")
            Me.columnDIVISI = MyBase.Columns("DIVISI")
            Me.columnKODE_CUSTOMER = MyBase.Columns("KODE_CUSTOMER")
            Me.columnKODE_APPROVE = MyBase.Columns("KODE_APPROVE")
            Me.columnNAMA = MyBase.Columns("NAMA")
            Me.columnSUBTOTAL = MyBase.Columns("SUBTOTAL")
            Me.columnDISC_QTY = MyBase.Columns("DISC_QTY")
            Me.columnDISC_REG = MyBase.Columns("DISC_REG")
            Me.columnDISC_1 = MyBase.Columns("DISC_1")
            Me.columnDISC_2 = MyBase.Columns("DISC_2")
            Me.columnDISC_3 = MyBase.Columns("DISC_3")
            Me.columnCASH_DISC = MyBase.Columns("CASH_DISC")
            Me.columnDISC_QTY1 = MyBase.Columns("DISC_QTY1")
            Me.columnDPP = MyBase.Columns("DPP")
            Me.columnPPN = MyBase.Columns("PPN")
            Me.columnBAGIAN = MyBase.Columns("BAGIAN")
            Me.columnJENIS_DO = MyBase.Columns("JENIS_DO")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnNAMA_USER = MyBase.Columns("NAMA_USER")
            Me.columnDISC_QTY_NOMINAL = MyBase.Columns("DISC_QTY_NOMINAL")
            Me.columnDISC_QTY_NOMINAL1 = MyBase.Columns("DISC_QTY_NOMINAL1")
            Me.columnBATAL = MyBase.Columns("BATAL")
            Me.columnSUBTOTAL_DETAIL = MyBase.Columns("SUBTOTAL_DETAIL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNO_DO = New Global.System.Data.DataColumn("NO_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_DO)
            Me.columnID_TRANSAKSI = New Global.System.Data.DataColumn("ID_TRANSAKSI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TRANSAKSI)
            Me.columnTGL_PENGAKUAN = New Global.System.Data.DataColumn("TGL_PENGAKUAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PENGAKUAN)
            Me.columnDIVISI = New Global.System.Data.DataColumn("DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVISI)
            Me.columnKODE_CUSTOMER = New Global.System.Data.DataColumn("KODE_CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_CUSTOMER)
            Me.columnKODE_APPROVE = New Global.System.Data.DataColumn("KODE_APPROVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_APPROVE)
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnSUBTOTAL = New Global.System.Data.DataColumn("SUBTOTAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL)
            Me.columnDISC_QTY = New Global.System.Data.DataColumn("DISC_QTY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY)
            Me.columnDISC_REG = New Global.System.Data.DataColumn("DISC_REG", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_REG)
            Me.columnDISC_1 = New Global.System.Data.DataColumn("DISC_1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_1)
            Me.columnDISC_2 = New Global.System.Data.DataColumn("DISC_2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_2)
            Me.columnDISC_3 = New Global.System.Data.DataColumn("DISC_3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_3)
            Me.columnCASH_DISC = New Global.System.Data.DataColumn("CASH_DISC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASH_DISC)
            Me.columnDISC_QTY1 = New Global.System.Data.DataColumn("DISC_QTY1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY1)
            Me.columnDPP = New Global.System.Data.DataColumn("DPP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPP)
            Me.columnPPN = New Global.System.Data.DataColumn("PPN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPN)
            Me.columnBAGIAN = New Global.System.Data.DataColumn("BAGIAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAGIAN)
            Me.columnJENIS_DO = New Global.System.Data.DataColumn("JENIS_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJENIS_DO)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnNAMA_USER = New Global.System.Data.DataColumn("NAMA_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_USER)
            Me.columnDISC_QTY_NOMINAL = New Global.System.Data.DataColumn("DISC_QTY_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY_NOMINAL)
            Me.columnDISC_QTY_NOMINAL1 = New Global.System.Data.DataColumn("DISC_QTY_NOMINAL1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY_NOMINAL1)
            Me.columnBATAL = New Global.System.Data.DataColumn("BATAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATAL)
            Me.columnSUBTOTAL_DETAIL = New Global.System.Data.DataColumn("SUBTOTAL_DETAIL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL_DETAIL)
            Me.columnNO_DO.AllowDBNull = false
            Me.columnNO_DO.MaxLength = 50
            Me.columnID_TRANSAKSI.AllowDBNull = false
            Me.columnID_TRANSAKSI.MaxLength = 50
            Me.columnDIVISI.MaxLength = 20
            Me.columnKODE_CUSTOMER.MaxLength = 20
            Me.columnKODE_APPROVE.MaxLength = 20
            Me.columnNAMA.MaxLength = 150
            Me.columnBAGIAN.MaxLength = 30
            Me.columnJENIS_DO.MaxLength = 50
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnNAMA_USER.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLAPORAN_DORow() As LAPORAN_DORow
            Return CType(Me.NewRow,LAPORAN_DORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LAPORAN_DORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LAPORAN_DORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LAPORAN_DORowChangedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DORowChanged(Me, New LAPORAN_DORowChangeEvent(CType(e.Row,LAPORAN_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LAPORAN_DORowChangingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DORowChanging(Me, New LAPORAN_DORowChangeEvent(CType(e.Row,LAPORAN_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LAPORAN_DORowDeletedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DORowDeleted(Me, New LAPORAN_DORowChangeEvent(CType(e.Row,LAPORAN_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LAPORAN_DORowDeletingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DORowDeleting(Me, New LAPORAN_DORowChangeEvent(CType(e.Row,LAPORAN_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLAPORAN_DORow(ByVal row As LAPORAN_DORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LAPORAN_DODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LAPORAN_DETAIL_DODataTable
        Inherits Global.System.Data.TypedTableBase(Of LAPORAN_DETAIL_DORow)
        
        Private columnCUSTOMER As Global.System.Data.DataColumn
        
        Private columnBARANG As Global.System.Data.DataColumn
        
        Private columnPCS_PRW As Global.System.Data.DataColumn
        
        Private columnBRUTO_PRW As Global.System.Data.DataColumn
        
        Private columnPCS_PST As Global.System.Data.DataColumn
        
        Private columnBRUTO_PST As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LAPORAN_DETAIL_DO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BARANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBARANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCS_PRWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS_PRW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRUTO_PRWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRUTO_PRW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCS_PSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS_PST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BRUTO_PSTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRUTO_PST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LAPORAN_DETAIL_DORow
            Get
                Return CType(Me.Rows(index),LAPORAN_DETAIL_DORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_DORowChanging As LAPORAN_DETAIL_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_DORowChanged As LAPORAN_DETAIL_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_DORowDeleting As LAPORAN_DETAIL_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_DORowDeleted As LAPORAN_DETAIL_DORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLAPORAN_DETAIL_DORow(ByVal row As LAPORAN_DETAIL_DORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLAPORAN_DETAIL_DORow(ByVal CUSTOMER As String, ByVal BARANG As String, ByVal PCS_PRW As Double, ByVal BRUTO_PRW As Double, ByVal PCS_PST As Double, ByVal BRUTO_PST As Double) As LAPORAN_DETAIL_DORow
            Dim rowLAPORAN_DETAIL_DORow As LAPORAN_DETAIL_DORow = CType(Me.NewRow,LAPORAN_DETAIL_DORow)
            Dim columnValuesArray() As Object = New Object() {CUSTOMER, BARANG, PCS_PRW, BRUTO_PRW, PCS_PST, BRUTO_PST}
            rowLAPORAN_DETAIL_DORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLAPORAN_DETAIL_DORow)
            Return rowLAPORAN_DETAIL_DORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LAPORAN_DETAIL_DODataTable = CType(MyBase.Clone,LAPORAN_DETAIL_DODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LAPORAN_DETAIL_DODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCUSTOMER = MyBase.Columns("CUSTOMER")
            Me.columnBARANG = MyBase.Columns("BARANG")
            Me.columnPCS_PRW = MyBase.Columns("PCS_PRW")
            Me.columnBRUTO_PRW = MyBase.Columns("BRUTO_PRW")
            Me.columnPCS_PST = MyBase.Columns("PCS_PST")
            Me.columnBRUTO_PST = MyBase.Columns("BRUTO_PST")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCUSTOMER = New Global.System.Data.DataColumn("CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUSTOMER)
            Me.columnBARANG = New Global.System.Data.DataColumn("BARANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBARANG)
            Me.columnPCS_PRW = New Global.System.Data.DataColumn("PCS_PRW", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS_PRW)
            Me.columnBRUTO_PRW = New Global.System.Data.DataColumn("BRUTO_PRW", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRUTO_PRW)
            Me.columnPCS_PST = New Global.System.Data.DataColumn("PCS_PST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS_PST)
            Me.columnBRUTO_PST = New Global.System.Data.DataColumn("BRUTO_PST", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRUTO_PST)
            Me.columnCUSTOMER.MaxLength = 150
            Me.columnBARANG.MaxLength = 200
            Me.columnPCS_PRW.ReadOnly = true
            Me.columnBRUTO_PRW.ReadOnly = true
            Me.columnPCS_PST.ReadOnly = true
            Me.columnBRUTO_PST.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLAPORAN_DETAIL_DORow() As LAPORAN_DETAIL_DORow
            Return CType(Me.NewRow,LAPORAN_DETAIL_DORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LAPORAN_DETAIL_DORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LAPORAN_DETAIL_DORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LAPORAN_DETAIL_DORowChangedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_DORowChanged(Me, New LAPORAN_DETAIL_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LAPORAN_DETAIL_DORowChangingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_DORowChanging(Me, New LAPORAN_DETAIL_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LAPORAN_DETAIL_DORowDeletedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_DORowDeleted(Me, New LAPORAN_DETAIL_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LAPORAN_DETAIL_DORowDeletingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_DORowDeleting(Me, New LAPORAN_DETAIL_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLAPORAN_DETAIL_DORow(ByVal row As LAPORAN_DETAIL_DORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LAPORAN_DETAIL_DODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRICE_LISTDataTable
        Inherits Global.System.Data.TypedTableBase(Of PRICE_LISTRow)
        
        Private columnKODE As Global.System.Data.DataColumn
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        Private columnID_BARANG As Global.System.Data.DataColumn
        
        Private columnJENIS As Global.System.Data.DataColumn
        
        Private columnHARGA_BARU As Global.System.Data.DataColumn
        
        Private columnQTY_KOLI As Global.System.Data.DataColumn
        
        Private columnSATUAN As Global.System.Data.DataColumn
        
        Private columnNAMA1 As Global.System.Data.DataColumn
        
        Private columnTGL_PRICE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRICE_LIST"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_BARANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_BARANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JENISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJENIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HARGA_BARUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHARGA_BARU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QTY_KOLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQTY_KOLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SATUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSATUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PRICEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PRICE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRICE_LISTRow
            Get
                Return CType(Me.Rows(index),PRICE_LISTRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRICE_LISTRowChanging As PRICE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRICE_LISTRowChanged As PRICE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRICE_LISTRowDeleting As PRICE_LISTRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRICE_LISTRowDeleted As PRICE_LISTRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPRICE_LISTRow(ByVal row As PRICE_LISTRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPRICE_LISTRow(ByVal KODE As String, ByVal NAMA As String, ByVal ID_BARANG As String, ByVal JENIS As String, ByVal HARGA_BARU As Double, ByVal QTY_KOLI As Double, ByVal SATUAN As String, ByVal NAMA1 As String, ByVal TGL_PRICE As Date) As PRICE_LISTRow
            Dim rowPRICE_LISTRow As PRICE_LISTRow = CType(Me.NewRow,PRICE_LISTRow)
            Dim columnValuesArray() As Object = New Object() {KODE, NAMA, ID_BARANG, JENIS, HARGA_BARU, QTY_KOLI, SATUAN, NAMA1, TGL_PRICE}
            rowPRICE_LISTRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRICE_LISTRow)
            Return rowPRICE_LISTRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRICE_LISTDataTable = CType(MyBase.Clone,PRICE_LISTDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRICE_LISTDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnKODE = MyBase.Columns("KODE")
            Me.columnNAMA = MyBase.Columns("NAMA")
            Me.columnID_BARANG = MyBase.Columns("ID_BARANG")
            Me.columnJENIS = MyBase.Columns("JENIS")
            Me.columnHARGA_BARU = MyBase.Columns("HARGA_BARU")
            Me.columnQTY_KOLI = MyBase.Columns("QTY_KOLI")
            Me.columnSATUAN = MyBase.Columns("SATUAN")
            Me.columnNAMA1 = MyBase.Columns("NAMA1")
            Me.columnTGL_PRICE = MyBase.Columns("TGL_PRICE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnKODE = New Global.System.Data.DataColumn("KODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE)
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnID_BARANG = New Global.System.Data.DataColumn("ID_BARANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_BARANG)
            Me.columnJENIS = New Global.System.Data.DataColumn("JENIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJENIS)
            Me.columnHARGA_BARU = New Global.System.Data.DataColumn("HARGA_BARU", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHARGA_BARU)
            Me.columnQTY_KOLI = New Global.System.Data.DataColumn("QTY_KOLI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQTY_KOLI)
            Me.columnSATUAN = New Global.System.Data.DataColumn("SATUAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSATUAN)
            Me.columnNAMA1 = New Global.System.Data.DataColumn("NAMA1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA1)
            Me.columnTGL_PRICE = New Global.System.Data.DataColumn("TGL_PRICE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PRICE)
            Me.columnKODE.MaxLength = 30
            Me.columnNAMA.MaxLength = 200
            Me.columnID_BARANG.MaxLength = 30
            Me.columnJENIS.ReadOnly = true
            Me.columnJENIS.MaxLength = 9
            Me.columnSATUAN.MaxLength = 10
            Me.columnNAMA1.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPRICE_LISTRow() As PRICE_LISTRow
            Return CType(Me.NewRow,PRICE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRICE_LISTRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRICE_LISTRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRICE_LISTRowChangedEvent) Is Nothing) Then
                RaiseEvent PRICE_LISTRowChanged(Me, New PRICE_LISTRowChangeEvent(CType(e.Row,PRICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRICE_LISTRowChangingEvent) Is Nothing) Then
                RaiseEvent PRICE_LISTRowChanging(Me, New PRICE_LISTRowChangeEvent(CType(e.Row,PRICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRICE_LISTRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRICE_LISTRowDeleted(Me, New PRICE_LISTRowChangeEvent(CType(e.Row,PRICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRICE_LISTRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRICE_LISTRowDeleting(Me, New PRICE_LISTRowChangeEvent(CType(e.Row,PRICE_LISTRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePRICE_LISTRow(ByVal row As PRICE_LISTRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRICE_LISTDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROC_SALDO_STOKDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROC_SALDO_STOKRow)
        
        Private columnID As Global.System.Data.DataColumn
        
        Private columnQUANTITY As Global.System.Data.DataColumn
        
        Private columnDZ As Global.System.Data.DataColumn
        
        Private columnPCS As Global.System.Data.DataColumn
        
        Private columnSAT_SUPER1 As Global.System.Data.DataColumn
        
        Private columnKODE As Global.System.Data.DataColumn
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        Private columnHARGA As Global.System.Data.DataColumn
        
        Private columnJUMLAH_HARGA As Global.System.Data.DataColumn
        
        Private columnKARTU_STOK As Global.System.Data.DataColumn
        
        Private columnTAMBAHAN_HARGA As Global.System.Data.DataColumn
        
        Private columnBEDA_HARGA As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnGUDANG As Global.System.Data.DataColumn
        
        Private columnNAMA_GUDANG As Global.System.Data.DataColumn
        
        Private columnSATUAN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROC_SALDO_STOK"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DZColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDZ
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SAT_SUPER1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSAT_SUPER1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JUMLAH_HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJUMLAH_HARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KARTU_STOKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKARTU_STOK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAMBAHAN_HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAMBAHAN_HARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BEDA_HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBEDA_HARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_GUDANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_GUDANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SATUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSATUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROC_SALDO_STOKRow
            Get
                Return CType(Me.Rows(index),PROC_SALDO_STOKRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROC_SALDO_STOKRowChanging As PROC_SALDO_STOKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROC_SALDO_STOKRowChanged As PROC_SALDO_STOKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROC_SALDO_STOKRowDeleting As PROC_SALDO_STOKRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROC_SALDO_STOKRowDeleted As PROC_SALDO_STOKRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROC_SALDO_STOKRow(ByVal row As PROC_SALDO_STOKRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROC_SALDO_STOKRow( _
                    ByVal ID As String,  _
                    ByVal QUANTITY As Double,  _
                    ByVal DZ As Double,  _
                    ByVal PCS As Double,  _
                    ByVal SAT_SUPER1 As String,  _
                    ByVal KODE As String,  _
                    ByVal NAMA As String,  _
                    ByVal HARGA As Double,  _
                    ByVal JUMLAH_HARGA As Double,  _
                    ByVal KARTU_STOK As Double,  _
                    ByVal TAMBAHAN_HARGA As Double,  _
                    ByVal BEDA_HARGA As Double,  _
                    ByVal NAMA_DIVISI As String,  _
                    ByVal GUDANG As String,  _
                    ByVal NAMA_GUDANG As String,  _
                    ByVal SATUAN As String) As PROC_SALDO_STOKRow
            Dim rowPROC_SALDO_STOKRow As PROC_SALDO_STOKRow = CType(Me.NewRow,PROC_SALDO_STOKRow)
            Dim columnValuesArray() As Object = New Object() {ID, QUANTITY, DZ, PCS, SAT_SUPER1, KODE, NAMA, HARGA, JUMLAH_HARGA, KARTU_STOK, TAMBAHAN_HARGA, BEDA_HARGA, NAMA_DIVISI, GUDANG, NAMA_GUDANG, SATUAN}
            rowPROC_SALDO_STOKRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROC_SALDO_STOKRow)
            Return rowPROC_SALDO_STOKRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByID(ByVal ID As String) As PROC_SALDO_STOKRow
            Return CType(Me.Rows.Find(New Object() {ID}),PROC_SALDO_STOKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROC_SALDO_STOKDataTable = CType(MyBase.Clone,PROC_SALDO_STOKDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROC_SALDO_STOKDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID = MyBase.Columns("ID")
            Me.columnQUANTITY = MyBase.Columns("QUANTITY")
            Me.columnDZ = MyBase.Columns("DZ")
            Me.columnPCS = MyBase.Columns("PCS")
            Me.columnSAT_SUPER1 = MyBase.Columns("SAT_SUPER1")
            Me.columnKODE = MyBase.Columns("KODE")
            Me.columnNAMA = MyBase.Columns("NAMA")
            Me.columnHARGA = MyBase.Columns("HARGA")
            Me.columnJUMLAH_HARGA = MyBase.Columns("JUMLAH_HARGA")
            Me.columnKARTU_STOK = MyBase.Columns("KARTU_STOK")
            Me.columnTAMBAHAN_HARGA = MyBase.Columns("TAMBAHAN_HARGA")
            Me.columnBEDA_HARGA = MyBase.Columns("BEDA_HARGA")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnGUDANG = MyBase.Columns("GUDANG")
            Me.columnNAMA_GUDANG = MyBase.Columns("NAMA_GUDANG")
            Me.columnSATUAN = MyBase.Columns("SATUAN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID = New Global.System.Data.DataColumn("ID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID)
            Me.columnQUANTITY = New Global.System.Data.DataColumn("QUANTITY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUANTITY)
            Me.columnDZ = New Global.System.Data.DataColumn("DZ", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDZ)
            Me.columnPCS = New Global.System.Data.DataColumn("PCS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS)
            Me.columnSAT_SUPER1 = New Global.System.Data.DataColumn("SAT_SUPER1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSAT_SUPER1)
            Me.columnKODE = New Global.System.Data.DataColumn("KODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE)
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnHARGA = New Global.System.Data.DataColumn("HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHARGA)
            Me.columnJUMLAH_HARGA = New Global.System.Data.DataColumn("JUMLAH_HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJUMLAH_HARGA)
            Me.columnKARTU_STOK = New Global.System.Data.DataColumn("KARTU_STOK", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKARTU_STOK)
            Me.columnTAMBAHAN_HARGA = New Global.System.Data.DataColumn("TAMBAHAN_HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAMBAHAN_HARGA)
            Me.columnBEDA_HARGA = New Global.System.Data.DataColumn("BEDA_HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBEDA_HARGA)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnGUDANG = New Global.System.Data.DataColumn("GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGUDANG)
            Me.columnNAMA_GUDANG = New Global.System.Data.DataColumn("NAMA_GUDANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_GUDANG)
            Me.columnSATUAN = New Global.System.Data.DataColumn("SATUAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSATUAN)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnID}, true))
            Me.columnID.AllowDBNull = false
            Me.columnID.Unique = true
            Me.columnID.MaxLength = 30
            Me.columnQUANTITY.ReadOnly = true
            Me.columnDZ.ReadOnly = true
            Me.columnPCS.ReadOnly = true
            Me.columnSAT_SUPER1.MaxLength = 10
            Me.columnKODE.AllowDBNull = false
            Me.columnKODE.MaxLength = 30
            Me.columnNAMA.MaxLength = 200
            Me.columnHARGA.ReadOnly = true
            Me.columnJUMLAH_HARGA.ReadOnly = true
            Me.columnKARTU_STOK.ReadOnly = true
            Me.columnTAMBAHAN_HARGA.ReadOnly = true
            Me.columnBEDA_HARGA.ReadOnly = true
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnGUDANG.MaxLength = 20
            Me.columnNAMA_GUDANG.MaxLength = 50
            Me.columnSATUAN.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROC_SALDO_STOKRow() As PROC_SALDO_STOKRow
            Return CType(Me.NewRow,PROC_SALDO_STOKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROC_SALDO_STOKRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROC_SALDO_STOKRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROC_SALDO_STOKRowChangedEvent) Is Nothing) Then
                RaiseEvent PROC_SALDO_STOKRowChanged(Me, New PROC_SALDO_STOKRowChangeEvent(CType(e.Row,PROC_SALDO_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROC_SALDO_STOKRowChangingEvent) Is Nothing) Then
                RaiseEvent PROC_SALDO_STOKRowChanging(Me, New PROC_SALDO_STOKRowChangeEvent(CType(e.Row,PROC_SALDO_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROC_SALDO_STOKRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROC_SALDO_STOKRowDeleted(Me, New PROC_SALDO_STOKRowChangeEvent(CType(e.Row,PROC_SALDO_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROC_SALDO_STOKRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROC_SALDO_STOKRowDeleting(Me, New PROC_SALDO_STOKRowChangeEvent(CType(e.Row,PROC_SALDO_STOKRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROC_SALDO_STOKRow(ByVal row As PROC_SALDO_STOKRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROC_SALDO_STOKDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LAPORAN_PENJUALANDataTable
        Inherits Global.System.Data.TypedTableBase(Of LAPORAN_PENJUALANRow)
        
        Private columnNO_NOTA As Global.System.Data.DataColumn
        
        Private columnNO_REF As Global.System.Data.DataColumn
        
        Private columnTGL As Global.System.Data.DataColumn
        
        Private columnTGL_PENGAKUAN As Global.System.Data.DataColumn
        
        Private columnNO_DO As Global.System.Data.DataColumn
        
        Private columnID_DO As Global.System.Data.DataColumn
        
        Private columnDIVISI As Global.System.Data.DataColumn
        
        Private columnKODE_CUSTOMER As Global.System.Data.DataColumn
        
        Private columnKODE_APPROVE As Global.System.Data.DataColumn
        
        Private columnNAMA_CUSTOMER As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnKODE As Global.System.Data.DataColumn
        
        Private columnNAMA_BARANG As Global.System.Data.DataColumn
        
        Private columnISI As Global.System.Data.DataColumn
        
        Private columnKOLI As Global.System.Data.DataColumn
        
        Private columnQUANTITY As Global.System.Data.DataColumn
        
        Private columnSATUAN As Global.System.Data.DataColumn
        
        Private columnKONVERSI As Global.System.Data.DataColumn
        
        Private columnPCS As Global.System.Data.DataColumn
        
        Private columnHARGA As Global.System.Data.DataColumn
        
        Private columnNAMA_USER As Global.System.Data.DataColumn
        
        Private columnDISC As Global.System.Data.DataColumn
        
        Private columnDISKON_SATUAN As Global.System.Data.DataColumn
        
        Private columnBATAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LAPORAN_PENJUALAN"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_NOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_NOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_REFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_REF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PENGAKUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PENGAKUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_CUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_APPROVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_APPROVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_CUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_BARANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_BARANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SATUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSATUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KONVERSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKONVERSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISKON_SATUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISKON_SATUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LAPORAN_PENJUALANRow
            Get
                Return CType(Me.Rows(index),LAPORAN_PENJUALANRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PENJUALANRowChanging As LAPORAN_PENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PENJUALANRowChanged As LAPORAN_PENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PENJUALANRowDeleting As LAPORAN_PENJUALANRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_PENJUALANRowDeleted As LAPORAN_PENJUALANRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLAPORAN_PENJUALANRow(ByVal row As LAPORAN_PENJUALANRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLAPORAN_PENJUALANRow( _
                    ByVal NO_NOTA As String,  _
                    ByVal NO_REF As String,  _
                    ByVal TGL As Date,  _
                    ByVal TGL_PENGAKUAN As Date,  _
                    ByVal NO_DO As String,  _
                    ByVal ID_DO As String,  _
                    ByVal DIVISI As String,  _
                    ByVal KODE_CUSTOMER As String,  _
                    ByVal KODE_APPROVE As String,  _
                    ByVal NAMA_CUSTOMER As String,  _
                    ByVal NAMA_DIVISI As String,  _
                    ByVal KODE As String,  _
                    ByVal NAMA_BARANG As String,  _
                    ByVal ISI As Double,  _
                    ByVal KOLI As Double,  _
                    ByVal QUANTITY As Double,  _
                    ByVal SATUAN As String,  _
                    ByVal KONVERSI As Double,  _
                    ByVal PCS As Double,  _
                    ByVal HARGA As Double,  _
                    ByVal NAMA_USER As String,  _
                    ByVal DISC As Double,  _
                    ByVal DISKON_SATUAN As Double,  _
                    ByVal BATAL As Boolean) As LAPORAN_PENJUALANRow
            Dim rowLAPORAN_PENJUALANRow As LAPORAN_PENJUALANRow = CType(Me.NewRow,LAPORAN_PENJUALANRow)
            Dim columnValuesArray() As Object = New Object() {NO_NOTA, NO_REF, TGL, TGL_PENGAKUAN, NO_DO, ID_DO, DIVISI, KODE_CUSTOMER, KODE_APPROVE, NAMA_CUSTOMER, NAMA_DIVISI, KODE, NAMA_BARANG, ISI, KOLI, QUANTITY, SATUAN, KONVERSI, PCS, HARGA, NAMA_USER, DISC, DISKON_SATUAN, BATAL}
            rowLAPORAN_PENJUALANRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLAPORAN_PENJUALANRow)
            Return rowLAPORAN_PENJUALANRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LAPORAN_PENJUALANDataTable = CType(MyBase.Clone,LAPORAN_PENJUALANDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LAPORAN_PENJUALANDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNO_NOTA = MyBase.Columns("NO_NOTA")
            Me.columnNO_REF = MyBase.Columns("NO_REF")
            Me.columnTGL = MyBase.Columns("TGL")
            Me.columnTGL_PENGAKUAN = MyBase.Columns("TGL_PENGAKUAN")
            Me.columnNO_DO = MyBase.Columns("NO_DO")
            Me.columnID_DO = MyBase.Columns("ID_DO")
            Me.columnDIVISI = MyBase.Columns("DIVISI")
            Me.columnKODE_CUSTOMER = MyBase.Columns("KODE_CUSTOMER")
            Me.columnKODE_APPROVE = MyBase.Columns("KODE_APPROVE")
            Me.columnNAMA_CUSTOMER = MyBase.Columns("NAMA_CUSTOMER")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnKODE = MyBase.Columns("KODE")
            Me.columnNAMA_BARANG = MyBase.Columns("NAMA_BARANG")
            Me.columnISI = MyBase.Columns("ISI")
            Me.columnKOLI = MyBase.Columns("KOLI")
            Me.columnQUANTITY = MyBase.Columns("QUANTITY")
            Me.columnSATUAN = MyBase.Columns("SATUAN")
            Me.columnKONVERSI = MyBase.Columns("KONVERSI")
            Me.columnPCS = MyBase.Columns("PCS")
            Me.columnHARGA = MyBase.Columns("HARGA")
            Me.columnNAMA_USER = MyBase.Columns("NAMA_USER")
            Me.columnDISC = MyBase.Columns("DISC")
            Me.columnDISKON_SATUAN = MyBase.Columns("DISKON_SATUAN")
            Me.columnBATAL = MyBase.Columns("BATAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNO_NOTA = New Global.System.Data.DataColumn("NO_NOTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_NOTA)
            Me.columnNO_REF = New Global.System.Data.DataColumn("NO_REF", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_REF)
            Me.columnTGL = New Global.System.Data.DataColumn("TGL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL)
            Me.columnTGL_PENGAKUAN = New Global.System.Data.DataColumn("TGL_PENGAKUAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PENGAKUAN)
            Me.columnNO_DO = New Global.System.Data.DataColumn("NO_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_DO)
            Me.columnID_DO = New Global.System.Data.DataColumn("ID_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_DO)
            Me.columnDIVISI = New Global.System.Data.DataColumn("DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVISI)
            Me.columnKODE_CUSTOMER = New Global.System.Data.DataColumn("KODE_CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_CUSTOMER)
            Me.columnKODE_APPROVE = New Global.System.Data.DataColumn("KODE_APPROVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_APPROVE)
            Me.columnNAMA_CUSTOMER = New Global.System.Data.DataColumn("NAMA_CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_CUSTOMER)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnKODE = New Global.System.Data.DataColumn("KODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE)
            Me.columnNAMA_BARANG = New Global.System.Data.DataColumn("NAMA_BARANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_BARANG)
            Me.columnISI = New Global.System.Data.DataColumn("ISI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISI)
            Me.columnKOLI = New Global.System.Data.DataColumn("KOLI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOLI)
            Me.columnQUANTITY = New Global.System.Data.DataColumn("QUANTITY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUANTITY)
            Me.columnSATUAN = New Global.System.Data.DataColumn("SATUAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSATUAN)
            Me.columnKONVERSI = New Global.System.Data.DataColumn("KONVERSI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKONVERSI)
            Me.columnPCS = New Global.System.Data.DataColumn("PCS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS)
            Me.columnHARGA = New Global.System.Data.DataColumn("HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHARGA)
            Me.columnNAMA_USER = New Global.System.Data.DataColumn("NAMA_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_USER)
            Me.columnDISC = New Global.System.Data.DataColumn("DISC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC)
            Me.columnDISKON_SATUAN = New Global.System.Data.DataColumn("DISKON_SATUAN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISKON_SATUAN)
            Me.columnBATAL = New Global.System.Data.DataColumn("BATAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATAL)
            Me.columnNO_NOTA.MaxLength = 30
            Me.columnNO_REF.MaxLength = 30
            Me.columnNO_DO.MaxLength = 50
            Me.columnID_DO.MaxLength = 50
            Me.columnDIVISI.MaxLength = 20
            Me.columnKODE_CUSTOMER.MaxLength = 20
            Me.columnKODE_APPROVE.MaxLength = 20
            Me.columnNAMA_CUSTOMER.MaxLength = 150
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnKODE.AllowDBNull = false
            Me.columnKODE.MaxLength = 30
            Me.columnNAMA_BARANG.MaxLength = 200
            Me.columnSATUAN.MaxLength = 30
            Me.columnNAMA_USER.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLAPORAN_PENJUALANRow() As LAPORAN_PENJUALANRow
            Return CType(Me.NewRow,LAPORAN_PENJUALANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LAPORAN_PENJUALANRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LAPORAN_PENJUALANRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LAPORAN_PENJUALANRowChangedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PENJUALANRowChanged(Me, New LAPORAN_PENJUALANRowChangeEvent(CType(e.Row,LAPORAN_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LAPORAN_PENJUALANRowChangingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PENJUALANRowChanging(Me, New LAPORAN_PENJUALANRowChangeEvent(CType(e.Row,LAPORAN_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LAPORAN_PENJUALANRowDeletedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PENJUALANRowDeleted(Me, New LAPORAN_PENJUALANRowChangeEvent(CType(e.Row,LAPORAN_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LAPORAN_PENJUALANRowDeletingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_PENJUALANRowDeleting(Me, New LAPORAN_PENJUALANRowChangeEvent(CType(e.Row,LAPORAN_PENJUALANRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLAPORAN_PENJUALANRow(ByVal row As LAPORAN_PENJUALANRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LAPORAN_PENJUALANDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LPBLDataTable
        Inherits Global.System.Data.TypedTableBase(Of LPBLRow)
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        Private columnNO_NOTA As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnNO_NOTA_RETUR As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL As Global.System.Data.DataColumn
        
        Private columnDISCOUNT As Global.System.Data.DataColumn
        
        Private columnTGL_PENGAKUAN As Global.System.Data.DataColumn
        
        Private columnGROUP_CUSTOMER As Global.System.Data.DataColumn
        
        Private columnBATAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LPBL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_NOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_NOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_NOTA_RETURColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_NOTA_RETUR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISCOUNTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISCOUNT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PENGAKUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PENGAKUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property GROUP_CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGROUP_CUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BATALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBATAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LPBLRow
            Get
                Return CType(Me.Rows(index),LPBLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LPBLRowChanging As LPBLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LPBLRowChanged As LPBLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LPBLRowDeleting As LPBLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LPBLRowDeleted As LPBLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLPBLRow(ByVal row As LPBLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLPBLRow(ByVal NAMA As String, ByVal NO_NOTA As String, ByVal NAMA_DIVISI As String, ByVal NO_NOTA_RETUR As String, ByVal SUBTOTAL As Double, ByVal DISCOUNT As Double, ByVal TGL_PENGAKUAN As Date, ByVal GROUP_CUSTOMER As String, ByVal BATAL As Boolean) As LPBLRow
            Dim rowLPBLRow As LPBLRow = CType(Me.NewRow,LPBLRow)
            Dim columnValuesArray() As Object = New Object() {NAMA, NO_NOTA, NAMA_DIVISI, NO_NOTA_RETUR, SUBTOTAL, DISCOUNT, TGL_PENGAKUAN, GROUP_CUSTOMER, BATAL}
            rowLPBLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLPBLRow)
            Return rowLPBLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LPBLDataTable = CType(MyBase.Clone,LPBLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LPBLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNAMA = MyBase.Columns("NAMA")
            Me.columnNO_NOTA = MyBase.Columns("NO_NOTA")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnNO_NOTA_RETUR = MyBase.Columns("NO_NOTA_RETUR")
            Me.columnSUBTOTAL = MyBase.Columns("SUBTOTAL")
            Me.columnDISCOUNT = MyBase.Columns("DISCOUNT")
            Me.columnTGL_PENGAKUAN = MyBase.Columns("TGL_PENGAKUAN")
            Me.columnGROUP_CUSTOMER = MyBase.Columns("GROUP_CUSTOMER")
            Me.columnBATAL = MyBase.Columns("BATAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnNO_NOTA = New Global.System.Data.DataColumn("NO_NOTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_NOTA)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnNO_NOTA_RETUR = New Global.System.Data.DataColumn("NO_NOTA_RETUR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_NOTA_RETUR)
            Me.columnSUBTOTAL = New Global.System.Data.DataColumn("SUBTOTAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL)
            Me.columnDISCOUNT = New Global.System.Data.DataColumn("DISCOUNT", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISCOUNT)
            Me.columnTGL_PENGAKUAN = New Global.System.Data.DataColumn("TGL_PENGAKUAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PENGAKUAN)
            Me.columnGROUP_CUSTOMER = New Global.System.Data.DataColumn("GROUP_CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGROUP_CUSTOMER)
            Me.columnBATAL = New Global.System.Data.DataColumn("BATAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBATAL)
            Me.columnNAMA.MaxLength = 150
            Me.columnNO_NOTA.MaxLength = 50
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnNO_NOTA_RETUR.AllowDBNull = false
            Me.columnNO_NOTA_RETUR.MaxLength = 50
            Me.columnDISCOUNT.ReadOnly = true
            Me.columnGROUP_CUSTOMER.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLPBLRow() As LPBLRow
            Return CType(Me.NewRow,LPBLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LPBLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LPBLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LPBLRowChangedEvent) Is Nothing) Then
                RaiseEvent LPBLRowChanged(Me, New LPBLRowChangeEvent(CType(e.Row,LPBLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LPBLRowChangingEvent) Is Nothing) Then
                RaiseEvent LPBLRowChanging(Me, New LPBLRowChangeEvent(CType(e.Row,LPBLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LPBLRowDeletedEvent) Is Nothing) Then
                RaiseEvent LPBLRowDeleted(Me, New LPBLRowChangeEvent(CType(e.Row,LPBLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LPBLRowDeletingEvent) Is Nothing) Then
                RaiseEvent LPBLRowDeleting(Me, New LPBLRowChangeEvent(CType(e.Row,LPBLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLPBLRow(ByVal row As LPBLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LPBLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LAPORAN_DETAIL_BARANG_DODataTable
        Inherits Global.System.Data.TypedTableBase(Of LAPORAN_DETAIL_BARANG_DORow)
        
        Private columnNO_DO As Global.System.Data.DataColumn
        
        Private columnID_TRANSAKSI As Global.System.Data.DataColumn
        
        Private columnTGL_PENGAKUAN As Global.System.Data.DataColumn
        
        Private columnDIVISI As Global.System.Data.DataColumn
        
        Private columnKODE_CUSTOMER As Global.System.Data.DataColumn
        
        Private columnKODE_APPROVE As Global.System.Data.DataColumn
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        Private columnID_BARANG As Global.System.Data.DataColumn
        
        Private columnNAMA_BARANG As Global.System.Data.DataColumn
        
        Private columnHARGA As Global.System.Data.DataColumn
        
        Private columnKOLI As Global.System.Data.DataColumn
        
        Private columnQUANTITY As Global.System.Data.DataColumn
        
        Private columnPCS As Global.System.Data.DataColumn
        
        Private columnSUBTOTAL As Global.System.Data.DataColumn
        
        Private columnDISC_QTY As Global.System.Data.DataColumn
        
        Private columnDISC_REG As Global.System.Data.DataColumn
        
        Private columnDISC_1 As Global.System.Data.DataColumn
        
        Private columnDISC_2 As Global.System.Data.DataColumn
        
        Private columnDISC_3 As Global.System.Data.DataColumn
        
        Private columnCASH_DISC As Global.System.Data.DataColumn
        
        Private columnDISC_QTY1 As Global.System.Data.DataColumn
        
        Private columnDPP As Global.System.Data.DataColumn
        
        Private columnPPN As Global.System.Data.DataColumn
        
        Private columnBAGIAN As Global.System.Data.DataColumn
        
        Private columnJENIS_DO As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnNAMA_USER As Global.System.Data.DataColumn
        
        Private columnDISC_QTY_NOMINAL As Global.System.Data.DataColumn
        
        Private columnDISC_QTY_NOMINAL1 As Global.System.Data.DataColumn
        
        Private columnSATUAN As Global.System.Data.DataColumn
        
        Private columnURUTAN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LAPORAN_DETAIL_BARANG_DO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TRANSAKSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TRANSAKSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PENGAKUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PENGAKUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_CUSTOMERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_CUSTOMER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODE_APPROVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE_APPROVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_BARANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_BARANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_BARANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_BARANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SUBTOTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBTOTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_REGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_REG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CASH_DISCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCASH_DISC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PPNColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPPN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BAGIANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBAGIAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property JENIS_DOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJENIS_DO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_USERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_USER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY_NOMINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY_NOMINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DISC_QTY_NOMINAL1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDISC_QTY_NOMINAL1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SATUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSATUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property URUTANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnURUTAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LAPORAN_DETAIL_BARANG_DORow
            Get
                Return CType(Me.Rows(index),LAPORAN_DETAIL_BARANG_DORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_BARANG_DORowChanging As LAPORAN_DETAIL_BARANG_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_BARANG_DORowChanged As LAPORAN_DETAIL_BARANG_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_BARANG_DORowDeleting As LAPORAN_DETAIL_BARANG_DORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_DETAIL_BARANG_DORowDeleted As LAPORAN_DETAIL_BARANG_DORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLAPORAN_DETAIL_BARANG_DORow(ByVal row As LAPORAN_DETAIL_BARANG_DORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLAPORAN_DETAIL_BARANG_DORow( _
                    ByVal NO_DO As String,  _
                    ByVal ID_TRANSAKSI As String,  _
                    ByVal TGL_PENGAKUAN As Date,  _
                    ByVal DIVISI As String,  _
                    ByVal KODE_CUSTOMER As String,  _
                    ByVal KODE_APPROVE As String,  _
                    ByVal NAMA As String,  _
                    ByVal ID_BARANG As String,  _
                    ByVal NAMA_BARANG As String,  _
                    ByVal HARGA As Double,  _
                    ByVal KOLI As Double,  _
                    ByVal QUANTITY As Double,  _
                    ByVal PCS As Double,  _
                    ByVal SUBTOTAL As Double,  _
                    ByVal DISC_QTY As Double,  _
                    ByVal DISC_REG As Double,  _
                    ByVal DISC_1 As Double,  _
                    ByVal DISC_2 As Double,  _
                    ByVal DISC_3 As Double,  _
                    ByVal CASH_DISC As Double,  _
                    ByVal DISC_QTY1 As Double,  _
                    ByVal DPP As Double,  _
                    ByVal PPN As Double,  _
                    ByVal BAGIAN As String,  _
                    ByVal JENIS_DO As String,  _
                    ByVal NAMA_DIVISI As String,  _
                    ByVal NAMA_USER As String,  _
                    ByVal DISC_QTY_NOMINAL As Double,  _
                    ByVal DISC_QTY_NOMINAL1 As Double,  _
                    ByVal SATUAN As String,  _
                    ByVal URUTAN As Double) As LAPORAN_DETAIL_BARANG_DORow
            Dim rowLAPORAN_DETAIL_BARANG_DORow As LAPORAN_DETAIL_BARANG_DORow = CType(Me.NewRow,LAPORAN_DETAIL_BARANG_DORow)
            Dim columnValuesArray() As Object = New Object() {NO_DO, ID_TRANSAKSI, TGL_PENGAKUAN, DIVISI, KODE_CUSTOMER, KODE_APPROVE, NAMA, ID_BARANG, NAMA_BARANG, HARGA, KOLI, QUANTITY, PCS, SUBTOTAL, DISC_QTY, DISC_REG, DISC_1, DISC_2, DISC_3, CASH_DISC, DISC_QTY1, DPP, PPN, BAGIAN, JENIS_DO, NAMA_DIVISI, NAMA_USER, DISC_QTY_NOMINAL, DISC_QTY_NOMINAL1, SATUAN, URUTAN}
            rowLAPORAN_DETAIL_BARANG_DORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLAPORAN_DETAIL_BARANG_DORow)
            Return rowLAPORAN_DETAIL_BARANG_DORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LAPORAN_DETAIL_BARANG_DODataTable = CType(MyBase.Clone,LAPORAN_DETAIL_BARANG_DODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LAPORAN_DETAIL_BARANG_DODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNO_DO = MyBase.Columns("NO_DO")
            Me.columnID_TRANSAKSI = MyBase.Columns("ID_TRANSAKSI")
            Me.columnTGL_PENGAKUAN = MyBase.Columns("TGL_PENGAKUAN")
            Me.columnDIVISI = MyBase.Columns("DIVISI")
            Me.columnKODE_CUSTOMER = MyBase.Columns("KODE_CUSTOMER")
            Me.columnKODE_APPROVE = MyBase.Columns("KODE_APPROVE")
            Me.columnNAMA = MyBase.Columns("NAMA")
            Me.columnID_BARANG = MyBase.Columns("ID_BARANG")
            Me.columnNAMA_BARANG = MyBase.Columns("NAMA_BARANG")
            Me.columnHARGA = MyBase.Columns("HARGA")
            Me.columnKOLI = MyBase.Columns("KOLI")
            Me.columnQUANTITY = MyBase.Columns("QUANTITY")
            Me.columnPCS = MyBase.Columns("PCS")
            Me.columnSUBTOTAL = MyBase.Columns("SUBTOTAL")
            Me.columnDISC_QTY = MyBase.Columns("DISC_QTY")
            Me.columnDISC_REG = MyBase.Columns("DISC_REG")
            Me.columnDISC_1 = MyBase.Columns("DISC_1")
            Me.columnDISC_2 = MyBase.Columns("DISC_2")
            Me.columnDISC_3 = MyBase.Columns("DISC_3")
            Me.columnCASH_DISC = MyBase.Columns("CASH_DISC")
            Me.columnDISC_QTY1 = MyBase.Columns("DISC_QTY1")
            Me.columnDPP = MyBase.Columns("DPP")
            Me.columnPPN = MyBase.Columns("PPN")
            Me.columnBAGIAN = MyBase.Columns("BAGIAN")
            Me.columnJENIS_DO = MyBase.Columns("JENIS_DO")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnNAMA_USER = MyBase.Columns("NAMA_USER")
            Me.columnDISC_QTY_NOMINAL = MyBase.Columns("DISC_QTY_NOMINAL")
            Me.columnDISC_QTY_NOMINAL1 = MyBase.Columns("DISC_QTY_NOMINAL1")
            Me.columnSATUAN = MyBase.Columns("SATUAN")
            Me.columnURUTAN = MyBase.Columns("URUTAN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNO_DO = New Global.System.Data.DataColumn("NO_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_DO)
            Me.columnID_TRANSAKSI = New Global.System.Data.DataColumn("ID_TRANSAKSI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TRANSAKSI)
            Me.columnTGL_PENGAKUAN = New Global.System.Data.DataColumn("TGL_PENGAKUAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PENGAKUAN)
            Me.columnDIVISI = New Global.System.Data.DataColumn("DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIVISI)
            Me.columnKODE_CUSTOMER = New Global.System.Data.DataColumn("KODE_CUSTOMER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_CUSTOMER)
            Me.columnKODE_APPROVE = New Global.System.Data.DataColumn("KODE_APPROVE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE_APPROVE)
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnID_BARANG = New Global.System.Data.DataColumn("ID_BARANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_BARANG)
            Me.columnNAMA_BARANG = New Global.System.Data.DataColumn("NAMA_BARANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_BARANG)
            Me.columnHARGA = New Global.System.Data.DataColumn("HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHARGA)
            Me.columnKOLI = New Global.System.Data.DataColumn("KOLI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOLI)
            Me.columnQUANTITY = New Global.System.Data.DataColumn("QUANTITY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUANTITY)
            Me.columnPCS = New Global.System.Data.DataColumn("PCS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS)
            Me.columnSUBTOTAL = New Global.System.Data.DataColumn("SUBTOTAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBTOTAL)
            Me.columnDISC_QTY = New Global.System.Data.DataColumn("DISC_QTY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY)
            Me.columnDISC_REG = New Global.System.Data.DataColumn("DISC_REG", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_REG)
            Me.columnDISC_1 = New Global.System.Data.DataColumn("DISC_1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_1)
            Me.columnDISC_2 = New Global.System.Data.DataColumn("DISC_2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_2)
            Me.columnDISC_3 = New Global.System.Data.DataColumn("DISC_3", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_3)
            Me.columnCASH_DISC = New Global.System.Data.DataColumn("CASH_DISC", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCASH_DISC)
            Me.columnDISC_QTY1 = New Global.System.Data.DataColumn("DISC_QTY1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY1)
            Me.columnDPP = New Global.System.Data.DataColumn("DPP", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPP)
            Me.columnPPN = New Global.System.Data.DataColumn("PPN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPPN)
            Me.columnBAGIAN = New Global.System.Data.DataColumn("BAGIAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBAGIAN)
            Me.columnJENIS_DO = New Global.System.Data.DataColumn("JENIS_DO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJENIS_DO)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnNAMA_USER = New Global.System.Data.DataColumn("NAMA_USER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_USER)
            Me.columnDISC_QTY_NOMINAL = New Global.System.Data.DataColumn("DISC_QTY_NOMINAL", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY_NOMINAL)
            Me.columnDISC_QTY_NOMINAL1 = New Global.System.Data.DataColumn("DISC_QTY_NOMINAL1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDISC_QTY_NOMINAL1)
            Me.columnSATUAN = New Global.System.Data.DataColumn("SATUAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSATUAN)
            Me.columnURUTAN = New Global.System.Data.DataColumn("URUTAN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnURUTAN)
            Me.columnNO_DO.MaxLength = 50
            Me.columnID_TRANSAKSI.AllowDBNull = false
            Me.columnID_TRANSAKSI.MaxLength = 50
            Me.columnDIVISI.MaxLength = 20
            Me.columnKODE_CUSTOMER.MaxLength = 20
            Me.columnKODE_APPROVE.MaxLength = 20
            Me.columnNAMA.MaxLength = 150
            Me.columnID_BARANG.MaxLength = 30
            Me.columnNAMA_BARANG.MaxLength = 200
            Me.columnBAGIAN.MaxLength = 30
            Me.columnJENIS_DO.MaxLength = 50
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnNAMA_USER.MaxLength = 100
            Me.columnSATUAN.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLAPORAN_DETAIL_BARANG_DORow() As LAPORAN_DETAIL_BARANG_DORow
            Return CType(Me.NewRow,LAPORAN_DETAIL_BARANG_DORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LAPORAN_DETAIL_BARANG_DORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LAPORAN_DETAIL_BARANG_DORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LAPORAN_DETAIL_BARANG_DORowChangedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_BARANG_DORowChanged(Me, New LAPORAN_DETAIL_BARANG_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_BARANG_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LAPORAN_DETAIL_BARANG_DORowChangingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_BARANG_DORowChanging(Me, New LAPORAN_DETAIL_BARANG_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_BARANG_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LAPORAN_DETAIL_BARANG_DORowDeletedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_BARANG_DORowDeleted(Me, New LAPORAN_DETAIL_BARANG_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_BARANG_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LAPORAN_DETAIL_BARANG_DORowDeletingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_DETAIL_BARANG_DORowDeleting(Me, New LAPORAN_DETAIL_BARANG_DORowChangeEvent(CType(e.Row,LAPORAN_DETAIL_BARANG_DORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLAPORAN_DETAIL_BARANG_DORow(ByVal row As LAPORAN_DETAIL_BARANG_DORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LAPORAN_DETAIL_BARANG_DODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LAPORAN_TRANSFER_GUDANGDataTable
        Inherits Global.System.Data.TypedTableBase(Of LAPORAN_TRANSFER_GUDANGRow)
        
        Private columnID_TRANSAKSI As Global.System.Data.DataColumn
        
        Private columnNO_TRANSFER As Global.System.Data.DataColumn
        
        Private columnTGL_PENGAKUAN As Global.System.Data.DataColumn
        
        Private columnNAMA_DIVISI As Global.System.Data.DataColumn
        
        Private columnKODE As Global.System.Data.DataColumn
        
        Private columnID_BARANG As Global.System.Data.DataColumn
        
        Private columnKOLI As Global.System.Data.DataColumn
        
        Private columnQUANTITY As Global.System.Data.DataColumn
        
        Private columnPCS As Global.System.Data.DataColumn
        
        Private columnSATUAN As Global.System.Data.DataColumn
        
        Private columnURUTAN As Global.System.Data.DataColumn
        
        Private columnHARGA As Global.System.Data.DataColumn
        
        Private columnISI As Global.System.Data.DataColumn
        
        Private columnKONVERSI As Global.System.Data.DataColumn
        
        Private columnPCS_T As Global.System.Data.DataColumn
        
        Private columnQUANTITY_T As Global.System.Data.DataColumn
        
        Private columnKOLI_T As Global.System.Data.DataColumn
        
        Private columnST As Global.System.Data.DataColumn
        
        Private columnSTK As Global.System.Data.DataColumn
        
        Private columnNAMA_GUDANG_SUMBER As Global.System.Data.DataColumn
        
        Private columnNAMA_GUDANG_TUJUAN As Global.System.Data.DataColumn
        
        Private columnNAMA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "LAPORAN_TRANSFER_GUDANG"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_TRANSAKSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_TRANSAKSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NO_TRANSFERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_TRANSFER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TGL_PENGAKUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTGL_PENGAKUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_DIVISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_DIVISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KODEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKODE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ID_BARANGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnID_BARANG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOLIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOLI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUANTITYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUANTITY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SATUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSATUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property URUTANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnURUTAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property HARGAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHARGA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ISIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnISI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KONVERSIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKONVERSI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PCS_TColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPCS_T
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property QUANTITY_TColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQUANTITY_T
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property KOLI_TColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnKOLI_T
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_GUDANG_SUMBERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_GUDANG_SUMBER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMA_GUDANG_TUJUANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA_GUDANG_TUJUAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NAMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNAMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LAPORAN_TRANSFER_GUDANGRow
            Get
                Return CType(Me.Rows(index),LAPORAN_TRANSFER_GUDANGRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_TRANSFER_GUDANGRowChanging As LAPORAN_TRANSFER_GUDANGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_TRANSFER_GUDANGRowChanged As LAPORAN_TRANSFER_GUDANGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_TRANSFER_GUDANGRowDeleting As LAPORAN_TRANSFER_GUDANGRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LAPORAN_TRANSFER_GUDANGRowDeleted As LAPORAN_TRANSFER_GUDANGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLAPORAN_TRANSFER_GUDANGRow(ByVal row As LAPORAN_TRANSFER_GUDANGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLAPORAN_TRANSFER_GUDANGRow( _
                    ByVal ID_TRANSAKSI As String,  _
                    ByVal NO_TRANSFER As String,  _
                    ByVal TGL_PENGAKUAN As Date,  _
                    ByVal NAMA_DIVISI As String,  _
                    ByVal KODE As String,  _
                    ByVal ID_BARANG As String,  _
                    ByVal KOLI As Double,  _
                    ByVal QUANTITY As Double,  _
                    ByVal PCS As Double,  _
                    ByVal SATUAN As String,  _
                    ByVal URUTAN As Double,  _
                    ByVal HARGA As Double,  _
                    ByVal ISI As Double,  _
                    ByVal KONVERSI As Double,  _
                    ByVal PCS_T As Double,  _
                    ByVal QUANTITY_T As Double,  _
                    ByVal KOLI_T As Double,  _
                    ByVal ST As Boolean,  _
                    ByVal STK As Boolean,  _
                    ByVal NAMA_GUDANG_SUMBER As String,  _
                    ByVal NAMA_GUDANG_TUJUAN As String,  _
                    ByVal NAMA As String) As LAPORAN_TRANSFER_GUDANGRow
            Dim rowLAPORAN_TRANSFER_GUDANGRow As LAPORAN_TRANSFER_GUDANGRow = CType(Me.NewRow,LAPORAN_TRANSFER_GUDANGRow)
            Dim columnValuesArray() As Object = New Object() {ID_TRANSAKSI, NO_TRANSFER, TGL_PENGAKUAN, NAMA_DIVISI, KODE, ID_BARANG, KOLI, QUANTITY, PCS, SATUAN, URUTAN, HARGA, ISI, KONVERSI, PCS_T, QUANTITY_T, KOLI_T, ST, STK, NAMA_GUDANG_SUMBER, NAMA_GUDANG_TUJUAN, NAMA}
            rowLAPORAN_TRANSFER_GUDANGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLAPORAN_TRANSFER_GUDANGRow)
            Return rowLAPORAN_TRANSFER_GUDANGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LAPORAN_TRANSFER_GUDANGDataTable = CType(MyBase.Clone,LAPORAN_TRANSFER_GUDANGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LAPORAN_TRANSFER_GUDANGDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnID_TRANSAKSI = MyBase.Columns("ID_TRANSAKSI")
            Me.columnNO_TRANSFER = MyBase.Columns("NO_TRANSFER")
            Me.columnTGL_PENGAKUAN = MyBase.Columns("TGL_PENGAKUAN")
            Me.columnNAMA_DIVISI = MyBase.Columns("NAMA_DIVISI")
            Me.columnKODE = MyBase.Columns("KODE")
            Me.columnID_BARANG = MyBase.Columns("ID_BARANG")
            Me.columnKOLI = MyBase.Columns("KOLI")
            Me.columnQUANTITY = MyBase.Columns("QUANTITY")
            Me.columnPCS = MyBase.Columns("PCS")
            Me.columnSATUAN = MyBase.Columns("SATUAN")
            Me.columnURUTAN = MyBase.Columns("URUTAN")
            Me.columnHARGA = MyBase.Columns("HARGA")
            Me.columnISI = MyBase.Columns("ISI")
            Me.columnKONVERSI = MyBase.Columns("KONVERSI")
            Me.columnPCS_T = MyBase.Columns("PCS_T")
            Me.columnQUANTITY_T = MyBase.Columns("QUANTITY_T")
            Me.columnKOLI_T = MyBase.Columns("KOLI_T")
            Me.columnST = MyBase.Columns("ST")
            Me.columnSTK = MyBase.Columns("STK")
            Me.columnNAMA_GUDANG_SUMBER = MyBase.Columns("NAMA_GUDANG_SUMBER")
            Me.columnNAMA_GUDANG_TUJUAN = MyBase.Columns("NAMA_GUDANG_TUJUAN")
            Me.columnNAMA = MyBase.Columns("NAMA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnID_TRANSAKSI = New Global.System.Data.DataColumn("ID_TRANSAKSI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_TRANSAKSI)
            Me.columnNO_TRANSFER = New Global.System.Data.DataColumn("NO_TRANSFER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_TRANSFER)
            Me.columnTGL_PENGAKUAN = New Global.System.Data.DataColumn("TGL_PENGAKUAN", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTGL_PENGAKUAN)
            Me.columnNAMA_DIVISI = New Global.System.Data.DataColumn("NAMA_DIVISI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_DIVISI)
            Me.columnKODE = New Global.System.Data.DataColumn("KODE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKODE)
            Me.columnID_BARANG = New Global.System.Data.DataColumn("ID_BARANG", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnID_BARANG)
            Me.columnKOLI = New Global.System.Data.DataColumn("KOLI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOLI)
            Me.columnQUANTITY = New Global.System.Data.DataColumn("QUANTITY", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUANTITY)
            Me.columnPCS = New Global.System.Data.DataColumn("PCS", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS)
            Me.columnSATUAN = New Global.System.Data.DataColumn("SATUAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSATUAN)
            Me.columnURUTAN = New Global.System.Data.DataColumn("URUTAN", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnURUTAN)
            Me.columnHARGA = New Global.System.Data.DataColumn("HARGA", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHARGA)
            Me.columnISI = New Global.System.Data.DataColumn("ISI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnISI)
            Me.columnKONVERSI = New Global.System.Data.DataColumn("KONVERSI", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKONVERSI)
            Me.columnPCS_T = New Global.System.Data.DataColumn("PCS_T", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPCS_T)
            Me.columnQUANTITY_T = New Global.System.Data.DataColumn("QUANTITY_T", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQUANTITY_T)
            Me.columnKOLI_T = New Global.System.Data.DataColumn("KOLI_T", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnKOLI_T)
            Me.columnST = New Global.System.Data.DataColumn("ST", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnST)
            Me.columnSTK = New Global.System.Data.DataColumn("STK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTK)
            Me.columnNAMA_GUDANG_SUMBER = New Global.System.Data.DataColumn("NAMA_GUDANG_SUMBER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_GUDANG_SUMBER)
            Me.columnNAMA_GUDANG_TUJUAN = New Global.System.Data.DataColumn("NAMA_GUDANG_TUJUAN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA_GUDANG_TUJUAN)
            Me.columnNAMA = New Global.System.Data.DataColumn("NAMA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNAMA)
            Me.columnID_TRANSAKSI.AllowDBNull = false
            Me.columnID_TRANSAKSI.MaxLength = 50
            Me.columnNO_TRANSFER.MaxLength = 50
            Me.columnNAMA_DIVISI.MaxLength = 200
            Me.columnKODE.AllowDBNull = false
            Me.columnKODE.MaxLength = 30
            Me.columnID_BARANG.MaxLength = 30
            Me.columnSATUAN.MaxLength = 30
            Me.columnPCS_T.ReadOnly = true
            Me.columnQUANTITY_T.ReadOnly = true
            Me.columnKOLI_T.ReadOnly = true
            Me.columnST.ReadOnly = true
            Me.columnSTK.ReadOnly = true
            Me.columnNAMA_GUDANG_SUMBER.MaxLength = 50
            Me.columnNAMA_GUDANG_TUJUAN.MaxLength = 50
            Me.columnNAMA.MaxLength = 200
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLAPORAN_TRANSFER_GUDANGRow() As LAPORAN_TRANSFER_GUDANGRow
            Return CType(Me.NewRow,LAPORAN_TRANSFER_GUDANGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LAPORAN_TRANSFER_GUDANGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LAPORAN_TRANSFER_GUDANGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LAPORAN_TRANSFER_GUDANGRowChangedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_TRANSFER_GUDANGRowChanged(Me, New LAPORAN_TRANSFER_GUDANGRowChangeEvent(CType(e.Row,LAPORAN_TRANSFER_GUDANGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LAPORAN_TRANSFER_GUDANGRowChangingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_TRANSFER_GUDANGRowChanging(Me, New LAPORAN_TRANSFER_GUDANGRowChangeEvent(CType(e.Row,LAPORAN_TRANSFER_GUDANGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LAPORAN_TRANSFER_GUDANGRowDeletedEvent) Is Nothing) Then
                RaiseEvent LAPORAN_TRANSFER_GUDANGRowDeleted(Me, New LAPORAN_TRANSFER_GUDANGRowChangeEvent(CType(e.Row,LAPORAN_TRANSFER_GUDANGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LAPORAN_TRANSFER_GUDANGRowDeletingEvent) Is Nothing) Then
                RaiseEvent LAPORAN_TRANSFER_GUDANGRowDeleting(Me, New LAPORAN_TRANSFER_GUDANGRowChangeEvent(CType(e.Row,LAPORAN_TRANSFER_GUDANGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLAPORAN_TRANSFER_GUDANGRow(ByVal row As LAPORAN_TRANSFER_GUDANGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSLaporan = New DSLaporan()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LAPORAN_TRANSFER_GUDANGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DAILY_SALES_REPORTRow
        Inherits Global.System.Data.DataRow
        
        Private tableDAILY_SALES_REPORT As DAILY_SALES_REPORTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDAILY_SALES_REPORT = CType(Me.Table,DAILY_SALES_REPORTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TRANSAKSI() As String
            Get
                Return CType(Me(Me.tableDAILY_SALES_REPORT.ID_TRANSAKSIColumn),String)
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.ID_TRANSAKSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_NOTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NO_NOTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_NOTA' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NO_NOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_REF' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.TGLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.TGLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PENGAKUAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.TGL_PENGAKUANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PENGAKUAN' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.TGL_PENGAKUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.ID_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_DO' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.ID_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NO_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_DO' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NO_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_DO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.TGL_DOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_DO' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.TGL_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIVISI' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JENIS_PPN() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.JENIS_PPNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JENIS_PPN' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.JENIS_PPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.KODE_CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_CUSTOMER' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.KODE_CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_APPROVE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.KODE_APPROVEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_APPROVE' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.KODE_APPROVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CABANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.CABANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CABANG' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.CABANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ALAMAT_KIRIM() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.ALAMAT_KIRIMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALAMAT_KIRIM' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.ALAMAT_KIRIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUDANG' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SJ_TANPA_HARGA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.SJ_TANPA_HARGAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SJ_TANPA_HARGA' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.SJ_TANPA_HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KETERANGAN_CETAK() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.KETERANGAN_CETAKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KETERANGAN_CETAK' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.KETERANGAN_CETAKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KETERANGAN_INTERNAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.KETERANGAN_INTERNALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KETERANGAN_INTERNAL' in table 'DAILY_SALES_REPORT' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.KETERANGAN_INTERNALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.SUBTOTALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.SUBTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPP() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DPPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPP' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.PPNColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPN' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.PPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PERIODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.PERIODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERIODE' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.PERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CRUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.CRUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRUSER' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.CRUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CRTIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.CRTIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CRTIME' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.CRTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MDUSER() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.MDUSERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDUSER' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.MDUSERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MDTIME() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.MDTIMEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MDTIME' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.MDTIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BATAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.BATALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BATAL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.BATALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BAGIAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.BAGIANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BAGIAN' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.BAGIANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_STUFFING() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.ID_STUFFINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_STUFFING' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.ID_STUFFINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_EKSPEDISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.KODE_EKSPEDISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_EKSPEDISI' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.KODE_EKSPEDISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_TRUK() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NO_TRUKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_TRUK' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NO_TRUKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PEMBAYARAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.PEMBAYARANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PEMBAYARAN' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.PEMBAYARANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_DO1() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NO_DO1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_DO1' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NO_DO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_QTYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY_NOMINAL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_REG() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_REGColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_REG' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_REG_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_REG_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_REG_NOMINAL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_REG_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_1' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_1_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_1_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_1_NOMINAL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_1_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_2' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_2_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_2_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_2_NOMINAL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_2_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_3' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CASH_DISC() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.CASH_DISCColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASH_DISC' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.CASH_DISCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_3_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_3_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_3_NOMINAL' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_3_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CASH_DISC_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.CASH_DISC_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASH_DISC_NOMINAL' in table 'DAILY_SALES_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.CASH_DISC_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_QTY1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY1' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_QTY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY_NOMINAL1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINAL1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY_NOMINAL1' in table 'DAILY_SALES_REPORT' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINAL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NAMA_GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_GUDANG' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NAMA_GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableDAILY_SALES_REPORT.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'DAILY_SALES_REPORT' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDAILY_SALES_REPORT.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_NOTANull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NO_NOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_NOTANull()
            Me(Me.tableDAILY_SALES_REPORT.NO_NOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_REFNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_REFNull()
            Me(Me.tableDAILY_SALES_REPORT.NO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGLNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.TGLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGLNull()
            Me(Me.tableDAILY_SALES_REPORT.TGLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PENGAKUANNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.TGL_PENGAKUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PENGAKUANNull()
            Me(Me.tableDAILY_SALES_REPORT.TGL_PENGAKUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_DONull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.ID_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_DONull()
            Me(Me.tableDAILY_SALES_REPORT.ID_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_DONull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NO_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_DONull()
            Me(Me.tableDAILY_SALES_REPORT.NO_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_DONull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.TGL_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_DONull()
            Me(Me.tableDAILY_SALES_REPORT.TGL_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIVISINull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIVISINull()
            Me(Me.tableDAILY_SALES_REPORT.DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJENIS_PPNNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.JENIS_PPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJENIS_PPNNull()
            Me(Me.tableDAILY_SALES_REPORT.JENIS_PPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_CUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.KODE_CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_CUSTOMERNull()
            Me(Me.tableDAILY_SALES_REPORT.KODE_CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_APPROVENull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.KODE_APPROVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_APPROVENull()
            Me(Me.tableDAILY_SALES_REPORT.KODE_APPROVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCABANGNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.CABANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCABANGNull()
            Me(Me.tableDAILY_SALES_REPORT.CABANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsALAMAT_KIRIMNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.ALAMAT_KIRIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetALAMAT_KIRIMNull()
            Me(Me.tableDAILY_SALES_REPORT.ALAMAT_KIRIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUDANGNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUDANGNull()
            Me(Me.tableDAILY_SALES_REPORT.GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSJ_TANPA_HARGANull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.SJ_TANPA_HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSJ_TANPA_HARGANull()
            Me(Me.tableDAILY_SALES_REPORT.SJ_TANPA_HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKETERANGAN_CETAKNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.KETERANGAN_CETAKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKETERANGAN_CETAKNull()
            Me(Me.tableDAILY_SALES_REPORT.KETERANGAN_CETAKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKETERANGAN_INTERNALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.KETERANGAN_INTERNALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKETERANGAN_INTERNALNull()
            Me(Me.tableDAILY_SALES_REPORT.KETERANGAN_INTERNALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.SUBTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTALNull()
            Me(Me.tableDAILY_SALES_REPORT.SUBTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPPNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPPNull()
            Me(Me.tableDAILY_SALES_REPORT.DPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPNNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.PPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPNNull()
            Me(Me.tableDAILY_SALES_REPORT.PPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPERIODENull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.PERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPERIODENull()
            Me(Me.tableDAILY_SALES_REPORT.PERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCRUSERNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.CRUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCRUSERNull()
            Me(Me.tableDAILY_SALES_REPORT.CRUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCRTIMENull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.CRTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCRTIMENull()
            Me(Me.tableDAILY_SALES_REPORT.CRTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMDUSERNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.MDUSERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMDUSERNull()
            Me(Me.tableDAILY_SALES_REPORT.MDUSERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMDTIMENull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.MDTIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMDTIMENull()
            Me(Me.tableDAILY_SALES_REPORT.MDTIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBATALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.BATALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBATALNull()
            Me(Me.tableDAILY_SALES_REPORT.BATALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBAGIANNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.BAGIANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBAGIANNull()
            Me(Me.tableDAILY_SALES_REPORT.BAGIANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_STUFFINGNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.ID_STUFFINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_STUFFINGNull()
            Me(Me.tableDAILY_SALES_REPORT.ID_STUFFINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_EKSPEDISINull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.KODE_EKSPEDISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_EKSPEDISINull()
            Me(Me.tableDAILY_SALES_REPORT.KODE_EKSPEDISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_TRUKNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NO_TRUKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_TRUKNull()
            Me(Me.tableDAILY_SALES_REPORT.NO_TRUKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tableDAILY_SALES_REPORT.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPEMBAYARANNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.PEMBAYARANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPEMBAYARANNull()
            Me(Me.tableDAILY_SALES_REPORT.PEMBAYARANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_DO1Null() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NO_DO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_DO1Null()
            Me(Me.tableDAILY_SALES_REPORT.NO_DO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTYNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTYNull()
            Me(Me.tableDAILY_SALES_REPORT.DISC_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY_NOMINALNull()
            Me(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_REGNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_REGNull()
            Me(Me.tableDAILY_SALES_REPORT.DISC_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_REG_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_REG_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_REG_NOMINALNull()
            Me(Me.tableDAILY_SALES_REPORT.DISC_REG_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_1Null() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_1Null()
            Me(Me.tableDAILY_SALES_REPORT.DISC_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_1_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_1_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_1_NOMINALNull()
            Me(Me.tableDAILY_SALES_REPORT.DISC_1_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_2Null() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_2Null()
            Me(Me.tableDAILY_SALES_REPORT.DISC_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_2_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_2_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_2_NOMINALNull()
            Me(Me.tableDAILY_SALES_REPORT.DISC_2_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_3Null() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_3Null()
            Me(Me.tableDAILY_SALES_REPORT.DISC_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCASH_DISCNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.CASH_DISCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCASH_DISCNull()
            Me(Me.tableDAILY_SALES_REPORT.CASH_DISCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_3_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_3_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_3_NOMINALNull()
            Me(Me.tableDAILY_SALES_REPORT.DISC_3_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCASH_DISC_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.CASH_DISC_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCASH_DISC_NOMINALNull()
            Me(Me.tableDAILY_SALES_REPORT.CASH_DISC_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY1Null() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_QTY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY1Null()
            Me(Me.tableDAILY_SALES_REPORT.DISC_QTY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY_NOMINAL1Null() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINAL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY_NOMINAL1Null()
            Me(Me.tableDAILY_SALES_REPORT.DISC_QTY_NOMINAL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_GUDANGNull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NAMA_GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_GUDANGNull()
            Me(Me.tableDAILY_SALES_REPORT.NAMA_GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableDAILY_SALES_REPORT.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableDAILY_SALES_REPORT.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class KARTU_STOKRow
        Inherits Global.System.Data.DataRow
        
        Private tableKARTU_STOK As KARTU_STOKDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableKARTU_STOK = CType(Me.Table,KARTU_STOKDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HARGA' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_BARANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.KODE_BARANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_BARANG' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.KODE_BARANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAT_DIST1() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.SAT_DIST1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAT_DIST1' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.SAT_DIST1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAT_SUPER1() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.SAT_SUPER1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAT_SUPER1' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.SAT_SUPER1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.TGLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.TGLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAKTUR() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.FAKTURColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FAKTUR' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.FAKTURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DZ() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.DZColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DZ' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.DZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.PCSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.PCSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.KODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.KODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUANTITY() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.QUANTITYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUANTITY' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY_SISA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.QTY_SISAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY_SISA' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.QTY_SISAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DZ_SISA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.DZ_SISAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DZ_SISA' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.DZ_SISAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS_SISA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.PCS_SISAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS_SISA' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.PCS_SISAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PERIODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.PERIODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERIODE' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.PERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSAKSI() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.TRANSAKSIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSAKSI' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.TRANSAKSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUDANG' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.NAMA_GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_GUDANG' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.NAMA_GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY_DIST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.QTY_DISTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY_DIST' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.QTY_DISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SATUAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.SATUANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SATUAN' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.SATUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property URUTAN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.URUTANColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'URUTAN' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.URUTANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HARGA_AKHIR() As Double
            Get
                Try 
                    Return CType(Me(Me.tableKARTU_STOK.HARGA_AKHIRColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HARGA_AKHIR' in table 'KARTU_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableKARTU_STOK.HARGA_AKHIRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHARGANull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHARGANull()
            Me(Me.tableKARTU_STOK.HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tableKARTU_STOK.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_BARANGNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.KODE_BARANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_BARANGNull()
            Me(Me.tableKARTU_STOK.KODE_BARANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAT_DIST1Null() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.SAT_DIST1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAT_DIST1Null()
            Me(Me.tableKARTU_STOK.SAT_DIST1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAT_SUPER1Null() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.SAT_SUPER1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAT_SUPER1Null()
            Me(Me.tableKARTU_STOK.SAT_SUPER1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGLNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.TGLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGLNull()
            Me(Me.tableKARTU_STOK.TGLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFAKTURNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.FAKTURColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFAKTURNull()
            Me(Me.tableKARTU_STOK.FAKTURColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDZNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.DZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDZNull()
            Me(Me.tableKARTU_STOK.DZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCSNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.PCSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCSNull()
            Me(Me.tableKARTU_STOK.PCSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODENull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.KODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODENull()
            Me(Me.tableKARTU_STOK.KODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUANTITYNull()
            Me(Me.tableKARTU_STOK.QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTY_SISANull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.QTY_SISAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTY_SISANull()
            Me(Me.tableKARTU_STOK.QTY_SISAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDZ_SISANull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.DZ_SISAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDZ_SISANull()
            Me(Me.tableKARTU_STOK.DZ_SISAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCS_SISANull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.PCS_SISAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCS_SISANull()
            Me(Me.tableKARTU_STOK.PCS_SISAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPERIODENull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.PERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPERIODENull()
            Me(Me.tableKARTU_STOK.PERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSAKSINull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.TRANSAKSIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSAKSINull()
            Me(Me.tableKARTU_STOK.TRANSAKSIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUDANGNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUDANGNull()
            Me(Me.tableKARTU_STOK.GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_GUDANGNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.NAMA_GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_GUDANGNull()
            Me(Me.tableKARTU_STOK.NAMA_GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTY_DISTNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.QTY_DISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTY_DISTNull()
            Me(Me.tableKARTU_STOK.QTY_DISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSATUANNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.SATUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSATUANNull()
            Me(Me.tableKARTU_STOK.SATUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableKARTU_STOK.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsURUTANNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.URUTANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetURUTANNull()
            Me(Me.tableKARTU_STOK.URUTANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHARGA_AKHIRNull() As Boolean
            Return Me.IsNull(Me.tableKARTU_STOK.HARGA_AKHIRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHARGA_AKHIRNull()
            Me(Me.tableKARTU_STOK.HARGA_AKHIRColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LAPORAN_PEMBELIANRow
        Inherits Global.System.Data.DataRow
        
        Private tableLAPORAN_PEMBELIAN As LAPORAN_PEMBELIANDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLAPORAN_PEMBELIAN = CType(Me.Table,LAPORAN_PEMBELIANDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_NOTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NO_NOTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_NOTA' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NO_NOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TRANSAKSI() As String
            Get
                Return CType(Me(Me.tableLAPORAN_PEMBELIAN.ID_TRANSAKSIColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.ID_TRANSAKSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_REF' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.TGLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.TGLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PENGAKUAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.TGL_PENGAKUANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PENGAKUAN' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.TGL_PENGAKUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_PO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.ID_POColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_PO' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.ID_POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_PO() As String
            Get
                Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NO_POColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NO_POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.TGL_POColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PO' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.TGL_POColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_NOTA_PENJUALAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.ID_NOTA_PENJUALANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_NOTA_PENJUALAN' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.ID_NOTA_PENJUALANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_NOTA_PENJUALAN() As String
            Get
                Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NO_NOTA_PENJUALANColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NO_NOTA_PENJUALANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIVISI' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JENIS_PPN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.JENIS_PPNColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JENIS_PPN' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.JENIS_PPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_SUPPLIER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.KODE_SUPPLIERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_SUPPLIER' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.KODE_SUPPLIERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ALAMAT_KIRIM() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.ALAMAT_KIRIMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALAMAT_KIRIM' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.ALAMAT_KIRIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUDANG' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KETERANGAN_CETAK() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.KETERANGAN_CETAKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KETERANGAN_CETAK' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.KETERANGAN_CETAKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPP() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.DPPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPP' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.DPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.PPNColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPN' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.PPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PERIODE() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.PERIODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERIODE' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.PERIODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BAGIAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.BAGIANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BAGIAN' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.BAGIANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_EKSPEDISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.KODE_EKSPEDISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_EKSPEDISI' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.KODE_EKSPEDISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_TRUK() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NO_TRUKColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_TRUK' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NO_TRUKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_CLAIM() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NO_CLAIMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_CLAIM' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NO_CLAIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_CLAIM() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.ID_CLAIMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_CLAIM' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.ID_CLAIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPP_CLAIM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.DPP_CLAIMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPP_CLAIM' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.DPP_CLAIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPN_CLAIM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.PPN_CLAIMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPN_CLAIM' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.PPN_CLAIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL_CLAIM() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_CLAIMColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL_CLAIM' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_CLAIMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.NAMA_GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_GUDANG' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.NAMA_GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPP_NOTA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.DPP_NOTAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPP_NOTA' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.DPP_NOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPN_NOTA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.PPN_NOTAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPN_NOTA' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.PPN_NOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BATAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.BATALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BATAL' in table 'LAPORAN_PEMBELIAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.BATALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL_TANPA_BATAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_TANPA_BATALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL_TANPA_BATAL' in table 'LAPORAN_PEMBELIAN' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_TANPA_BATALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_NOTANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.NO_NOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_NOTANull()
            Me(Me.tableLAPORAN_PEMBELIAN.NO_NOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_REFNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.NO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_REFNull()
            Me(Me.tableLAPORAN_PEMBELIAN.NO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGLNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.TGLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGLNull()
            Me(Me.tableLAPORAN_PEMBELIAN.TGLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PENGAKUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.TGL_PENGAKUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PENGAKUANNull()
            Me(Me.tableLAPORAN_PEMBELIAN.TGL_PENGAKUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_PONull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.ID_POColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_PONull()
            Me(Me.tableLAPORAN_PEMBELIAN.ID_POColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PONull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.TGL_POColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PONull()
            Me(Me.tableLAPORAN_PEMBELIAN.TGL_POColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_NOTA_PENJUALANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.ID_NOTA_PENJUALANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_NOTA_PENJUALANNull()
            Me(Me.tableLAPORAN_PEMBELIAN.ID_NOTA_PENJUALANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIVISINull()
            Me(Me.tableLAPORAN_PEMBELIAN.DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJENIS_PPNNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.JENIS_PPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJENIS_PPNNull()
            Me(Me.tableLAPORAN_PEMBELIAN.JENIS_PPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_SUPPLIERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.KODE_SUPPLIERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_SUPPLIERNull()
            Me(Me.tableLAPORAN_PEMBELIAN.KODE_SUPPLIERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsALAMAT_KIRIMNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.ALAMAT_KIRIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetALAMAT_KIRIMNull()
            Me(Me.tableLAPORAN_PEMBELIAN.ALAMAT_KIRIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUDANGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUDANGNull()
            Me(Me.tableLAPORAN_PEMBELIAN.GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKETERANGAN_CETAKNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.KETERANGAN_CETAKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKETERANGAN_CETAKNull()
            Me(Me.tableLAPORAN_PEMBELIAN.KETERANGAN_CETAKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.SUBTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTALNull()
            Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPPNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.DPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPPNull()
            Me(Me.tableLAPORAN_PEMBELIAN.DPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPNNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.PPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPNNull()
            Me(Me.tableLAPORAN_PEMBELIAN.PPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPERIODENull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.PERIODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPERIODENull()
            Me(Me.tableLAPORAN_PEMBELIAN.PERIODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBAGIANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.BAGIANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBAGIANNull()
            Me(Me.tableLAPORAN_PEMBELIAN.BAGIANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_EKSPEDISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.KODE_EKSPEDISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_EKSPEDISINull()
            Me(Me.tableLAPORAN_PEMBELIAN.KODE_EKSPEDISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_TRUKNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.NO_TRUKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_TRUKNull()
            Me(Me.tableLAPORAN_PEMBELIAN.NO_TRUKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_CLAIMNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.NO_CLAIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_CLAIMNull()
            Me(Me.tableLAPORAN_PEMBELIAN.NO_CLAIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_CLAIMNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.ID_CLAIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_CLAIMNull()
            Me(Me.tableLAPORAN_PEMBELIAN.ID_CLAIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPP_CLAIMNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.DPP_CLAIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPP_CLAIMNull()
            Me(Me.tableLAPORAN_PEMBELIAN.DPP_CLAIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPN_CLAIMNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.PPN_CLAIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPN_CLAIMNull()
            Me(Me.tableLAPORAN_PEMBELIAN.PPN_CLAIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableLAPORAN_PEMBELIAN.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTAL_CLAIMNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_CLAIMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTAL_CLAIMNull()
            Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_CLAIMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_GUDANGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.NAMA_GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_GUDANGNull()
            Me(Me.tableLAPORAN_PEMBELIAN.NAMA_GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPP_NOTANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.DPP_NOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPP_NOTANull()
            Me(Me.tableLAPORAN_PEMBELIAN.DPP_NOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPN_NOTANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.PPN_NOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPN_NOTANull()
            Me(Me.tableLAPORAN_PEMBELIAN.PPN_NOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBATALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.BATALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBATALNull()
            Me(Me.tableLAPORAN_PEMBELIAN.BATALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTAL_TANPA_BATALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_TANPA_BATALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTAL_TANPA_BATALNull()
            Me(Me.tableLAPORAN_PEMBELIAN.SUBTOTAL_TANPA_BATALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LAPORAN_DORow
        Inherits Global.System.Data.DataRow
        
        Private tableLAPORAN_DO As LAPORAN_DODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLAPORAN_DO = CType(Me.Table,LAPORAN_DODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_DO() As String
            Get
                Return CType(Me(Me.tableLAPORAN_DO.NO_DOColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_DO.NO_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TRANSAKSI() As String
            Get
                Return CType(Me(Me.tableLAPORAN_DO.ID_TRANSAKSIColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_DO.ID_TRANSAKSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PENGAKUAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.TGL_PENGAKUANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PENGAKUAN' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.TGL_PENGAKUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIVISI' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.KODE_CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_CUSTOMER' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.KODE_CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_APPROVE() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.KODE_APPROVEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_APPROVE' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.KODE_APPROVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.SUBTOTALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.SUBTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_QTYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_REG() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_REGColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_REG' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_1' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_2' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_3' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CASH_DISC() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.CASH_DISCColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASH_DISC' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.CASH_DISCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_QTY1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY1' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_QTY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPP() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DPPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPP' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.PPNColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPN' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.PPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BAGIAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.BAGIANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BAGIAN' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.BAGIANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JENIS_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.JENIS_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JENIS_DO' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.JENIS_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.NAMA_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_USER' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.NAMA_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_QTY_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY_NOMINAL' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_QTY_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY_NOMINAL1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.DISC_QTY_NOMINAL1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY_NOMINAL1' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.DISC_QTY_NOMINAL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BATAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.BATALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BATAL' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.BATALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL_DETAIL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DO.SUBTOTAL_DETAILColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL_DETAIL' in table 'LAPORAN_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DO.SUBTOTAL_DETAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PENGAKUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.TGL_PENGAKUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PENGAKUANNull()
            Me(Me.tableLAPORAN_DO.TGL_PENGAKUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIVISINull()
            Me(Me.tableLAPORAN_DO.DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_CUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.KODE_CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_CUSTOMERNull()
            Me(Me.tableLAPORAN_DO.KODE_CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_APPROVENull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.KODE_APPROVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_APPROVENull()
            Me(Me.tableLAPORAN_DO.KODE_APPROVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tableLAPORAN_DO.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.SUBTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTALNull()
            Me(Me.tableLAPORAN_DO.SUBTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTYNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTYNull()
            Me(Me.tableLAPORAN_DO.DISC_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_REGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_REGNull()
            Me(Me.tableLAPORAN_DO.DISC_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_1Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_1Null()
            Me(Me.tableLAPORAN_DO.DISC_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_2Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_2Null()
            Me(Me.tableLAPORAN_DO.DISC_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_3Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_3Null()
            Me(Me.tableLAPORAN_DO.DISC_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCASH_DISCNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.CASH_DISCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCASH_DISCNull()
            Me(Me.tableLAPORAN_DO.CASH_DISCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY1Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_QTY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY1Null()
            Me(Me.tableLAPORAN_DO.DISC_QTY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPPNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPPNull()
            Me(Me.tableLAPORAN_DO.DPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPNNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.PPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPNNull()
            Me(Me.tableLAPORAN_DO.PPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBAGIANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.BAGIANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBAGIANNull()
            Me(Me.tableLAPORAN_DO.BAGIANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJENIS_DONull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.JENIS_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJENIS_DONull()
            Me(Me.tableLAPORAN_DO.JENIS_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableLAPORAN_DO.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_USERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.NAMA_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_USERNull()
            Me(Me.tableLAPORAN_DO.NAMA_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_QTY_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY_NOMINALNull()
            Me(Me.tableLAPORAN_DO.DISC_QTY_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY_NOMINAL1Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.DISC_QTY_NOMINAL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY_NOMINAL1Null()
            Me(Me.tableLAPORAN_DO.DISC_QTY_NOMINAL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBATALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.BATALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBATALNull()
            Me(Me.tableLAPORAN_DO.BATALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTAL_DETAILNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DO.SUBTOTAL_DETAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTAL_DETAILNull()
            Me(Me.tableLAPORAN_DO.SUBTOTAL_DETAILColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LAPORAN_DETAIL_DORow
        Inherits Global.System.Data.DataRow
        
        Private tableLAPORAN_DETAIL_DO As LAPORAN_DETAIL_DODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLAPORAN_DETAIL_DO = CType(Me.Table,LAPORAN_DETAIL_DODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_DO.CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CUSTOMER' in table 'LAPORAN_DETAIL_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_DO.CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BARANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_DO.BARANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BARANG' in table 'LAPORAN_DETAIL_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_DO.BARANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS_PRW() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_DO.PCS_PRWColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS_PRW' in table 'LAPORAN_DETAIL_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_DO.PCS_PRWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRUTO_PRW() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_DO.BRUTO_PRWColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRUTO_PRW' in table 'LAPORAN_DETAIL_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_DO.BRUTO_PRWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS_PST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_DO.PCS_PSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS_PST' in table 'LAPORAN_DETAIL_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_DO.PCS_PSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BRUTO_PST() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_DO.BRUTO_PSTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRUTO_PST' in table 'LAPORAN_DETAIL_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_DO.BRUTO_PSTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_DO.CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUSTOMERNull()
            Me(Me.tableLAPORAN_DETAIL_DO.CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBARANGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_DO.BARANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBARANGNull()
            Me(Me.tableLAPORAN_DETAIL_DO.BARANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCS_PRWNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_DO.PCS_PRWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCS_PRWNull()
            Me(Me.tableLAPORAN_DETAIL_DO.PCS_PRWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRUTO_PRWNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_DO.BRUTO_PRWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRUTO_PRWNull()
            Me(Me.tableLAPORAN_DETAIL_DO.BRUTO_PRWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCS_PSTNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_DO.PCS_PSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCS_PSTNull()
            Me(Me.tableLAPORAN_DETAIL_DO.PCS_PSTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBRUTO_PSTNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_DO.BRUTO_PSTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBRUTO_PSTNull()
            Me(Me.tableLAPORAN_DETAIL_DO.BRUTO_PSTColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PRICE_LISTRow
        Inherits Global.System.Data.DataRow
        
        Private tablePRICE_LIST As PRICE_LISTDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRICE_LIST = CType(Me.Table,PRICE_LISTDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.KODEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.KODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_BARANG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.ID_BARANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_BARANG' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.ID_BARANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JENIS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.JENISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JENIS' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.JENISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HARGA_BARU() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.HARGA_BARUColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HARGA_BARU' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.HARGA_BARUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QTY_KOLI() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.QTY_KOLIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QTY_KOLI' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.QTY_KOLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SATUAN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.SATUANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SATUAN' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.SATUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.NAMA1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA1' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.NAMA1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PRICE() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRICE_LIST.TGL_PRICEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PRICE' in table 'PRICE_LIST' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRICE_LIST.TGL_PRICEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODENull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.KODEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODENull()
            Me(Me.tablePRICE_LIST.KODEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tablePRICE_LIST.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_BARANGNull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.ID_BARANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_BARANGNull()
            Me(Me.tablePRICE_LIST.ID_BARANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJENISNull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.JENISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJENISNull()
            Me(Me.tablePRICE_LIST.JENISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHARGA_BARUNull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.HARGA_BARUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHARGA_BARUNull()
            Me(Me.tablePRICE_LIST.HARGA_BARUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQTY_KOLINull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.QTY_KOLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQTY_KOLINull()
            Me(Me.tablePRICE_LIST.QTY_KOLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSATUANNull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.SATUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSATUANNull()
            Me(Me.tablePRICE_LIST.SATUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA1Null() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.NAMA1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA1Null()
            Me(Me.tablePRICE_LIST.NAMA1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PRICENull() As Boolean
            Return Me.IsNull(Me.tablePRICE_LIST.TGL_PRICEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PRICENull()
            Me(Me.tablePRICE_LIST.TGL_PRICEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROC_SALDO_STOKRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROC_SALDO_STOK As PROC_SALDO_STOKDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROC_SALDO_STOK = CType(Me.Table,PROC_SALDO_STOKDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID() As String
            Get
                Return CType(Me(Me.tablePROC_SALDO_STOK.IDColumn),String)
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUANTITY() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.QUANTITYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUANTITY' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DZ() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.DZColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DZ' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.DZColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.PCSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.PCSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SAT_SUPER1() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.SAT_SUPER1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SAT_SUPER1' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.SAT_SUPER1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE() As String
            Get
                Return CType(Me(Me.tablePROC_SALDO_STOK.KODEColumn),String)
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.KODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HARGA' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JUMLAH_HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.JUMLAH_HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JUMLAH_HARGA' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.JUMLAH_HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KARTU_STOK() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.KARTU_STOKColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KARTU_STOK' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.KARTU_STOKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAMBAHAN_HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.TAMBAHAN_HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAMBAHAN_HARGA' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.TAMBAHAN_HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BEDA_HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.BEDA_HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BEDA_HARGA' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.BEDA_HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GUDANG' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_GUDANG() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.NAMA_GUDANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_GUDANG' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.NAMA_GUDANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SATUAN() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROC_SALDO_STOK.SATUANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SATUAN' in table 'PROC_SALDO_STOK' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROC_SALDO_STOK.SATUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUANTITYNull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUANTITYNull()
            Me(Me.tablePROC_SALDO_STOK.QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDZNull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.DZColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDZNull()
            Me(Me.tablePROC_SALDO_STOK.DZColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCSNull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.PCSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCSNull()
            Me(Me.tablePROC_SALDO_STOK.PCSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSAT_SUPER1Null() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.SAT_SUPER1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSAT_SUPER1Null()
            Me(Me.tablePROC_SALDO_STOK.SAT_SUPER1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tablePROC_SALDO_STOK.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHARGANull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHARGANull()
            Me(Me.tablePROC_SALDO_STOK.HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJUMLAH_HARGANull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.JUMLAH_HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJUMLAH_HARGANull()
            Me(Me.tablePROC_SALDO_STOK.JUMLAH_HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKARTU_STOKNull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.KARTU_STOKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKARTU_STOKNull()
            Me(Me.tablePROC_SALDO_STOK.KARTU_STOKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAMBAHAN_HARGANull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.TAMBAHAN_HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAMBAHAN_HARGANull()
            Me(Me.tablePROC_SALDO_STOK.TAMBAHAN_HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBEDA_HARGANull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.BEDA_HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBEDA_HARGANull()
            Me(Me.tablePROC_SALDO_STOK.BEDA_HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tablePROC_SALDO_STOK.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGUDANGNull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGUDANGNull()
            Me(Me.tablePROC_SALDO_STOK.GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_GUDANGNull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.NAMA_GUDANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_GUDANGNull()
            Me(Me.tablePROC_SALDO_STOK.NAMA_GUDANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSATUANNull() As Boolean
            Return Me.IsNull(Me.tablePROC_SALDO_STOK.SATUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSATUANNull()
            Me(Me.tablePROC_SALDO_STOK.SATUANColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LAPORAN_PENJUALANRow
        Inherits Global.System.Data.DataRow
        
        Private tableLAPORAN_PENJUALAN As LAPORAN_PENJUALANDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLAPORAN_PENJUALAN = CType(Me.Table,LAPORAN_PENJUALANDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_NOTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.NO_NOTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_NOTA' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.NO_NOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_REF() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.NO_REFColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_REF' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.NO_REFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.TGLColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.TGLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PENGAKUAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.TGL_PENGAKUANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PENGAKUAN' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.TGL_PENGAKUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.NO_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_DO' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.NO_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.ID_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_DO' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.ID_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIVISI' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.KODE_CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_CUSTOMER' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.KODE_CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_APPROVE() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.KODE_APPROVEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_APPROVE' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.KODE_APPROVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.NAMA_CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_CUSTOMER' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.NAMA_CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE() As String
            Get
                Return CType(Me(Me.tableLAPORAN_PENJUALAN.KODEColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.KODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_BARANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.NAMA_BARANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_BARANG' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.NAMA_BARANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISI() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.ISIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISI' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.ISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KOLI() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.KOLIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KOLI' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.KOLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUANTITY() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.QUANTITYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUANTITY' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SATUAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.SATUANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SATUAN' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.SATUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KONVERSI() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.KONVERSIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KONVERSI' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.KONVERSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.PCSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.PCSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HARGA' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.NAMA_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_USER' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.NAMA_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.DISCColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.DISCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISKON_SATUAN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.DISKON_SATUANColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISKON_SATUAN' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.DISKON_SATUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BATAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_PENJUALAN.BATALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BATAL' in table 'LAPORAN_PENJUALAN' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_PENJUALAN.BATALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_NOTANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.NO_NOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_NOTANull()
            Me(Me.tableLAPORAN_PENJUALAN.NO_NOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_REFNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.NO_REFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_REFNull()
            Me(Me.tableLAPORAN_PENJUALAN.NO_REFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGLNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.TGLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGLNull()
            Me(Me.tableLAPORAN_PENJUALAN.TGLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PENGAKUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.TGL_PENGAKUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PENGAKUANNull()
            Me(Me.tableLAPORAN_PENJUALAN.TGL_PENGAKUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_DONull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.NO_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_DONull()
            Me(Me.tableLAPORAN_PENJUALAN.NO_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_DONull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.ID_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_DONull()
            Me(Me.tableLAPORAN_PENJUALAN.ID_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIVISINull()
            Me(Me.tableLAPORAN_PENJUALAN.DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_CUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.KODE_CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_CUSTOMERNull()
            Me(Me.tableLAPORAN_PENJUALAN.KODE_CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_APPROVENull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.KODE_APPROVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_APPROVENull()
            Me(Me.tableLAPORAN_PENJUALAN.KODE_APPROVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_CUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.NAMA_CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_CUSTOMERNull()
            Me(Me.tableLAPORAN_PENJUALAN.NAMA_CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableLAPORAN_PENJUALAN.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_BARANGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.NAMA_BARANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_BARANGNull()
            Me(Me.tableLAPORAN_PENJUALAN.NAMA_BARANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.ISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISINull()
            Me(Me.tableLAPORAN_PENJUALAN.ISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKOLINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.KOLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKOLINull()
            Me(Me.tableLAPORAN_PENJUALAN.KOLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUANTITYNull()
            Me(Me.tableLAPORAN_PENJUALAN.QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSATUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.SATUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSATUANNull()
            Me(Me.tableLAPORAN_PENJUALAN.SATUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKONVERSINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.KONVERSIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKONVERSINull()
            Me(Me.tableLAPORAN_PENJUALAN.KONVERSIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCSNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.PCSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCSNull()
            Me(Me.tableLAPORAN_PENJUALAN.PCSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHARGANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHARGANull()
            Me(Me.tableLAPORAN_PENJUALAN.HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_USERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.NAMA_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_USERNull()
            Me(Me.tableLAPORAN_PENJUALAN.NAMA_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.DISCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCNull()
            Me(Me.tableLAPORAN_PENJUALAN.DISCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISKON_SATUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.DISKON_SATUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISKON_SATUANNull()
            Me(Me.tableLAPORAN_PENJUALAN.DISKON_SATUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBATALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_PENJUALAN.BATALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBATALNull()
            Me(Me.tableLAPORAN_PENJUALAN.BATALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LPBLRow
        Inherits Global.System.Data.DataRow
        
        Private tableLPBL As LPBLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLPBL = CType(Me.Table,LPBLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_NOTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.NO_NOTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_NOTA' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.NO_NOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_NOTA_RETUR() As String
            Get
                Return CType(Me(Me.tableLPBL.NO_NOTA_RETURColumn),String)
            End Get
            Set
                Me(Me.tableLPBL.NO_NOTA_RETURColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.SUBTOTALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.SUBTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISCOUNT() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.DISCOUNTColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISCOUNT' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.DISCOUNTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PENGAKUAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.TGL_PENGAKUANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PENGAKUAN' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.TGL_PENGAKUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property GROUP_CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.GROUP_CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GROUP_CUSTOMER' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.GROUP_CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BATAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableLPBL.BATALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BATAL' in table 'LPBL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLPBL.BATALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tableLPBL.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tableLPBL.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_NOTANull() As Boolean
            Return Me.IsNull(Me.tableLPBL.NO_NOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_NOTANull()
            Me(Me.tableLPBL.NO_NOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableLPBL.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableLPBL.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTALNull() As Boolean
            Return Me.IsNull(Me.tableLPBL.SUBTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTALNull()
            Me(Me.tableLPBL.SUBTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISCOUNTNull() As Boolean
            Return Me.IsNull(Me.tableLPBL.DISCOUNTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISCOUNTNull()
            Me(Me.tableLPBL.DISCOUNTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PENGAKUANNull() As Boolean
            Return Me.IsNull(Me.tableLPBL.TGL_PENGAKUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PENGAKUANNull()
            Me(Me.tableLPBL.TGL_PENGAKUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsGROUP_CUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableLPBL.GROUP_CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetGROUP_CUSTOMERNull()
            Me(Me.tableLPBL.GROUP_CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBATALNull() As Boolean
            Return Me.IsNull(Me.tableLPBL.BATALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBATALNull()
            Me(Me.tableLPBL.BATALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LAPORAN_DETAIL_BARANG_DORow
        Inherits Global.System.Data.DataRow
        
        Private tableLAPORAN_DETAIL_BARANG_DO As LAPORAN_DETAIL_BARANG_DODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLAPORAN_DETAIL_BARANG_DO = CType(Me.Table,LAPORAN_DETAIL_BARANG_DODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NO_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_DO' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NO_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TRANSAKSI() As String
            Get
                Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.ID_TRANSAKSIColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.ID_TRANSAKSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PENGAKUAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.TGL_PENGAKUANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PENGAKUAN' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.TGL_PENGAKUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIVISI' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_CUSTOMER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_CUSTOMERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_CUSTOMER' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_CUSTOMERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE_APPROVE() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_APPROVEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KODE_APPROVE' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_APPROVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_BARANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.ID_BARANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_BARANG' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.ID_BARANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_BARANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_BARANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_BARANG' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_BARANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HARGA' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KOLI() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KOLIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KOLI' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KOLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUANTITY() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.QUANTITYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUANTITY' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.PCSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.PCSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SUBTOTAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.SUBTOTALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBTOTAL' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.SUBTOTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_REG() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_REGColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_REG' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_REGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_1' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_2' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_3() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_3Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_3' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CASH_DISC() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.CASH_DISCColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CASH_DISC' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.CASH_DISCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY1' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPP() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DPPColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DPP' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PPN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.PPNColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PPN' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.PPNColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BAGIAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.BAGIANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BAGIAN' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.BAGIANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property JENIS_DO() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.JENIS_DOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'JENIS_DO' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.JENIS_DOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_USER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_USERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_USER' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_USERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY_NOMINAL() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINALColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY_NOMINAL' in table 'LAPORAN_DETAIL_BARANG_DO' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DISC_QTY_NOMINAL1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINAL1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DISC_QTY_NOMINAL1' in table 'LAPORAN_DETAIL_BARANG_DO' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINAL1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SATUAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.SATUANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SATUAN' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.SATUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property URUTAN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_DETAIL_BARANG_DO.URUTANColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'URUTAN' in table 'LAPORAN_DETAIL_BARANG_DO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_DETAIL_BARANG_DO.URUTANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_DONull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.NO_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_DONull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NO_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PENGAKUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.TGL_PENGAKUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PENGAKUANNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.TGL_PENGAKUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIVISINull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_CUSTOMERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_CUSTOMERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_CUSTOMERNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_CUSTOMERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKODE_APPROVENull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_APPROVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKODE_APPROVENull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KODE_APPROVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_BARANGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.ID_BARANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_BARANGNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.ID_BARANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_BARANGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_BARANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_BARANGNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_BARANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHARGANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHARGANull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKOLINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.KOLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKOLINull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.KOLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUANTITYNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCSNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.PCSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCSNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.PCSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSUBTOTALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.SUBTOTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSUBTOTALNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.SUBTOTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTYNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTYNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_REGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_REGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_REGNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_REGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_1Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_1Null()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_2Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_2Null()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_3Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_3Null()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCASH_DISCNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.CASH_DISCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCASH_DISCNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.CASH_DISCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY1Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY1Null()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPPNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPPNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPPNNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.PPNColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPPNNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.PPNColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBAGIANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.BAGIANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBAGIANNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.BAGIANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsJENIS_DONull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.JENIS_DOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetJENIS_DONull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.JENIS_DOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_USERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_USERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_USERNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.NAMA_USERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY_NOMINALNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY_NOMINALNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDISC_QTY_NOMINAL1Null() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINAL1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDISC_QTY_NOMINAL1Null()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.DISC_QTY_NOMINAL1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSATUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.SATUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSATUANNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.SATUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsURUTANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_DETAIL_BARANG_DO.URUTANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetURUTANNull()
            Me(Me.tableLAPORAN_DETAIL_BARANG_DO.URUTANColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LAPORAN_TRANSFER_GUDANGRow
        Inherits Global.System.Data.DataRow
        
        Private tableLAPORAN_TRANSFER_GUDANG As LAPORAN_TRANSFER_GUDANGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLAPORAN_TRANSFER_GUDANG = CType(Me.Table,LAPORAN_TRANSFER_GUDANGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_TRANSAKSI() As String
            Get
                Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.ID_TRANSAKSIColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.ID_TRANSAKSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NO_TRANSFER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.NO_TRANSFERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_TRANSFER' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.NO_TRANSFERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TGL_PENGAKUAN() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.TGL_PENGAKUANColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TGL_PENGAKUAN' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.TGL_PENGAKUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_DIVISI() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_DIVISIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_DIVISI' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_DIVISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KODE() As String
            Get
                Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.KODEColumn),String)
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.KODEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ID_BARANG() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.ID_BARANGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ID_BARANG' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.ID_BARANGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KOLI() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.KOLIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KOLI' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.KOLIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUANTITY() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITYColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUANTITY' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.PCSColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.PCSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SATUAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.SATUANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SATUAN' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.SATUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property URUTAN() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.URUTANColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'URUTAN' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.URUTANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property HARGA() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.HARGAColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HARGA' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.HARGAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ISI() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.ISIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ISI' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.ISIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KONVERSI() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.KONVERSIColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KONVERSI' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.KONVERSIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PCS_T() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.PCS_TColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PCS_T' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.PCS_TColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property QUANTITY_T() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITY_TColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QUANTITY_T' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITY_TColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property KOLI_T() As Double
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.KOLI_TColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'KOLI_T' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.KOLI_TColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ST() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.STColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ST' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.STColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.STKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STK' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.STKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_GUDANG_SUMBER() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_SUMBERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_GUDANG_SUMBER' in table 'LAPORAN_TRANSFER_GUDANG' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_SUMBERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA_GUDANG_TUJUAN() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_TUJUANColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA_GUDANG_TUJUAN' in table 'LAPORAN_TRANSFER_GUDANG' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_TUJUANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NAMA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NAMA' in table 'LAPORAN_TRANSFER_GUDANG' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNO_TRANSFERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.NO_TRANSFERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNO_TRANSFERNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.NO_TRANSFERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTGL_PENGAKUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.TGL_PENGAKUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTGL_PENGAKUANNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.TGL_PENGAKUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_DIVISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_DIVISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_DIVISINull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_DIVISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsID_BARANGNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.ID_BARANGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetID_BARANGNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.ID_BARANGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKOLINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.KOLIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKOLINull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.KOLIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUANTITYNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUANTITYNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCSNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.PCSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCSNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.PCSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSATUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.SATUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSATUANNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.SATUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsURUTANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.URUTANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetURUTANNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.URUTANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsHARGANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.HARGAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetHARGANull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.HARGAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsISINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.ISIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetISINull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.ISIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKONVERSINull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.KONVERSIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKONVERSINull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.KONVERSIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPCS_TNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.PCS_TColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPCS_TNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.PCS_TColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsQUANTITY_TNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITY_TColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetQUANTITY_TNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.QUANTITY_TColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsKOLI_TNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.KOLI_TColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetKOLI_TNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.KOLI_TColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.STColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.STColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTKNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.STKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTKNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.STKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_GUDANG_SUMBERNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_SUMBERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_GUDANG_SUMBERNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_SUMBERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMA_GUDANG_TUJUANNull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_TUJUANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMA_GUDANG_TUJUANNull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMA_GUDANG_TUJUANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNAMANull() As Boolean
            Return Me.IsNull(Me.tableLAPORAN_TRANSFER_GUDANG.NAMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNAMANull()
            Me(Me.tableLAPORAN_TRANSFER_GUDANG.NAMAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DAILY_SALES_REPORTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DAILY_SALES_REPORTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DAILY_SALES_REPORTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DAILY_SALES_REPORTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class KARTU_STOKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As KARTU_STOKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As KARTU_STOKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As KARTU_STOKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LAPORAN_PEMBELIANRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LAPORAN_PEMBELIANRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LAPORAN_PEMBELIANRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LAPORAN_PEMBELIANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LAPORAN_DORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LAPORAN_DORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LAPORAN_DORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LAPORAN_DORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LAPORAN_DETAIL_DORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LAPORAN_DETAIL_DORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LAPORAN_DETAIL_DORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LAPORAN_DETAIL_DORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PRICE_LISTRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRICE_LISTRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PRICE_LISTRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PRICE_LISTRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROC_SALDO_STOKRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROC_SALDO_STOKRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROC_SALDO_STOKRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROC_SALDO_STOKRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LAPORAN_PENJUALANRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LAPORAN_PENJUALANRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LAPORAN_PENJUALANRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LAPORAN_PENJUALANRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LPBLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LPBLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LPBLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LPBLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LAPORAN_DETAIL_BARANG_DORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LAPORAN_DETAIL_BARANG_DORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LAPORAN_DETAIL_BARANG_DORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LAPORAN_DETAIL_BARANG_DORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LAPORAN_TRANSFER_GUDANGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LAPORAN_TRANSFER_GUDANGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LAPORAN_TRANSFER_GUDANGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LAPORAN_TRANSFER_GUDANGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSLaporanTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class DAILY_SALES_REPORTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DAILY_SALES_REPORT"
            tableMapping.ColumnMappings.Add("ID_TRANSAKSI", "ID_TRANSAKSI")
            tableMapping.ColumnMappings.Add("NO_NOTA", "NO_NOTA")
            tableMapping.ColumnMappings.Add("NO_REF", "NO_REF")
            tableMapping.ColumnMappings.Add("TGL", "TGL")
            tableMapping.ColumnMappings.Add("TGL_PENGAKUAN", "TGL_PENGAKUAN")
            tableMapping.ColumnMappings.Add("ID_DO", "ID_DO")
            tableMapping.ColumnMappings.Add("NO_DO", "NO_DO")
            tableMapping.ColumnMappings.Add("TGL_DO", "TGL_DO")
            tableMapping.ColumnMappings.Add("DIVISI", "DIVISI")
            tableMapping.ColumnMappings.Add("JENIS_PPN", "JENIS_PPN")
            tableMapping.ColumnMappings.Add("KODE_CUSTOMER", "KODE_CUSTOMER")
            tableMapping.ColumnMappings.Add("KODE_APPROVE", "KODE_APPROVE")
            tableMapping.ColumnMappings.Add("CABANG", "CABANG")
            tableMapping.ColumnMappings.Add("ALAMAT_KIRIM", "ALAMAT_KIRIM")
            tableMapping.ColumnMappings.Add("GUDANG", "GUDANG")
            tableMapping.ColumnMappings.Add("SJ_TANPA_HARGA", "SJ_TANPA_HARGA")
            tableMapping.ColumnMappings.Add("KETERANGAN_CETAK", "KETERANGAN_CETAK")
            tableMapping.ColumnMappings.Add("KETERANGAN_INTERNAL", "KETERANGAN_INTERNAL")
            tableMapping.ColumnMappings.Add("SUBTOTAL", "SUBTOTAL")
            tableMapping.ColumnMappings.Add("DPP", "DPP")
            tableMapping.ColumnMappings.Add("PPN", "PPN")
            tableMapping.ColumnMappings.Add("PERIODE", "PERIODE")
            tableMapping.ColumnMappings.Add("CRUSER", "CRUSER")
            tableMapping.ColumnMappings.Add("CRTIME", "CRTIME")
            tableMapping.ColumnMappings.Add("MDUSER", "MDUSER")
            tableMapping.ColumnMappings.Add("MDTIME", "MDTIME")
            tableMapping.ColumnMappings.Add("BATAL", "BATAL")
            tableMapping.ColumnMappings.Add("BAGIAN", "BAGIAN")
            tableMapping.ColumnMappings.Add("ID_STUFFING", "ID_STUFFING")
            tableMapping.ColumnMappings.Add("KODE_EKSPEDISI", "KODE_EKSPEDISI")
            tableMapping.ColumnMappings.Add("NO_TRUK", "NO_TRUK")
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            tableMapping.ColumnMappings.Add("PEMBAYARAN", "PEMBAYARAN")
            tableMapping.ColumnMappings.Add("NO_DO1", "NO_DO1")
            tableMapping.ColumnMappings.Add("DISC_QTY", "DISC_QTY")
            tableMapping.ColumnMappings.Add("DISC_QTY_NOMINAL", "DISC_QTY_NOMINAL")
            tableMapping.ColumnMappings.Add("DISC_REG", "DISC_REG")
            tableMapping.ColumnMappings.Add("DISC_REG_NOMINAL", "DISC_REG_NOMINAL")
            tableMapping.ColumnMappings.Add("DISC_1", "DISC_1")
            tableMapping.ColumnMappings.Add("DISC_1_NOMINAL", "DISC_1_NOMINAL")
            tableMapping.ColumnMappings.Add("DISC_2", "DISC_2")
            tableMapping.ColumnMappings.Add("DISC_2_NOMINAL", "DISC_2_NOMINAL")
            tableMapping.ColumnMappings.Add("DISC_3", "DISC_3")
            tableMapping.ColumnMappings.Add("CASH_DISC", "CASH_DISC")
            tableMapping.ColumnMappings.Add("DISC_3_NOMINAL", "DISC_3_NOMINAL")
            tableMapping.ColumnMappings.Add("CASH_DISC_NOMINAL", "CASH_DISC_NOMINAL")
            tableMapping.ColumnMappings.Add("DISC_QTY1", "DISC_QTY1")
            tableMapping.ColumnMappings.Add("DISC_QTY_NOMINAL1", "DISC_QTY_NOMINAL1")
            tableMapping.ColumnMappings.Add("NAMA_GUDANG", "NAMA_GUDANG")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NOTA.ID_TRANSAKSI, RIGHT(NOTA.NO_NOTA, 6) AS NO_NOTA, NOTA.NO_REF, NOTA.TG"& _ 
                "L, NOTA.TGL_PENGAKUAN, NOTA.ID_DO, RIGHT(NOTA.NO_DO, 6) AS NO_DO, NOTA.TGL_DO, N"& _ 
                "OTA.DIVISI, NOTA.JENIS_PPN, NOTA.KODE_CUSTOMER, NOTA.KODE_APPROVE, NOTA.CABANG, "& _ 
                "NOTA.ALAMAT_KIRIM, NOTA.GUDANG, NOTA.SJ_TANPA_HARGA, NOTA.KETERANGAN_CETAK, NOTA"& _ 
                ".KETERANGAN_INTERNAL, NOTA.SUBTOTAL, NOTA.DPP, NOTA.PPN, NOTA.PERIODE, NOTA.CRUS"& _ 
                "ER, NOTA.CRTIME, NOTA.MDUSER, NOTA.MDTIME, NOTA.BATAL, NOTA.BAGIAN, NOTA.ID_STUF"& _ 
                "FING, NOTA.KODE_EKSPEDISI, NOTA.NO_TRUK, CUSTOMER.NAMA, DIVISI.NAMA AS NAMA_DIVI"& _ 
                "SI, DELIVERY_ORDER.NO_DO AS NO_DO1, DELIVERY_ORDER.PEMBAYARAN, NOTA.DISC_QTY, NO"& _ 
                "TA.DISC_QTY_NOMINAL, NOTA.DISC_REG, NOTA.DISC_REG_NOMINAL, NOTA.DISC_1, NOTA.DIS"& _ 
                "C_1_NOMINAL, NOTA.DISC_2, NOTA.DISC_2_NOMINAL, NOTA.DISC_3, NOTA.CASH_DISC, NOTA"& _ 
                ".DISC_3_NOMINAL, NOTA.CASH_DISC_NOMINAL, NOTA.DISC_QTY1, NOTA.DISC_QTY_NOMINAL1,"& _ 
                " GUDANG.NAMA_GUDANG FROM NOTA LEFT OUTER JOIN GUDANG ON NOTA.GUDANG = GUDANG.KOD"& _ 
                "E LEFT OUTER JOIN DELIVERY_ORDER ON NOTA.ID_DO = DELIVERY_ORDER.ID_TRANSAKSI LEF"& _ 
                "T OUTER JOIN DIVISI ON NOTA.DIVISI = DIVISI.KODE LEFT OUTER JOIN CUSTOMER ON NOT"& _ 
                "A.KODE_CUSTOMER = CUSTOMER.ID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.DAILY_SALES_REPORTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.DAILY_SALES_REPORTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.DAILY_SALES_REPORTDataTable = New DSLaporan.DAILY_SALES_REPORTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class KARTU_STOKTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "KARTU_STOK"
            tableMapping.ColumnMappings.Add("HARGA", "HARGA")
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            tableMapping.ColumnMappings.Add("KODE_BARANG", "KODE_BARANG")
            tableMapping.ColumnMappings.Add("SAT_DIST1", "SAT_DIST1")
            tableMapping.ColumnMappings.Add("SAT_SUPER1", "SAT_SUPER1")
            tableMapping.ColumnMappings.Add("TGL", "TGL")
            tableMapping.ColumnMappings.Add("FAKTUR", "FAKTUR")
            tableMapping.ColumnMappings.Add("DZ", "DZ")
            tableMapping.ColumnMappings.Add("PCS", "PCS")
            tableMapping.ColumnMappings.Add("KODE", "KODE")
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY")
            tableMapping.ColumnMappings.Add("QTY_SISA", "QTY_SISA")
            tableMapping.ColumnMappings.Add("DZ_SISA", "DZ_SISA")
            tableMapping.ColumnMappings.Add("PCS_SISA", "PCS_SISA")
            tableMapping.ColumnMappings.Add("PERIODE", "PERIODE")
            tableMapping.ColumnMappings.Add("TRANSAKSI", "TRANSAKSI")
            tableMapping.ColumnMappings.Add("GUDANG", "GUDANG")
            tableMapping.ColumnMappings.Add("NAMA_GUDANG", "NAMA_GUDANG")
            tableMapping.ColumnMappings.Add("QTY_DIST", "QTY_DIST")
            tableMapping.ColumnMappings.Add("SATUAN", "SATUAN")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("URUTAN", "URUTAN")
            tableMapping.ColumnMappings.Add("HARGA_AKHIR", "HARGA_AKHIR")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.PROC_KARTU_STOK_LAMA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIODE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAHUN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVISI", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARANG", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUDANG", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.KARTU_STOKDataTable, ByVal PERIODE As Global.System.Nullable(Of Integer), ByVal TAHUN As Global.System.Nullable(Of Integer), ByVal DIVISI As String, ByVal BARANG As String, ByVal GUDANG As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PERIODE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PERIODE.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TAHUN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TAHUN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DIVISI Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DIVISI,String)
            End If
            If (BARANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(BARANG,String)
            End If
            If (GUDANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUDANG,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PERIODE As Global.System.Nullable(Of Integer), ByVal TAHUN As Global.System.Nullable(Of Integer), ByVal DIVISI As String, ByVal BARANG As String, ByVal GUDANG As String) As DSLaporan.KARTU_STOKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PERIODE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PERIODE.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TAHUN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TAHUN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DIVISI Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DIVISI,String)
            End If
            If (BARANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(BARANG,String)
            End If
            If (GUDANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUDANG,String)
            End If
            Dim dataTable As DSLaporan.KARTU_STOKDataTable = New DSLaporan.KARTU_STOKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LAPORAN_PEMBELIANTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LAPORAN_PEMBELIAN"
            tableMapping.ColumnMappings.Add("NO_NOTA", "NO_NOTA")
            tableMapping.ColumnMappings.Add("ID_TRANSAKSI", "ID_TRANSAKSI")
            tableMapping.ColumnMappings.Add("NO_REF", "NO_REF")
            tableMapping.ColumnMappings.Add("TGL", "TGL")
            tableMapping.ColumnMappings.Add("TGL_PENGAKUAN", "TGL_PENGAKUAN")
            tableMapping.ColumnMappings.Add("ID_PO", "ID_PO")
            tableMapping.ColumnMappings.Add("NO_PO", "NO_PO")
            tableMapping.ColumnMappings.Add("TGL_PO", "TGL_PO")
            tableMapping.ColumnMappings.Add("ID_NOTA_PENJUALAN", "ID_NOTA_PENJUALAN")
            tableMapping.ColumnMappings.Add("NO_NOTA_PENJUALAN", "NO_NOTA_PENJUALAN")
            tableMapping.ColumnMappings.Add("DIVISI", "DIVISI")
            tableMapping.ColumnMappings.Add("JENIS_PPN", "JENIS_PPN")
            tableMapping.ColumnMappings.Add("KODE_SUPPLIER", "KODE_SUPPLIER")
            tableMapping.ColumnMappings.Add("ALAMAT_KIRIM", "ALAMAT_KIRIM")
            tableMapping.ColumnMappings.Add("GUDANG", "GUDANG")
            tableMapping.ColumnMappings.Add("KETERANGAN_CETAK", "KETERANGAN_CETAK")
            tableMapping.ColumnMappings.Add("SUBTOTAL", "SUBTOTAL")
            tableMapping.ColumnMappings.Add("DPP", "DPP")
            tableMapping.ColumnMappings.Add("PPN", "PPN")
            tableMapping.ColumnMappings.Add("PERIODE", "PERIODE")
            tableMapping.ColumnMappings.Add("BAGIAN", "BAGIAN")
            tableMapping.ColumnMappings.Add("KODE_EKSPEDISI", "KODE_EKSPEDISI")
            tableMapping.ColumnMappings.Add("NO_TRUK", "NO_TRUK")
            tableMapping.ColumnMappings.Add("NO_CLAIM", "NO_CLAIM")
            tableMapping.ColumnMappings.Add("ID_CLAIM", "ID_CLAIM")
            tableMapping.ColumnMappings.Add("DPP_CLAIM", "DPP_CLAIM")
            tableMapping.ColumnMappings.Add("PPN_CLAIM", "PPN_CLAIM")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("SUBTOTAL_CLAIM", "SUBTOTAL_CLAIM")
            tableMapping.ColumnMappings.Add("NAMA_GUDANG", "NAMA_GUDANG")
            tableMapping.ColumnMappings.Add("DPP_NOTA", "DPP_NOTA")
            tableMapping.ColumnMappings.Add("PPN_NOTA", "PPN_NOTA")
            tableMapping.ColumnMappings.Add("BATAL", "BATAL")
            tableMapping.ColumnMappings.Add("SUBTOTAL_TANPA_BATAL", "SUBTOTAL_TANPA_BATAL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT RIGHT(PEMBELIAN.NO_NOTA_PENJUALAN, 6) AS NO_NOTA, PEMBELIAN.ID_TRANSAKSI, "& _ 
                "PEMBELIAN.NO_REF, PEMBELIAN.TGL, PEMBELIAN.TGL_PENGAKUAN, PEMBELIAN.ID_PO, PEMBE"& _ 
                "LIAN.NO_PO, PEMBELIAN.TGL_PO, PEMBELIAN.ID_NOTA_PENJUALAN, PEMBELIAN.NO_NOTA_PEN"& _ 
                "JUALAN, PEMBELIAN.DIVISI, PEMBELIAN.JENIS_PPN,PEMBELIAN.BATAL, PEMBELIAN.KODE_SU"& _ 
                "PPLIER, PEMBELIAN.ALAMAT_KIRIM, PEMBELIAN.GUDANG, PEMBELIAN.KETERANGAN_CETAK, PE"& _ 
                "MBELIAN.SUBTOTAL,CASE WHEN PEMBELIAN.BATAL=1 THEN 0 ELSE PEMBELIAN.SUBTOTAL END "& _ 
                "AS SUBTOTAL_TANPA_BATAL, PEMBELIAN.DPP, PEMBELIAN.PPN, PEMBELIAN.PERIODE, PEMBEL"& _ 
                "IAN.BAGIAN, PEMBELIAN.KODE_EKSPEDISI, PEMBELIAN.NO_TRUK, CLAIM.NO_CLAIM, CLAIM.I"& _ 
                "D_TRANSAKSI AS ID_CLAIM, ISNULL(CLAIM.SUBTOTAL,0) AS SUBTOTAL_CLAIM, ISNULL(CLAI"& _ 
                "M.DPP,0) AS DPP_CLAIM, ISNULL(CLAIM.PPN,0) AS PPN_CLAIM, DIVISI.NAMA AS NAMA_DIV"& _ 
                "ISI, GUDANG.NAMA_GUDANG, NOTA.DPP AS DPP_NOTA, NOTA.PPN AS PPN_NOTA FROM PEMBELI"& _ 
                "AN LEFT OUTER JOIN NOTA ON PEMBELIAN.ID_NOTA_PENJUALAN = NOTA.ID_TRANSAKSI LEFT "& _ 
                "OUTER JOIN GUDANG ON PEMBELIAN.GUDANG = GUDANG.KODE LEFT OUTER JOIN DIVISI ON PE"& _ 
                "MBELIAN.DIVISI = DIVISI.KODE LEFT OUTER JOIN CLAIM ON PEMBELIAN.ID_TRANSAKSI = C"& _ 
                "LAIM.ID_NOTA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.LAPORAN_PEMBELIANDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.LAPORAN_PEMBELIANDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.LAPORAN_PEMBELIANDataTable = New DSLaporan.LAPORAN_PEMBELIANDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LAPORAN_DOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LAPORAN_DO"
            tableMapping.ColumnMappings.Add("NO_DO", "NO_DO")
            tableMapping.ColumnMappings.Add("ID_TRANSAKSI", "ID_TRANSAKSI")
            tableMapping.ColumnMappings.Add("TGL_PENGAKUAN", "TGL_PENGAKUAN")
            tableMapping.ColumnMappings.Add("DIVISI", "DIVISI")
            tableMapping.ColumnMappings.Add("KODE_CUSTOMER", "KODE_CUSTOMER")
            tableMapping.ColumnMappings.Add("KODE_APPROVE", "KODE_APPROVE")
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            tableMapping.ColumnMappings.Add("SUBTOTAL", "SUBTOTAL")
            tableMapping.ColumnMappings.Add("DISC_QTY", "DISC_QTY")
            tableMapping.ColumnMappings.Add("DISC_REG", "DISC_REG")
            tableMapping.ColumnMappings.Add("DISC_1", "DISC_1")
            tableMapping.ColumnMappings.Add("DISC_2", "DISC_2")
            tableMapping.ColumnMappings.Add("DISC_3", "DISC_3")
            tableMapping.ColumnMappings.Add("CASH_DISC", "CASH_DISC")
            tableMapping.ColumnMappings.Add("DISC_QTY1", "DISC_QTY1")
            tableMapping.ColumnMappings.Add("DPP", "DPP")
            tableMapping.ColumnMappings.Add("PPN", "PPN")
            tableMapping.ColumnMappings.Add("BAGIAN", "BAGIAN")
            tableMapping.ColumnMappings.Add("JENIS_DO", "JENIS_DO")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("NAMA_USER", "NAMA_USER")
            tableMapping.ColumnMappings.Add("DISC_QTY_NOMINAL", "DISC_QTY_NOMINAL")
            tableMapping.ColumnMappings.Add("DISC_QTY_NOMINAL1", "DISC_QTY_NOMINAL1")
            tableMapping.ColumnMappings.Add("BATAL", "BATAL")
            tableMapping.ColumnMappings.Add("SUBTOTAL_DETAIL", "SUBTOTAL_DETAIL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        DELIVERY_ORDER.BATAL,DELIVERY_ORDER.NO_DO, DELIVERY_ORDER.ID_TRANSA"& _ 
                "KSI, DELIVERY_ORDER.TGL_PENGAKUAN, DELIVERY_ORDER.DIVISI, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     DELIVERY_ORDER.KODE_CUSTOMER, DELIVERY_ORDER.KODE_APPROVE, CUSTOMER.NAMA, D"& _ 
                "ELIVERY_ORDER.SUBTOTAL AS SUBTOTAL_DETAIL, CASE WHEN BATAL=1 THEN 0 ELSE DELIVER"& _ 
                "Y_ORDER.SUBTOTAL END AS SUBTOTAL, DELIVERY_ORDER.DISC_QTY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      DELIVERY_ORDER.DISC_REG, DELIVERY_ORDER.DISC_1, DELIVERY_ORDER.DISC_2, DEL"& _ 
                "IVERY_ORDER.DISC_3, DELIVERY_ORDER.CASH_DISC, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DELIVER"& _ 
                "Y_ORDER.DISC_QTY1, DELIVERY_ORDER.DPP, DELIVERY_ORDER.PPN, DELIVERY_ORDER.BAGIAN"& _ 
                ", DELIVERY_ORDER.JENIS_DO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DIVISI.NAMA AS NAMA_DIVISI"& _ 
                ", USERS.NAMA_USER, DELIVERY_ORDER.DISC_QTY_NOMINAL, DELIVERY_ORDER.DISC_QTY_NOMI"& _ 
                "NAL1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            DELIVERY_ORDER LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         D"& _ 
                "IVISI ON DELIVERY_ORDER.DIVISI = DIVISI.KODE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       USERS ON DELIVERY_ORDER.CRUSER = USERS.ID_USER LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CUSTOMER ON DELIVERY_ORDER.KODE_CUSTOMER = CUSTOMER.ID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.LAPORAN_DODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.LAPORAN_DODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.LAPORAN_DODataTable = New DSLaporan.LAPORAN_DODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LAPORAN_DETAIL_DOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LAPORAN_DETAIL_DO"
            tableMapping.ColumnMappings.Add("CUSTOMER", "CUSTOMER")
            tableMapping.ColumnMappings.Add("BARANG", "BARANG")
            tableMapping.ColumnMappings.Add("PCS_PRW", "PCS_PRW")
            tableMapping.ColumnMappings.Add("BRUTO_PRW", "BRUTO_PRW")
            tableMapping.ColumnMappings.Add("PCS_PST", "PCS_PST")
            tableMapping.ColumnMappings.Add("BRUTO_PST", "BRUTO_PST")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT D.NAMA AS CUSTOMER,C.NAMA AS BARANG,SUM(CASE WHEN A.BAGIAN LIKE '%Perwakil"& _ 
                "an%' THEN B.PCS ELSE 0 END) AS PCS_PRW,SUM(CASE WHEN A.BAGIAN LIKE '%Perwakilan%"& _ 
                "' THEN B.PCS*((B.HARGA-B.DISKON_SATUAN)/B.KONVERSI) ELSE 0 END) AS BRUTO_PRW,SUM"& _ 
                "(CASE WHEN A.BAGIAN LIKE '%Pusat%' THEN B.PCS ELSE 0 END) AS PCS_PST,SUM(CASE WH"& _ 
                "EN A.BAGIAN LIKE '%Pusat%' THEN B.PCS*((B.HARGA-B.DISKON_SATUAN)/B.KONVERSI) ELS"& _ 
                "E 0 END) AS BRUTO_PST FROM DELIVERY_ORDER A INNER JOIN DETAIL_DELIVERY_ORDER B O"& _ 
                "N A.ID_TRANSAKSI=B.ID_TRANSAKSI LEFT JOIN BARANG C ON B.ID_BARANG=C.ID LEFT JOIN"& _ 
                " CUSTOMER D ON A.KODE_CUSTOMER=D.ID GROUP BY D.NAMA,C.NAMA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.LAPORAN_DETAIL_DODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.LAPORAN_DETAIL_DODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.LAPORAN_DETAIL_DODataTable = New DSLaporan.LAPORAN_DETAIL_DODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PRICE_LISTTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRICE_LIST"
            tableMapping.ColumnMappings.Add("KODE", "KODE")
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            tableMapping.ColumnMappings.Add("ID_BARANG", "ID_BARANG")
            tableMapping.ColumnMappings.Add("JENIS", "JENIS")
            tableMapping.ColumnMappings.Add("HARGA_BARU", "HARGA_BARU")
            tableMapping.ColumnMappings.Add("QTY_KOLI", "QTY_KOLI")
            tableMapping.ColumnMappings.Add("SATUAN", "SATUAN")
            tableMapping.ColumnMappings.Add("NAMA1", "NAMA1")
            tableMapping.ColumnMappings.Add("TGL_PRICE", "TGL_PRICE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT B.KODE,B.NAMA,A.ID_BARANG,A.JENIS,HARGA_BARU,CASE A.JENIS WHEN 'Langganan'"& _ 
                " THEN B.SAT_DIST1 WHEN 'Supermarket' THEN B.SAT_SUPER1 END AS SATUAN,QTY_KOLI,D."& _ 
                "NAMA,A.TGL_PRICE FROM VI_PRICE_LIST A LEFT JOIN BARANG B ON A.ID_BARANG=B.ID LEF"& _ 
                "T JOIN LINK_BARANG_DIVISI C ON B.ID=C.ID_BARANG LEFT JOIN DIVISI D ON C.KODE_DIV"& _ 
                "ISI=D.KODE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.PRICE_LISTDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.PRICE_LISTDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.PRICE_LISTDataTable = New DSLaporan.PRICE_LISTDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PROC_SALDO_STOKTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PROC_SALDO_STOK"
            tableMapping.ColumnMappings.Add("ID", "ID")
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY")
            tableMapping.ColumnMappings.Add("DZ", "DZ")
            tableMapping.ColumnMappings.Add("PCS", "PCS")
            tableMapping.ColumnMappings.Add("SAT_SUPER1", "SAT_SUPER1")
            tableMapping.ColumnMappings.Add("KODE", "KODE")
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            tableMapping.ColumnMappings.Add("HARGA", "HARGA")
            tableMapping.ColumnMappings.Add("JUMLAH_HARGA", "JUMLAH_HARGA")
            tableMapping.ColumnMappings.Add("KARTU_STOK", "KARTU_STOK")
            tableMapping.ColumnMappings.Add("TAMBAHAN_HARGA", "TAMBAHAN_HARGA")
            tableMapping.ColumnMappings.Add("BEDA_HARGA", "BEDA_HARGA")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("GUDANG", "GUDANG")
            tableMapping.ColumnMappings.Add("NAMA_GUDANG", "NAMA_GUDANG")
            tableMapping.ColumnMappings.Add("SATUAN", "SATUAN")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.PROC_SALDO_STOK_LAMA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIODE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAHUN", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIVISI", Global.System.Data.SqlDbType.VarChar, 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BARANG", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GUDANG", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.PROC_SALDO_STOKDataTable, ByVal PERIODE As Global.System.Nullable(Of Integer), ByVal TAHUN As Global.System.Nullable(Of Integer), ByVal DIVISI As String, ByVal BARANG As String, ByVal GUDANG As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PERIODE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PERIODE.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TAHUN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TAHUN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DIVISI Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DIVISI,String)
            End If
            If (BARANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(BARANG,String)
            End If
            If (GUDANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUDANG,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal PERIODE As Global.System.Nullable(Of Integer), ByVal TAHUN As Global.System.Nullable(Of Integer), ByVal DIVISI As String, ByVal BARANG As String, ByVal GUDANG As String) As DSLaporan.PROC_SALDO_STOKDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (PERIODE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(PERIODE.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (TAHUN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(TAHUN.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DIVISI Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DIVISI,String)
            End If
            If (BARANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(BARANG,String)
            End If
            If (GUDANG Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(GUDANG,String)
            End If
            Dim dataTable As DSLaporan.PROC_SALDO_STOKDataTable = New DSLaporan.PROC_SALDO_STOKDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LAPORAN_PENJUALANTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LAPORAN_PENJUALAN"
            tableMapping.ColumnMappings.Add("NO_NOTA", "NO_NOTA")
            tableMapping.ColumnMappings.Add("NO_REF", "NO_REF")
            tableMapping.ColumnMappings.Add("TGL", "TGL")
            tableMapping.ColumnMappings.Add("TGL_PENGAKUAN", "TGL_PENGAKUAN")
            tableMapping.ColumnMappings.Add("NO_DO", "NO_DO")
            tableMapping.ColumnMappings.Add("ID_DO", "ID_DO")
            tableMapping.ColumnMappings.Add("DIVISI", "DIVISI")
            tableMapping.ColumnMappings.Add("KODE_CUSTOMER", "KODE_CUSTOMER")
            tableMapping.ColumnMappings.Add("KODE_APPROVE", "KODE_APPROVE")
            tableMapping.ColumnMappings.Add("NAMA_CUSTOMER", "NAMA_CUSTOMER")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("KODE", "KODE")
            tableMapping.ColumnMappings.Add("NAMA_BARANG", "NAMA_BARANG")
            tableMapping.ColumnMappings.Add("ISI", "ISI")
            tableMapping.ColumnMappings.Add("KOLI", "KOLI")
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY")
            tableMapping.ColumnMappings.Add("SATUAN", "SATUAN")
            tableMapping.ColumnMappings.Add("KONVERSI", "KONVERSI")
            tableMapping.ColumnMappings.Add("PCS", "PCS")
            tableMapping.ColumnMappings.Add("HARGA", "HARGA")
            tableMapping.ColumnMappings.Add("NAMA_USER", "NAMA_USER")
            tableMapping.ColumnMappings.Add("DISC", "DISC")
            tableMapping.ColumnMappings.Add("DISKON_SATUAN", "DISKON_SATUAN")
            tableMapping.ColumnMappings.Add("BATAL", "BATAL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        REPLACE(NOTA.NO_NOTA, DIVISI.NAMA, '') AS NO_NOTA, NOTA.NO_REF, NOT"& _ 
                "A.TGL, NOTA.TGL_PENGAKUAN, REPLACE(NOTA.NO_DO, DIVISI.NAMA, '') AS NO_DO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     NOTA.ID_DO, NOTA.DIVISI, NOTA.KODE_CUSTOMER, NOTA.KODE_APPR"& _ 
                "OVE, CUSTOMER.NAMA AS NAMA_CUSTOMER, DIVISI.NAMA AS NAMA_DIVISI, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            BARANG.KODE, BARANG.NAMA AS NAMA_BARANG, DETAIL_NOTA.ISI, DETAIL_NOT"& _ 
                "A.KOLI, DETAIL_NOTA.QUANTITY, DETAIL_NOTA.SATUAN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DET"& _ 
                "AIL_NOTA.KONVERSI, DETAIL_NOTA.PCS, DETAIL_NOTA.HARGA, USERS.NAMA_USER, DETAIL_N"& _ 
                "OTA.DISC, DETAIL_NOTA.DISKON_SATUAN, NOTA.BATAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            BARANG INNER JO"& _ 
                "IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         NOTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DETAIL_NO"& _ 
                "TA ON NOTA.ID_TRANSAKSI = DETAIL_NOTA.ID_TRANSAKSI ON BARANG.ID = DETAIL_NOTA.ID"& _ 
                "_BARANG INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         USERS ON NOTA.CRUSER = USERS.ID_USE"& _ 
                "R LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CUSTOMER ON NOTA.KODE_CUSTOMER = CUS"& _ 
                "TOMER.ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DIVISI ON NOTA.DIVISI = DIVIS"& _ 
                "I.KODE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DELIVERY_ORDER ON DELIVERY_ORDE"& _ 
                "R.ID_TRANSAKSI = NOTA.ID_DO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINK_BARAN"& _ 
                "G_PROMO ON BARANG.ID = LINK_BARANG_PROMO.ID_BARANG"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.LAPORAN_PENJUALANDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.LAPORAN_PENJUALANDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.LAPORAN_PENJUALANDataTable = New DSLaporan.LAPORAN_PENJUALANDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LPBLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LPBL"
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            tableMapping.ColumnMappings.Add("NO_NOTA", "NO_NOTA")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("NO_NOTA_RETUR", "NO_NOTA_RETUR")
            tableMapping.ColumnMappings.Add("SUBTOTAL", "SUBTOTAL")
            tableMapping.ColumnMappings.Add("DISCOUNT", "DISCOUNT")
            tableMapping.ColumnMappings.Add("TGL_PENGAKUAN", "TGL_PENGAKUAN")
            tableMapping.ColumnMappings.Add("GROUP_CUSTOMER", "GROUP_CUSTOMER")
            tableMapping.ColumnMappings.Add("BATAL", "BATAL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        C.GROUP_CUSTOMER, C.NAMA, B.NO_NOTA, D.NAMA AS NAMA_DIVISI, A.NO_NO"& _ 
                "TA_RETUR, A.SUBTOTAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A.DISC_QTY_NOMINAL + A.DISC_REG"& _ 
                "_NOMINAL + A.DISC_1_NOMINAL + A.DISC_2_NOMINAL + A.DISC_3_NOMINAL + A.CASH_DISC_"& _ 
                "NOMINAL + A.DISC_QTY_NOMINAL1 AS DISCOUNT, A.TGL_PENGAKUAN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       A.BATAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            RETUR_PENJUALAN AS A LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               TTB AS B ON A.ID_TTB = B.ID_TRANSAKSI LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               CUSTOMER AS C ON A.KODE_CUSTOMER = C.ID LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 DIVISI AS D ON A.DIVISI = D.KODE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.LPBLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.LPBLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.LPBLDataTable = New DSLaporan.LPBLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LAPORAN_DETAIL_BARANG_DOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LAPORAN_DETAIL_BARANG_DO"
            tableMapping.ColumnMappings.Add("NO_DO", "NO_DO")
            tableMapping.ColumnMappings.Add("ID_TRANSAKSI", "ID_TRANSAKSI")
            tableMapping.ColumnMappings.Add("TGL_PENGAKUAN", "TGL_PENGAKUAN")
            tableMapping.ColumnMappings.Add("DIVISI", "DIVISI")
            tableMapping.ColumnMappings.Add("KODE_CUSTOMER", "KODE_CUSTOMER")
            tableMapping.ColumnMappings.Add("KODE_APPROVE", "KODE_APPROVE")
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            tableMapping.ColumnMappings.Add("ID_BARANG", "ID_BARANG")
            tableMapping.ColumnMappings.Add("NAMA_BARANG", "NAMA_BARANG")
            tableMapping.ColumnMappings.Add("HARGA", "HARGA")
            tableMapping.ColumnMappings.Add("KOLI", "KOLI")
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY")
            tableMapping.ColumnMappings.Add("PCS", "PCS")
            tableMapping.ColumnMappings.Add("SUBTOTAL", "SUBTOTAL")
            tableMapping.ColumnMappings.Add("DISC_QTY", "DISC_QTY")
            tableMapping.ColumnMappings.Add("DISC_REG", "DISC_REG")
            tableMapping.ColumnMappings.Add("DISC_1", "DISC_1")
            tableMapping.ColumnMappings.Add("DISC_2", "DISC_2")
            tableMapping.ColumnMappings.Add("DISC_3", "DISC_3")
            tableMapping.ColumnMappings.Add("CASH_DISC", "CASH_DISC")
            tableMapping.ColumnMappings.Add("DISC_QTY1", "DISC_QTY1")
            tableMapping.ColumnMappings.Add("DPP", "DPP")
            tableMapping.ColumnMappings.Add("PPN", "PPN")
            tableMapping.ColumnMappings.Add("BAGIAN", "BAGIAN")
            tableMapping.ColumnMappings.Add("JENIS_DO", "JENIS_DO")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("NAMA_USER", "NAMA_USER")
            tableMapping.ColumnMappings.Add("DISC_QTY_NOMINAL", "DISC_QTY_NOMINAL")
            tableMapping.ColumnMappings.Add("DISC_QTY_NOMINAL1", "DISC_QTY_NOMINAL1")
            tableMapping.ColumnMappings.Add("SATUAN", "SATUAN")
            tableMapping.ColumnMappings.Add("URUTAN", "URUTAN")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CASE WHEN URUTAN = 1 THEN DELIVERY_ORDER.NO_DO END AS NO_DO, DELIVE"& _ 
                "RY_ORDER.ID_TRANSAKSI, DELIVERY_ORDER.TGL_PENGAKUAN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "DELIVERY_ORDER.DIVISI, DELIVERY_ORDER.KODE_CUSTOMER, DELIVERY_ORDER.KODE_APPROVE"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN URUTAN = 1 THEN CUSTOMER.NAMA END AS NAMA"& _ 
                ", DETAIL_DELIVERY_ORDER.ID_BARANG, BARANG.NAMA AS NAMA_BARANG, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          DETAIL_DELIVERY_ORDER.HARGA, DETAIL_DELIVERY_ORDER.KOLI, DETAIL_DELIVE"& _ 
                "RY_ORDER.QUANTITY, DETAIL_DELIVERY_ORDER.PCS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WH"& _ 
                "EN URUTAN = 1 THEN DELIVERY_ORDER.SUBTOTAL END AS SUBTOTAL, DELIVERY_ORDER.DISC_"& _ 
                "QTY, DELIVERY_ORDER.DISC_REG, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DELIVERY_ORDER.DISC_1, "& _ 
                "DELIVERY_ORDER.DISC_2, DELIVERY_ORDER.DISC_3, DELIVERY_ORDER.CASH_DISC, DELIVERY"& _ 
                "_ORDER.DISC_QTY1, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN URUTAN = 1 THEN DELIVERY_"& _ 
                "ORDER.DPP END AS DPP, CASE WHEN URUTAN = 1 THEN DELIVERY_ORDER.PPN END AS PPN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DELIVERY_ORDER.BAGIAN, DELIVERY_ORDER.JENIS_DO, DIVISI"& _ 
                ".NAMA AS NAMA_DIVISI, USERS.NAMA_USER, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN URUT"& _ 
                "AN = 1 THEN DELIVERY_ORDER.DISC_QTY_NOMINAL END AS DISC_QTY_NOMINAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CASE WHEN URUTAN = 1 THEN DELIVERY_ORDER.DISC_QTY_NOMINAL1 END A"& _ 
                "S DISC_QTY_NOMINAL1, DETAIL_DELIVERY_ORDER.SATUAN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DE"& _ 
                "TAIL_DELIVERY_ORDER.URUTAN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            DELIVERY_ORDER INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                DETAIL_DELIVERY_ORDER ON DELIVERY_ORDER.ID_TRANSAKSI = DETAIL_DE"& _ 
                "LIVERY_ORDER.ID_TRANSAKSI LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         BARANG ON BA"& _ 
                "RANG.ID = DETAIL_DELIVERY_ORDER.ID_BARANG LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    DIVISI ON DELIVERY_ORDER.DIVISI = DIVISI.KODE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            USERS ON DELIVERY_ORDER.CRUSER = USERS.ID_USER LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     CUSTOMER ON DELIVERY_ORDER.KODE_CUSTOMER = CUSTOMER.ID"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.LAPORAN_DETAIL_BARANG_DODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.LAPORAN_DETAIL_BARANG_DODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.LAPORAN_DETAIL_BARANG_DODataTable = New DSLaporan.LAPORAN_DETAIL_BARANG_DODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LAPORAN_TRANSFER_GUDANGTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "LAPORAN_TRANSFER_GUDANG"
            tableMapping.ColumnMappings.Add("ID_TRANSAKSI", "ID_TRANSAKSI")
            tableMapping.ColumnMappings.Add("NO_TRANSFER", "NO_TRANSFER")
            tableMapping.ColumnMappings.Add("TGL_PENGAKUAN", "TGL_PENGAKUAN")
            tableMapping.ColumnMappings.Add("NAMA_DIVISI", "NAMA_DIVISI")
            tableMapping.ColumnMappings.Add("KODE", "KODE")
            tableMapping.ColumnMappings.Add("ID_BARANG", "ID_BARANG")
            tableMapping.ColumnMappings.Add("KOLI", "KOLI")
            tableMapping.ColumnMappings.Add("QUANTITY", "QUANTITY")
            tableMapping.ColumnMappings.Add("PCS", "PCS")
            tableMapping.ColumnMappings.Add("SATUAN", "SATUAN")
            tableMapping.ColumnMappings.Add("URUTAN", "URUTAN")
            tableMapping.ColumnMappings.Add("HARGA", "HARGA")
            tableMapping.ColumnMappings.Add("ISI", "ISI")
            tableMapping.ColumnMappings.Add("KONVERSI", "KONVERSI")
            tableMapping.ColumnMappings.Add("PCS_T", "PCS_T")
            tableMapping.ColumnMappings.Add("QUANTITY_T", "QUANTITY_T")
            tableMapping.ColumnMappings.Add("KOLI_T", "KOLI_T")
            tableMapping.ColumnMappings.Add("ST", "ST")
            tableMapping.ColumnMappings.Add("STK", "STK")
            tableMapping.ColumnMappings.Add("NAMA_GUDANG_SUMBER", "NAMA_GUDANG_SUMBER")
            tableMapping.ColumnMappings.Add("NAMA_GUDANG_TUJUAN", "NAMA_GUDANG_TUJUAN")
            tableMapping.ColumnMappings.Add("NAMA", "NAMA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Maspion.My.MySettings.Default.MaspionConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        V_D_TRANSFER_T_TERIMA.ID_TRANSAKSI, RIGHT(V_D_TRANSFER_T_TERIMA.NO_"& _ 
                "TRANSFER, 6) AS NO_TRANSFER, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V_D_TRANSFER_T_TERIMA.TG"& _ 
                "L_PENGAKUAN, DIVISI.NAMA AS NAMA_DIVISI, BARANG.KODE, V_D_TRANSFER_T_TERIMA.ID_B"& _ 
                "ARANG, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V_D_TRANSFER_T_TERIMA.KOLI, V_D_TRANSFER_T_TER"& _ 
                "IMA.QUANTITY, V_D_TRANSFER_T_TERIMA.PCS, V_D_TRANSFER_T_TERIMA.SATUAN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  V_D_TRANSFER_T_TERIMA.URUTAN, V_D_TRANSFER_T_TERIMA.HARGA, V_D"& _ 
                "_TRANSFER_T_TERIMA.ISI, V_D_TRANSFER_T_TERIMA.KONVERSI, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   V_D_TRANSFER_T_TERIMA.PCS_T, V_D_TRANSFER_T_TERIMA.QUANTITY_T, V_D_TRANSFER_T"& _ 
                "_TERIMA.KOLI_T, V_D_TRANSFER_T_TERIMA.ST, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V_D_TRANSFE"& _ 
                "R_T_TERIMA.STK, GUDANG.NAMA_GUDANG AS NAMA_GUDANG_SUMBER, GUDANG_1.NAMA_GUDANG A"& _ 
                "S NAMA_GUDANG_TUJUAN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         BARANG.NAMA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            V_"& _ 
                "D_TRANSFER_T_TERIMA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TRANSFER_GUDANG ON V_D_"& _ 
                "TRANSFER_T_TERIMA.ID_TRANSAKSI = TRANSFER_GUDANG.ID_TRANSAKSI INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   DIVISI ON TRANSFER_GUDANG.DIVISI = DIVISI.KODE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       BARANG ON V_D_TRANSFER_T_TERIMA.ID_BARANG = BARANG.ID LEF"& _ 
                "T OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GUDANG AS GUDANG_1 ON TRANSFER_GUDANG.GUD"& _ 
                "ANG_TUJUAN = GUDANG_1.KODE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GUDANG ON T"& _ 
                "RANSFER_GUDANG.GUDANG_SUMBER = GUDANG.KODE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSLaporan.LAPORAN_TRANSFER_GUDANGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSLaporan.LAPORAN_TRANSFER_GUDANGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSLaporan.LAPORAN_TRANSFER_GUDANGDataTable = New DSLaporan.LAPORAN_TRANSFER_GUDANGDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSLaporan, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSLaporan, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSLaporan, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSLaporan) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
